{"version":3,"sources":["components/common/panel.tsx","components/pages/home/index.tsx","components/pages/notfound/index.tsx","components/pages/worldmap/map.tsx","components/common/menu.tsx","components/pages/pagewithcontent.tsx","components/pages/worldmap/index.tsx","components/common/player.tsx","components/common/title.tsx","components/pages/aboutme/playerstats.tsx","components/pages/aboutme/index.tsx","components/pages/education/subsection.tsx","components/pages/education/school.tsx","components/pages/education/education.tsx","components/pages/education/index.tsx","components/pages/experience/position.tsx","components/pages/experience/index.tsx","components/common/ground.tsx","components/common/parallax.tsx","components/common/background.tsx","components/common/backtoworld.tsx","components/common/environment.tsx","components/pages/achievements/achievementsmodal.tsx","actions/selectors.tsx","components/pages/achievements/carouselsection.tsx","components/pages/achievements/index.tsx","actions/index.tsx","actions/actiontypes.tsx","components/pages/projects/projectCarousel.tsx","components/pages/projects/projectsModal.tsx","components/pages/projects/index.tsx","App.tsx","serviceWorker.js","reducers/envReducers.tsx","reducers/dataReducers.tsx","reducers/index.tsx","store/index.tsx","index.tsx"],"names":["Panel","title","descrip","remark","btnString","useState","menuBoard","setMenuBoard","window","innerWidth","windowWidth","setWindowWidth","useEffect","handleResize","addEventListener","removeEventListener","className","div","animate","marginTop","transition","duration","ease","times","src","location","pathname","onClick","variants","hidden","opacity","show","initial","delay","to","HomePage","NotFound","circleStyle","backgroundColor","borderRadius","display","position","height","width","Map","history","useHistory","jumpTo","route","push","style","Menu","children","wheelEnabled","direction","dragEnabled","exit","transform","PageWithContent","exitBeforeEnter","WorldMapPage","Player","inMenu","useSelector","state","env","playerCenter","moving","playerInvert","isCenter","isRunning","invert","animationName","Title","text","PlayerStats","halfLength","_skills1","_skills2","data","stats","name","age","occupation","status","skills","toolsUsed","length","slice","map","val","AboutMePage","SubSection","sectionTitle","bulletPoints","pts","setPts","_pts","initBulletPts","School","schoolName","studyPeriod","studyScope","academicComponent","ccaList","awardsList","ccas","setCcas","awards","setAwards","_ccas","initCcas","_awards","initAwards","gpa","sectionList","sect","Education","schoolList","education","sch","EducationPage","Position","role","division","organisation","positionPeriod","descriptionList","descripList","setDescripList","_descrip","index","initDescrip","ExperiencePage","positionList","experience","pos","Ground","ground","setGround","spawnGroundTile","start","right","animationPlayState","spawnGround","_ground","Parallax","image","bg","setBg","spawnParallax","backgroundImage","animationDuration","spawnBackground","_bg","Background","BackToWorld","useLocation","showBack","backToWorld","console","log","Environment","AchievementsModal","achievementRoute","found","achievement","issueDate","issuedBy","achievements","certs","getAchievement","layoutId","key","whileHover","scale","whileTap","fill","xmlns","viewBox","d","CarouselSection","currentPage","setCurrentPage","cardPerPage","setCardPerPage","pagesNum","setPagesNum","carouselItems","useDispatch","includes","indicatorWidthTotal","Array","changePagesNum","extraPage","size","radius","top","cursor","left","indicatorSize","x","drag","defaultEffect","onChangePage","current","previous","center","padding","startIndex","_carouselItems","item","AchievementsPage","match","params","AllActions","EnvActions","changeMoving","payload","type","changeEnvironment","setPlayerCenter","setBackWorld","setPlayerInvert","ProjectCarousel","projects","projectRoute","imageUrlList","tags","join","textMotion","rest","color","hover","arrowMotion","marginRight","ProjectsModal","selectedImage","setSelectedImage","project","projectTitle","projectPeriod","builtWith","projectLink","getProject","img","_images","backgroundSize","href","target","ProjectsPage","LocationManager","dispatch","changeMovingEnv","path","App","basename","process","exact","component","AchievemmentsPage","Boolean","hostname","initialEnvState","envBg","initialDataState","rootReducer","combineReducers","action","Store","createStore","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c20daaa3.chunk.js","sourcesContent":["import React, {  useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../../css/homepanel.css';\r\nimport '../../css/misc.css';\r\nimport {motion} from 'framer-motion';\r\n\r\ninterface IPanel{\r\n    title: string,\r\n    descrip: any,\r\n    remark: string,\r\n    btnString: string\r\n}\r\n\r\n\r\nconst Panel: React.FC<IPanel> = ({\r\n    title, descrip, remark, btnString\r\n}) => {\r\n\r\n    const [menuBoard, setMenuBoard] = useState<string>(\"/assets/menu_1.png\");\r\n    const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n\r\n    const fadeIn = {\r\n        hidden: {\r\n            opacity: 0\r\n        },\r\n        show: {\r\n            opacity: 1\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        // console.log(window.innerWidth)\r\n        function handleResize(){\r\n            setWindowWidth(window.innerWidth);\r\n        }\r\n        window.addEventListener('resize', handleResize)\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize)   \r\n        }\r\n        \r\n    })\r\n\r\n    useEffect(() => {\r\n         if(window.innerWidth < 500){\r\n            setMenuBoard(\"/assets/menu_1_mobile.png\");\r\n        }else{\r\n            setMenuBoard(\"/assets/menu_1.png\");\r\n        }\r\n    }, [windowWidth])\r\n\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <motion.div className=\"col-12 col-md-10 col-lg-5 mx-auto position-relative home-panel d-flex flex-col justify-content-end\"\r\n                    animate={{\r\n                        marginTop: [\"-60vh\", \"-20vh\", \"-24vh\", \"-20vh\"]\r\n                    }}\r\n                    transition={{\r\n                        duration: .8,\r\n                        ease: \"easeOut\",\r\n                        times: [0, 0.8, 0.9, 1]      \r\n                    }}\r\n                >\r\n                    <div className=\"m-0 p-0 w-100 menu-chains \"></div>\r\n                    <div className=\"m-0 p-0 menu-board-wrapper w-100 d-flex justify-content-end\">\r\n                        <div className=\"h-100 w-100 d-flex flex-column justify-content-end text-white p-0 mt-auto\">\r\n                            <img src={menuBoard} className=\"board-menu\"/>\r\n\r\n                            <div className=\"menu-text w-100 \">\r\n                                <div className=\"mx-5\">\r\n                                    {(window.location.pathname==\"/\")?<h1 className=\"size-60\">{title}</h1>:<h1 className=\"size-60 color-red\">{title}</h1>}\r\n                                    {descrip}\r\n                                    <p className=\"mt-3 size-30 color-orange\">{remark}</p>\r\n                                    \r\n                                    <motion.div\r\n                                        className=\"p-0 m-0 mb-3 mt-2\"\r\n                                        onClick={() => {\r\n                                        }}\r\n                                        variants={fadeIn}\r\n                                        initial=\"hidden\"\r\n                                        animate=\"show\"\r\n                                        transition={{\r\n                                            delay: 1,\r\n                                            duration: 1.4,\r\n                                            ease: \"easeOut\"  \r\n                                        }}\r\n                                        \r\n                                    >\r\n                                        <Link\r\n                                            className=\"start-btn size-40\"\r\n\r\n                                            to=\"/worldmap\"\r\n                                        >{btnString}</Link>\r\n                                    </motion.div>\r\n                                    \r\n                                    \r\n                                </div>\r\n                               \r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                   \r\n                    \r\n                </motion.div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Panel;","import React, { Component } from 'react';\r\nimport Panel from '../../common/panel';\r\n\r\n\r\nfunction HomePage() {\r\n    return (\r\n        <div>\r\n            <Panel\r\n                title=\"hello world\"\r\n                descrip={<p className=\"size-40 mb-3 mt-4\">i'm <span className=\"color-red\">Kar Wei</span>, an aspiring software developer and penetration tester</p>}\r\n                remark=\"find out more about me!\"\r\n                btnString=\"start\"\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\r\n\r\nimport Panel from '../../common/panel';\r\n\r\nfunction NotFound() {\r\n    return (\r\n        <div>\r\n            <Panel\r\n                title=\":( not found\"\r\n                descrip={<p className=\"size-40 mb-3 mt-4\">the page you are looking for is either under construction or doesn't exist!</p>}\r\n                remark=\"\"\r\n                btnString=\"Back to World Map\"\r\n            />\r\n\r\n            {/* <Player/>\r\n\r\n            <Environment/> */}\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NotFound;","import React, { CSSProperties } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport '../../../css/misc.css';\r\nimport '../../../css/worldmap.css';\r\n\r\nconst circleStyle: CSSProperties = {\r\n    backgroundColor: \"#E0E0E0\",\r\n    borderRadius: \"50%\",\r\n    display: \"inline-block\",\r\n    position: \"relative\",\r\n    height: \"4vw\",\r\n    width: \"4vw\"\r\n}\r\n\r\nfunction Map() {\r\n\r\n    const history = useHistory();\r\n\r\n    const jumpTo = (route: string) => {\r\n        history.push(`/${route}`)\r\n    }\r\n\r\n    return (\r\n        <div className=\"map\">\r\n            <h1 className=\"mt-5 size-50 color-red\">world map</h1>\r\n\r\n            <div className=\"row text-white mx-3 map-links\">\r\n                <div className=\"col-12 col-lg-6\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <div className=\"d-flex flex-row map-link mt-4\"\r\n                                onClick = {() => {jumpTo(\"\")}}\r\n                            >\r\n                                <div className=\"circle-point\"\r\n                                style={circleStyle}>\r\n                                    <div className=\"circle-point-inside\"></div>\r\n                                </div>\r\n                                <p className=\"size-45 my-auto ml-4\">Home</p>\r\n                            </div>\r\n                            <div className=\"d-flex flex-row map-link mt-4\"\r\n                                onClick = {() => {jumpTo(\"aboutme\")}}\r\n                            >\r\n                                <div className=\"circle-point\"\r\n                                style={circleStyle}>\r\n                                    <div className=\"circle-point-inside\"></div>\r\n                                </div>\r\n                                <p className=\"size-45 my-auto ml-4\">about me</p>\r\n                            </div>\r\n                            \r\n                            <div className=\"d-flex flex-row map-link mt-4\"\r\n                                onClick = {() => {jumpTo(\"education\")}}\r\n                            >\r\n                                <div className=\"circle-point\"\r\n                                style={circleStyle}>\r\n                                    <div className=\"circle-point-inside\"></div>\r\n                                </div>\r\n                                <p className=\"size-45 my-auto ml-4\">education</p>\r\n                            </div>\r\n                            \r\n                            <div className=\"d-flex flex-row map-link mt-4\"\r\n                                onClick = {() => {jumpTo(\"experience\")}}\r\n                            >\r\n                                <div className=\"circle-point\"\r\n                                style={circleStyle}>\r\n                                    <div className=\"circle-point-inside\"></div>\r\n                                </div>\r\n                                <p className=\"size-45 my-auto ml-4\">experience</p>\r\n                            </div>\r\n\r\n                            <div className=\"d-flex flex-row map-link mt-4\"\r\n                                onClick = {() => {jumpTo(\"achievements\")}}\r\n                            >\r\n                                <div className=\"circle-point\"\r\n                                style={circleStyle}>\r\n                                    <div className=\"circle-point-inside\"></div>\r\n                                </div>\r\n                                <p className=\"size-45 my-auto ml-4\">achievements</p>\r\n                            </div>\r\n\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 col-lg-6\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <div className=\"d-flex flex-row map-link mt-4\"\r\n                                onClick = {() => {jumpTo(\"projects\")}}\r\n                            >\r\n                                <div className=\"circle-point\"\r\n                                style={circleStyle}>\r\n                                    <div className=\"circle-point-inside\"></div>\r\n                                </div>\r\n                                <p className=\"size-45 my-auto ml-4\">projects</p>\r\n                            </div>\r\n                            <div className=\"d-flex flex-row map-link mt-4\"\r\n                                onClick = {() => {jumpTo(\"aboutthissite\")}}\r\n                            >\r\n                                <div className=\"circle-point\"\r\n                                style={circleStyle}>\r\n                                    <div className=\"circle-point-inside\"></div>\r\n                                </div>\r\n                                <p className=\"size-45 my-auto ml-4\">about site</p>\r\n                            </div>\r\n\r\n                            <div className=\"d-flex flex-row map-link mt-4\"\r\n                                onClick = {() => {jumpTo(\"findme\")}}\r\n                            >\r\n                                <div className=\"circle-point\"\r\n                                style={circleStyle}>\r\n                                    <div className=\"circle-point-inside\"></div>\r\n                                </div>\r\n                                <p className=\"size-45 my-auto ml-4\">find me</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Map;","import React from 'react';\r\nimport '../../css/misc.css';\r\nimport '../../css/menu.css';\r\nimport {motion} from 'framer-motion';\r\nimport {Scroll} from 'framer'\r\n\r\n\r\n\r\nconst Menu: React.FC = ({children}) => {\r\n    return (\r\n        <Scroll\r\n            height=\"100%\"\r\n            width=\"100%\"\r\n            wheelEnabled={true}\r\n            direction=\"vertical\"\r\n            dragEnabled={true}\r\n        >\r\n            <motion.div\r\n                exit={{transform: \"scale(0)\"}}\r\n                initial={{transform: \"scale(0)\"}}\r\n                animate={{transform: \"scale(1)\"}}\r\n                className=\"container-fluid\">\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-11 col-md-10 col-lg-8 ml-auto menu\">\r\n                                {children}\r\n                            {/* <h1 className=\"mt-4 size-50 color-red\">world map</h1> */}\r\n                            {/* {children} */}\r\n                        </div>\r\n                    </div>\r\n\r\n                \r\n            </motion.div>\r\n        </Scroll>\r\n        \r\n    );\r\n};\r\n\r\n\r\nexport default Menu;","import { AnimatePresence } from 'framer-motion';\r\nimport React from 'react';\r\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\r\nimport Menu from '../common/menu';\r\n\r\n\r\nconst PageWithContent: React.FC = ({children}) => {\r\n    return (\r\n        <div>\r\n            {/* <ReactCSSTransitionGroup\r\n                transitionAppear = {true}\r\n                transitionAppearTimeout = {600}\r\n                transitionEnterTimeout={600}\r\n                transitionLeaveTimeout={200}\r\n                transitionName={'SlideIn'}\r\n            >\r\n                <Menu>\r\n                    {children}\r\n                </Menu>\r\n                \r\n            </ReactCSSTransitionGroup> */}\r\n            <AnimatePresence exitBeforeEnter>\r\n                <Menu>\r\n                    {children}\r\n                </Menu>\r\n\r\n            </AnimatePresence>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default PageWithContent;","import React from 'react';\r\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\r\nimport Menu from '../../common/menu';\r\nimport Map from './map';\r\nimport PageWithContent from '../pagewithcontent';\r\n\r\n\r\nfunction WorldMapPage() {\r\n\r\n    return (\r\n        <div>\r\n\r\n            {/* <ReactCSSTransitionGroup\r\n                transitionAppear = {true}\r\n                transitionAppearTimeout = {600}\r\n                transitionEnterTimeout={600}\r\n                transitionLeaveTimeout={200}\r\n                transitionName={'PopIn'}\r\n            >\r\n                <Menu>\r\n                    <Map/>\r\n                </Menu>\r\n                \r\n            </ReactCSSTransitionGroup> */}\r\n\r\n            {/* <AnimatePresence exitBeforeEnter>\r\n                <Menu>\r\n                    <Map/>\r\n                </Menu>\r\n            </AnimatePresence> */}\r\n\r\n            <PageWithContent>\r\n                <Map/>\r\n            </PageWithContent>\r\n               \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WorldMapPage;","import React, { Component, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport \"../../css/player.css\";\r\nimport { AppState, IEnvState } from '../../types/interfaces';\r\n\r\ninterface IPlayerProps{\r\n    inMenu?: boolean\r\n}\r\n\r\nconst Player: React.FC<IPlayerProps> = ({inMenu}) => {\r\n\r\n    const [isCenter, isRunning, invert] = useSelector((state: AppState) => {\r\n        return [state.env.playerCenter, state.env.moving, state.env.playerInvert]\r\n    })\r\n\r\n\r\n    return (\r\n        <div className = {\r\n            (isCenter) ? \"player center-middle\" : \"player\"\r\n        } style={{\r\n            animationName: (isRunning && !inMenu)? \"animate-running\": \"animate-idle\",\r\n            transform: `scaleX(${() => {\r\n                if(invert) return -1;\r\n                else if(invert && isRunning) return 1;\r\n                else return 1.1;\r\n            }})`\r\n        }}>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Player;","import React from 'react';\r\nimport '../../css/misc.css';\r\n\r\ninterface ITitle{\r\n    text: string\r\n}\r\n\r\nconst Title: React.FC<ITitle> = ({text}) => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"color-orange size-50 text-left mb-3 title\">\r\n                {text}\r\n            </h1>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default Title;","import React from 'react';\r\nimport Player from '../../common/player';\r\nimport '../../../css/misc.css';\r\nimport '../../../css/playerstats.css';\r\nimport Title from '../../common/title';\r\nimport { useSelector } from 'react-redux';\r\nimport { AppState, IStats } from '../../../types/interfaces';\r\n\r\n\r\nconst PlayerStats: React.FC = () => {\r\n\r\n    const {\r\n        name,\r\n        age,\r\n        occupation,\r\n        status,\r\n        skills,\r\n        toolsUsed\r\n    } = useSelector((state: AppState): IStats => {\r\n        return state.data.stats;\r\n    })\r\n    let halfLength: number, _skills1: string[], _skills2: string[];\r\n\r\n    halfLength = ~~(skills.length / 2);\r\n    _skills1 = skills.slice(0, halfLength);\r\n    _skills2 = skills.slice(halfLength);\r\n\r\n\r\n    return (\r\n        <div className=\"player-stat\">\r\n            <Title text=\"player stats\"/>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-lg-4 text-center\">\r\n                    <Player inMenu={true}/>\r\n                    <p className=\"mt-4 size-50 color-red\">Lv. 1</p>\r\n                </div>\r\n                <div className=\"col-12 col-lg-8\">\r\n                    <div className=\"orange-panel size-30 text-white text-left\">\r\n                        <div className=\"d-flex flex-row\">\r\n                            <p><span className=\"color-cyan\">name:</span> {name}</p>\r\n                            <p className=\"tab\"><span className=\"color-cyan\">age:</span> {age}</p>\r\n                        </div>\r\n                        <p><span className=\"color-cyan\">occupation:</span> {occupation}</p>\r\n                        <p><span className=\"color-cyan\">status:</span><br/><span className=\"size-25\">{status}</span></p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row mt-3 second-row\">\r\n                <div className=\"col-12 col-lg-4\">\r\n                    <div className=\"orange-panel size-25 text-white text-left p-3 player-skills\">\r\n                        <p className=\"color-purple size-35 mb-0\">Tools Used</p>\r\n                        <ul>\r\n                            {\r\n                                toolsUsed.map((val) => {\r\n                                    return <li>{val}</li>\r\n                                })\r\n                            }\r\n                        </ul>\r\n                        \r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"col-12 col-lg-8\">\r\n                    <div className=\"orange-panel size-25 text-white text-left p-3 player-skills\">\r\n                        <p className=\"color-lightblue size-35 mb-0\">skills</p>\r\n                        <div className=\"row px-0\">\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <ul>\r\n                                    {\r\n                                        _skills1.map((val) => {\r\n                                            return <li>{val}</li>\r\n                                        })\r\n                                    }\r\n                                </ul>\r\n                            </div>\r\n\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <ul>\r\n                                    {\r\n                                        _skills2.map((val) => {\r\n                                            return <li>{val}</li>\r\n                                        })\r\n                                    }\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PlayerStats;","import React from 'react';\r\nimport PageWithContent from '../pagewithcontent';\r\n\r\nimport PlayerStats from './playerstats';\r\n\r\nfunction AboutMePage() {\r\n\r\n    return (\r\n        <div>\r\n            <PageWithContent>\r\n                <PlayerStats/>\r\n            </PageWithContent>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AboutMePage;","import React, { ReactText, useEffect, useState } from 'react';\r\nimport '../../../css/misc.css';\r\nimport { ISubSection } from '../../../types/interfaces';\r\n\r\nconst SubSection: React.FC<ISubSection> = ({\r\n    sectionTitle,\r\n    bulletPoints\r\n}) => {\r\n    const [pts, setPts] = useState<JSX.Element[]>([]);\r\n\r\n    const initBulletPts = () => {\r\n        let _pts: JSX.Element[] = []\r\n        bulletPoints.map((val) => {\r\n            // console.log(val);\r\n            _pts.push(<div className=\"col-12 col-lg-6\">\r\n                    <ul>\r\n                        <li>{val}</li>\r\n                    </ul>\r\n                </div>)\r\n        })\r\n        setPts(_pts);\r\n    }\r\n\r\n    useEffect(() => {\r\n        initBulletPts();\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"sub-section\">\r\n            <p className=\"color-cyan mb-1\">{sectionTitle}</p>\r\n            <hr/>\r\n            <div className=\"row size-25\">\r\n                {pts}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default SubSection;","import React, { useEffect, useState } from 'react';\r\nimport { ISchool, ISubSection } from '../../../types/interfaces';\r\nimport SubSection from './subsection';\r\n\r\n\r\nconst School: React.FC<ISchool> = ({\r\n    schoolName,\r\n    studyPeriod,\r\n    studyScope,\r\n    academicComponent,\r\n    ccaList,\r\n    awardsList\r\n}) => {\r\n    const [ccas, setCcas] = useState<JSX.Element[]>([]);\r\n    const [awards, setAwards] = useState<JSX.Element[]>([]);\r\n\r\n    const initCcas = () => {\r\n        let _ccas: JSX.Element[] = [];\r\n        ccaList.map((val) => {\r\n            _ccas.push(<li>{val}</li>)\r\n        })\r\n        setCcas(_ccas);\r\n    }\r\n\r\n    const initAwards = () => {\r\n        let _awards: JSX.Element[] = [];\r\n        awardsList.map((val) => {\r\n            _awards.push(<li>{val}</li>)\r\n        })\r\n        setAwards(_awards);\r\n    }\r\n\r\n    useEffect(() => {\r\n        initCcas();\r\n        initAwards();\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"row text-white text-left\">\r\n\r\n                <div className=\"col-12\">\r\n                    <h2 className=\"size-50\">{schoolName}</h2>\r\n                </div>\r\n\r\n                <div className=\"col-12 col-lg-3 \">\r\n                    <p className=\"size-30 color-grey\">{studyPeriod}</p>\r\n                </div>\r\n\r\n                <div className=\"col-12 col-lg-9 \">\r\n                    <p className=\"size-30 color-grey\">{studyScope}</p>\r\n                </div>\r\n\r\n                <div className=\"row w-100 m-0 p-0 size-30\">\r\n                    <div className=\"col-12 section\">\r\n                        <div className=\"section-header text-center academic-border\">\r\n                            <p className=\"color-green size-35\">academic</p> \r\n                        </div>\r\n                        \r\n                        <div>\r\n                            {(academicComponent.gpa != \"\")? <p>cumulative gpa: {academicComponent.gpa}</p>: null}\r\n                            {\r\n                                academicComponent.sectionList.map((sect: ISubSection) => {\r\n                                    return (\r\n                                        <SubSection\r\n                                            sectionTitle = {sect.sectionTitle}\r\n                                            bulletPoints = {sect.bulletPoints}\r\n                                        />\r\n                                    )\r\n                                })\r\n                            }\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row w-100 m-0 p-0 size-30\">\r\n                    <div className=\"col-12 section\">\r\n                        <div className=\"section-header text-center cca-border\">\r\n                            <p className=\"color-blue size-35\">CCA</p> \r\n                        </div>\r\n                        \r\n                        <div>\r\n                            <ul>\r\n                                {ccas}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row w-100 m-0 p-0 size-30\">\r\n                    <div className=\"col-12 section\">\r\n                        <div className=\"section-header text-center awards-border\">\r\n                            <p className=\"color-red size-35\">awards</p> \r\n                        </div>\r\n                        \r\n                        <div>\r\n                            <ul>\r\n                                {awards}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default School;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport '../../../css/education.css';\r\nimport { AppState, ISchool } from '../../../types/interfaces';\r\nimport School from './school';\r\nimport SubSection from './subsection';\r\n\r\n\r\n\r\n\r\nconst Education: React.FC = () => {\r\n    const schoolList: ISchool[] = useSelector((state: AppState): ISchool[] => {\r\n        return state.data.education.schoolList;\r\n    } )\r\n\r\n    return (\r\n        <div className=\"education\">\r\n\r\n            {\r\n                schoolList.map((sch) => {\r\n                    return (\r\n                        <div>\r\n                            <School\r\n                                schoolName = {sch.schoolName}\r\n                                studyPeriod = {sch.studyPeriod}\r\n                                studyScope = {sch.studyScope}\r\n                                academicComponent = {sch.academicComponent}\r\n                                ccaList = {sch.ccaList}\r\n                                awardsList = {sch.awardsList}\r\n                            /> \r\n\r\n                            <div className=\"mt-5\"></div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Education;","import React from 'react';\r\nimport Title from '../../common/title';\r\nimport PageWithContent from '../pagewithcontent';\r\nimport Education from './education';\r\n\r\nfunction EducationPage() {\r\n\r\n    return (\r\n        <div>\r\n            <PageWithContent>\r\n                <Title\r\n                    text = \"player education\"\r\n                />\r\n                <Education/>\r\n            </PageWithContent>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EducationPage;","import React, { useState, useEffect } from 'react';\r\nimport '../../../css/experience.css';\r\nimport '../../../css/misc.css';\r\nimport { IPosition } from '../../../types/interfaces';\r\n\r\n\r\nconst Position: React.FC<IPosition> = ({\r\n    role,\r\n    division,\r\n    organisation,\r\n    positionPeriod,\r\n    descriptionList\r\n}) => {\r\n    const [descripList, setDescripList] = useState<JSX.Element[]>([]);\r\n\r\n    const initDescrip = () => {\r\n        let _descrip: JSX.Element[] = [];\r\n        descriptionList.map((val, index) => {\r\n            _descrip.push(<p>{val}</p>)\r\n        })\r\n        setDescripList(_descrip);\r\n    }\r\n\r\n    useEffect(() => {\r\n        initDescrip();\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"position text-left text-white\">\r\n            <div>\r\n                <p className=\"size-40\"><span className=\"color-red\">{role}</span>, {division}</p>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-lg-6\">\r\n                    <p className=\"color-darkpurple size-30\">{organisation}</p>\r\n                </div>\r\n                \r\n                <div className=\"col-12 col-lg-6\">\r\n                    <p className=\"color-darkpurple size-30\">{positionPeriod}</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='size-25'>\r\n                {descripList}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n// function Position(props) {\r\n//     const [descripList, setDescripList] = useState([]);\r\n\r\n//     const initDescrip = () => {\r\n//         let _descrip = [];\r\n//         props.descripList.map((val, index) => {\r\n//             _descrip.push(<p>{val}</p>)\r\n//         })\r\n//         setDescripList(_descrip);\r\n//     }\r\n\r\n//     useEffect(() => {\r\n//         initDescrip();\r\n//     }, [])\r\n\r\n//     return (\r\n//         <div className=\"position text-left text-white\">\r\n//             <div>\r\n//                 <p className=\"size-40\"><span className=\"color-red\">{props.role}</span>, {props.division}</p>\r\n//             </div>\r\n//             <div className=\"row\">\r\n//                 <div className=\"col-12 col-lg-6\">\r\n//                     <p className=\"color-darkpurple size-30\">{props.organisation}</p>\r\n//                 </div>\r\n                \r\n//                 <div className=\"col-12 col-lg-6\">\r\n//                     <p className=\"color-darkpurple size-30\">{props.positionPeriod}</p>\r\n//                 </div>\r\n//             </div>\r\n\r\n//             <div className='size-25'>\r\n//                 {descripList}\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\nexport default Position;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { AppState, IPosition } from '../../../types/interfaces';\r\nimport Title from '../../common/title';\r\nimport PageWithContent from '../pagewithcontent';\r\nimport Position from './position';\r\n\r\nconst ExperiencePage: React.FC = () => {\r\n    const positionList: IPosition[] = useSelector((state: AppState):IPosition[] => {\r\n        return state.data.experience.positionList;\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <PageWithContent>\r\n                <Title\r\n                    text = \"player work experience\"\r\n                />\r\n                {\r\n                    positionList.map((pos: IPosition) => {\r\n                        return (\r\n                            <Position\r\n                                role = {pos.role}\r\n                                division = {pos.division}\r\n                                organisation = {pos.organisation}\r\n                                positionPeriod = {pos.positionPeriod}\r\n                                descriptionList = {pos.descriptionList}\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n            </PageWithContent>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ExperiencePage;","import React, { useEffect, useState } from 'react';\r\nimport {useSelector} from 'react-redux'\r\nimport {AppState, IEnvState} from '../../types/interfaces'\r\n\r\nimport '../../css/ground.css';\r\n\r\n\r\nfunction Ground() {\r\n\r\n    const [ground, setGround] = useState<JSX.Element[]>([]);\r\n    // const [moving, setMoving] = useState(moving);\r\n\r\n    const moving = useSelector((state: AppState) => {\r\n        return state.env.moving\r\n    })\r\n\r\n    const spawnGroundTile = (start: number) => {\r\n        if(!moving){\r\n            let spawnedGroundTile = <div \r\n            className=\"ground position-fixed\" \r\n            style = {{\r\n                animationPlayState: \"paused\",\r\n                right: `${start}vw`\r\n            }}\r\n            ></div>\r\n\r\n            return spawnedGroundTile;\r\n        }else{\r\n            let spawnedGroundTile = <div \r\n                className=\"ground position-fixed\" \r\n                style = {{\r\n                    right: `${start}vw`,\r\n                    animationPlayState: \"running\"\r\n                }}\r\n            ></div>\r\n\r\n            return spawnedGroundTile;\r\n        }\r\n    }\r\n\r\n    const spawnGround = () => {\r\n        let _ground: JSX.Element[] = [];\r\n        _ground.push(spawnGroundTile(0));\r\n        _ground.push(spawnGroundTile(-100));\r\n        setGround(_ground);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        spawnGround();\r\n    }, [])\r\n\r\n    // spawn ground again when moving changes\r\n    useEffect(() => {\r\n        spawnGround();\r\n    }, [moving, window.innerWidth])\r\n\r\n\r\n    return (\r\n        <div className=\"text-center\">\r\n            {ground}\r\n            <div className=\"position-fixed text-white text-center footer size-20\"\r\n            >\r\n                <p className=\"m-0 p-0\">designed and coded by me in reactjs :D</p>\r\n                <p>© 2020 Loh Kar Wei All Rights Reserved</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Ground;","import React, { Component, useEffect, useState } from 'react';\r\nimport '../../css/background.css';\r\nimport {AppState, IParallax} from './../../types/interfaces'\r\nimport {useSelector} from 'react-redux'\r\nimport {IEnvState} from '../../types/interfaces'\r\n\r\nconst Parallax: React.FC<IParallax> = ({image, index, children}) => {\r\n    const [bg, setBg] = useState<JSX.Element[]>([]);\r\n\r\n    const moving = useSelector((state: AppState) => {\r\n        return state.env.moving\r\n    })\r\n\r\n    const spawnParallax = (start: number) => {\r\n        if(!moving){\r\n            let spawnedBg = <div \r\n                className=\"parallax\" \r\n                style={{\r\n                    right: `${start}vw`,\r\n                    backgroundImage: `url('${image}')`,\r\n                    animationPlayState: \"paused\"\r\n                }}\r\n            ></div>\r\n            \r\n            return spawnedBg;\r\n        }else{\r\n            let spawnedBg = <div \r\n                className=\"parallax\" \r\n                style={{\r\n                    right: `${start}vw`,\r\n                    backgroundImage: `url('${image}')`,\r\n                    animationDuration: `${index}s`,\r\n                    animationPlayState: \"running\"\r\n                }}\r\n            ></div>\r\n\r\n            return spawnedBg;\r\n        }\r\n    }\r\n\r\n    const spawnBackground = () => {\r\n        let _bg = [];\r\n        _bg.push(spawnParallax(0));\r\n        _bg.push(spawnParallax(-100));\r\n        setBg(_bg);\r\n    }\r\n\r\n    useEffect(() => {\r\n        spawnBackground();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        spawnBackground();\r\n    }, [moving])\r\n\r\n\r\n    return (\r\n        <div className=\"w-100 h-100\">\r\n            {bg}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Parallax;","import React, { Component } from 'react';\r\nimport {useSelector} from 'react-redux'\r\nimport {IEnvState} from '../../types/interfaces'\r\n\r\n// components\r\nimport Parallax from './parallax';\r\n\r\n\r\nfunction Background() {\r\n    const parallax_1 = \"/assets/forest_bg.png\";\r\n    const parallax_2 = \"/assets/forest_parallax_2_small.png\";\r\n    const parallax_3 = \"/assets/forest_parallax_3_small.png\";\r\n    const parallax_4 = \"/assets/forest_parallax_4_med.png\";\r\n\r\n    // const moving = useSelector((state: IEnvState) => {\r\n    //     return state.env.moving\r\n    // })\r\n\r\n    return (\r\n        <div>\r\n            <Parallax image={parallax_1} index={0}/>\r\n            <Parallax image={parallax_2} index={24} />\r\n            <Parallax image={parallax_3} index={16}/>\r\n            <Parallax image={parallax_4} index={10}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Background;","import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport '../../css/misc.css';\r\nimport { AppState, IEnvState } from '../../types/interfaces';\r\nimport {motion} from 'framer';\r\n\r\nfunction BackToWorld() {\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n    const showBack = useSelector((state: AppState) => {\r\n        return state.env.backToWorld\r\n    })\r\n\r\n\r\n    const backToWorld = () => {\r\n        history.push(\"/worldmap\")\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(\"Window location changed\");\r\n    }, [location])\r\n\r\n    return (\r\n        <div className=\"back-world\"\r\n            // whileHover={{\r\n            //     scale: 1.1\r\n            // }}\r\n            // whileTap = {{\r\n            //     scale: 0.8\r\n            // }}\r\n        >\r\n            <div\r\n                onClick={() => {backToWorld()}}\r\n                className = {(showBack) ? \"d-flex flex-row text-white show\" : \"d-flex flex-row text-white hide\"}\r\n            >\r\n                <div className=\"back-world-icon\"></div>\r\n                <p className=\"size-30 my-auto text-left ml-3\">back to world map</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BackToWorld;","import React, { Component } from 'react';\r\n\r\nimport Ground from './ground';\r\nimport Background from './background';\r\nimport BackToWorld from './backtoworld';\r\n\r\n\r\nfunction Environment() {\r\n    return (\r\n        <div className=\"w-100 h-100\">\r\n            <BackToWorld\r\n                // showBack = {props.showBack}\r\n            />\r\n            \r\n            <Ground\r\n                // moving = {props.moving}\r\n            />\r\n            <Background\r\n                // moving = {props.moving}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Environment;","import { AnimatePresence, motion } from 'framer-motion';\r\nimport React, { useState } from 'react';\r\nimport '../../../css/modal.css'\r\nimport '../../../css/misc.css'\r\nimport { AppState, IAchievement } from '../../../types/interfaces';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AllActions } from '../../../actions';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { getAchievement } from '../../../actions/selectors';\r\n\r\ninterface IAchievementsModal{\r\n    route:string\r\n}\r\n\r\nconst AchievementsModal: React.FC<IAchievementsModal> = ({route}) => {\r\n    // const [isVisible, setIsVisble] = useState<boolean>(true);\r\n    // const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    const {achievementRoute, issueDate, title, issuedBy, descripList} = useSelector((state: AppState): IAchievement => {\r\n        return getAchievement(state.data, route);\r\n    })\r\n\r\n    if(route && achievementRoute == \"\"){\r\n        history.push(\"/notfound\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"achievements-modal\">\r\n            <AnimatePresence>\r\n                {(route && \r\n                        <motion.div\r\n                            className=\"modal-container\"\r\n                            exit={{transform: \"scale(0)\"}}\r\n                            initial={{transform: \"scale(0)\"}}\r\n                            animate={{transform: \"scale(1)\"}}\r\n                            layoutId={`achievement-container-${route}`}\r\n                            key = {`achievements-modal-${route}`} \r\n                        >\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12 col-lg-6\">\r\n                                    <motion.div className=\"left-view\"\r\n                                        layoutId={`achievement-image-${route}`}\r\n                                    >\r\n                                        <img\r\n                                            src={`/assets/achievements/${achievementRoute}.jpg`}  \r\n                                        />\r\n                                    </motion.div>\r\n                                </div>\r\n                                <div className=\"col-12 col-lg-6 text-left\">\r\n                                    <motion.div className=\"right-view khyay\"\r\n                                    >\r\n                                        <p className=\"color-grey size-20\">{issueDate}</p>\r\n                                        <p className=\"size-40\">{achievementRoute}</p>\r\n                                        <p className=\"size-20 color-grey\">{issuedBy}</p>\r\n                                        <div style={{height: \"8vh\"}}></div>\r\n                                        <div className=\"descrip-container color-darkgrey khyay\">\r\n                                            {\r\n                                                descripList.map((val) => {\r\n                                                    return <p>{val}</p>\r\n                                                })\r\n                                            }\r\n                                            {/* <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p> */}\r\n                                        </div>\r\n                                    </motion.div>\r\n                                    \r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                            <motion.div className=\"modal-cross\"\r\n                                whileHover={{\r\n                                    scale: 1.2\r\n                                }}\r\n                                whileTap={{\r\n                                    scale: 0.8\r\n                                }}\r\n                            >\r\n                                <Link to=\"/achievements\">\r\n                                    <svg fill=\"#000000\" xmlns=\"http://www.w3.org/2000/svg\"  viewBox=\"0 0 30 30\" width=\"240px\" height=\"240px\"><path d=\"M25.707,6.293c-0.195-0.195-1.805-1.805-2-2c-0.391-0.391-1.024-0.391-1.414,0c-0.195,0.195-17.805,17.805-18,18c-0.391,0.391-0.391,1.024,0,1.414c0.279,0.279,1.721,1.721,2,2c0.391,0.391,1.024,0.391,1.414,0c0.195-0.195,17.805-17.805,18-18C26.098,7.317,26.098,6.683,25.707,6.293z\"/><path d=\"M23.707,25.707c0.195-0.195,1.805-1.805,2-2c0.391-0.391,0.391-1.024,0-1.414c-0.195-0.195-17.805-17.805-18-18c-0.391-0.391-1.024-0.391-1.414,0c-0.279,0.279-1.721,1.721-2,2c-0.391,0.391-0.391,1.024,0,1.414c0.195,0.195,17.805,17.805,18,18C22.683,26.098,23.317,26.098,23.707,25.707z\"/></svg>\r\n                                </Link>\r\n                                \r\n                            </motion.div>\r\n                        </motion.div>\r\n                    )\r\n                }\r\n\r\n            </AnimatePresence>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AchievementsModal;","import {IAchievement, IDataState, IProject} from '../types/interfaces';\r\n\r\nexport function getProject(state: IDataState, projectRoute: string): IProject{\r\n    let project: IProject = {\r\n        projectRoute: \"\",\r\n        imageUrlList: [],\r\n        projectTitle: \"\",\r\n        projectPeriod: \"\",\r\n        tags: [],\r\n        builtWith: [],\r\n        projectLink: \"\",\r\n        descripList: []\r\n    }\r\n    state.projects.map((val) => {\r\n        if(val.projectRoute == projectRoute){  \r\n            project = val;\r\n            return;\r\n        }\r\n    })\r\n    \r\n    return project;\r\n    // return state.projects.filter((proj) => proj.projectRoute === projectRoute)[0];\r\n}\r\n\r\nexport function getAchievement(state: IDataState, achievementRoute: string): IAchievement{\r\n    let found = false;\r\n    let achievement: IAchievement = {\r\n        achievementRoute: \"\",\r\n        issueDate: \"\",\r\n        title: \"\",\r\n        issuedBy: \"\",\r\n        descripList: []\r\n    }\r\n    state.achievements.awards.map((val) => {\r\n        if(val.achievementRoute == achievementRoute){\r\n            found = true;\r\n            achievement = val;\r\n            return;\r\n        }   \r\n        \r\n    })\r\n    if(!found){\r\n        state.achievements.certs.map((val) => {\r\n            if(val.achievementRoute == achievementRoute){\r\n                achievement = val;\r\n                return;\r\n            }          \r\n        })\r\n    }\r\n    return achievement;\r\n}","import React, { useEffect, useState } from 'react';\r\nimport '../../../css/misc.css'\r\nimport '../../../css/carousel.css'\r\nimport {Stack, Frame, Page} from 'framer'\r\nimport {motion} from 'framer-motion'\r\nimport {  ICarousel, IAchievement, AppState } from '../../../types/interfaces';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {AllActions} from '../../../actions';\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nconst CarouselSection: React.FC<ICarousel> = ({\r\n    title,\r\n    route\r\n}) => {\r\n    const [currentPage, setCurrentPage] = useState<number>(0);\r\n    const [cardPerPage, setCardPerPage] = useState<number>(3);\r\n    const [pagesNum, setPagesNum] = useState<number>(0);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    // let carouselItems: IAchievement[] = [];\r\n    const carouselItems: IAchievement[] = useSelector((state: AppState) => {\r\n        if(title.includes(\"awards\")) return state.data.achievements.awards;\r\n        else return state.data.achievements.certs;\r\n    })\r\n\r\n\r\n    const indicatorSize = 10\r\n    const indicatorPadding = 10\r\n    const indicatorWidth = [...Array(pagesNum)].length * indicatorSize\r\n    const indicatorPaddingTotal = ([...Array(pagesNum)].length - 1) * indicatorPadding\r\n    const indicatorWidthTotal = indicatorWidth + indicatorPaddingTotal\r\n    const indicatorAlpha = 0.3\r\n\r\n    const changePagesNum = () => {\r\n        let extraPage = (carouselItems.length % cardPerPage == 0)? 0: 1;\r\n        setPagesNum((~~(carouselItems.length / cardPerPage) == 0)? 1 : ~~(carouselItems.length / cardPerPage) + extraPage)\r\n        // console.log(pagesNum);\r\n    }\r\n\r\n    useEffect(() => {\r\n        changePagesNum();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        changePagesNum()\r\n    }, [cardPerPage])\r\n\r\n    useEffect(() => {\r\n        if(window.innerWidth < 900){\r\n            // console.log(\"window smol!\")\r\n            setCardPerPage(2);\r\n        }else{\r\n            setCardPerPage(3);\r\n        }\r\n    }, [window.innerWidth])\r\n\r\n    return (\r\n        <div className=\"carousel-section size-40\">\r\n            <div className=\"d-flex flex-row justify-content-between\">\r\n                <p className=\"color-cyan mb-1 text-left\">{title}</p>\r\n                <div className=\"d-flex flex-row\">\r\n                    <motion.div\r\n                        whileTap={{\r\n                            scale: 0.8\r\n                        }}\r\n                    >\r\n                        <img\r\n                            src=\"/assets/cyan_arrow.png\"\r\n                            style={{\r\n                                transform: \"rotate(90deg)\"\r\n                            }}\r\n                            className=\"carousel-btn \"\r\n                            onClick={() => {\r\n                                ((currentPage - 1) < 0)?setCurrentPage(pagesNum - 1): setCurrentPage(currentPage -1)\r\n                                // setCurrentPage(currentPage - 1)\r\n                            }}\r\n                        />\r\n                    </motion.div>\r\n                    \r\n                    <div className=\" indicator-wrapper\">\r\n                        {[...Array(pagesNum)].map((val, index) => {\r\n                            // console.log(`creating new indicator!`)\r\n                            return (\r\n                                <Frame\r\n                                    // Visual & layout\r\n                                    size={indicatorSize}\r\n                                    radius={30}\r\n                                    backgroundColor=\"#02FFF0\"\r\n                                    top=\"1vh\"\r\n                                    style={{\r\n                                        cursor: \"pointer\",\r\n                                        left: `calc(50% + ${index} * ${indicatorSize +\r\n                                        indicatorPadding}px)`\r\n                                    }}\r\n                                    x={-indicatorWidthTotal / 2}\r\n                                    // Animation\r\n                                    opacity={indicatorAlpha}\r\n                                    animate={{\r\n                                        opacity: currentPage === index ? 1 : indicatorAlpha\r\n                                    }}\r\n                                    // Required by React\r\n                                    key={index}\r\n                                    onClick={() => {\r\n                                        // console.log(`indicator ${index} pressed!`)\r\n                                        setCurrentPage(index)\r\n                                    }}\r\n                                    className=\"\"\r\n                                    drag={false}\r\n                                />\r\n                            );\r\n                        })}\r\n                    </div>\r\n\r\n                    <motion.div\r\n                        whileTap={{\r\n                            scale: 0.8\r\n                        }}\r\n                    >\r\n                        <img\r\n                            src=\"/assets/cyan_arrow.png\"\r\n                            style={{\r\n                                transform: \"rotate(-90deg)\"\r\n                            }}\r\n                            className=\"carousel-btn\"\r\n                            onClick={() => {\r\n                                ((currentPage + 1) >= pagesNum)? setCurrentPage(0) : setCurrentPage(currentPage + 1)\r\n                            }}\r\n                        />\r\n                    </motion.div>\r\n                    \r\n                        \r\n                </div>\r\n            </div>\r\n           \r\n            <hr/>\r\n\r\n            <Page\r\n                defaultEffect=\"wheel\"\r\n                currentPage={(currentPage)?currentPage:0}\r\n                // this is for indicators\r\n                onChangePage={(current, previous) => {\r\n                    setCurrentPage(current)\r\n                }}\r\n                // width=\"56vw\"\r\n                // height=\"40vh\"\r\n                center={false}\r\n                className=\" page-container \"\r\n                padding={0}\r\n            >\r\n\r\n                {\r\n                    [...Array(pagesNum)].map((val, index) => {\r\n                        let startIndex = (index == 0)? 0 : index * cardPerPage;\r\n                        let _carouselItems = carouselItems.slice(startIndex, startIndex + cardPerPage)\r\n                        // console.log([...Array(pagesNum)])\r\n                        // console.log(index)\r\n                        // console.log(`startIndex ${startIndex}`)\r\n                        return <div  className=\"row p-0 m-0 h-100 w-100\">\r\n                            {\r\n                                _carouselItems.map((item: IAchievement) => {\r\n                                    return(route != item.achievementRoute && <div className=\"col-12 col-md-6 col-lg-4 card-col\">\r\n                                                <Link to={`/achievements/${item.achievementRoute}`}>\r\n                                                    <motion.div className=\"card text-center px-3 pt-2\"\r\n                                                        layoutId={`achievement-container-${item.achievementRoute}`}\r\n                                                        style={{cursor: 'pointer'}}\r\n                                                        key={item.achievementRoute}\r\n                                                    >\r\n                                                        <motion.div className=\"card-img\"\r\n                                                            layoutId={`achievement-image-${item.achievementRoute}`}\r\n                                                        >\r\n                                                            <img\r\n                                                                src={`/assets/achievements/${item.achievementRoute}.jpg`} \r\n                                                            />\r\n                                                        </motion.div>\r\n                            \r\n                                                        <div className=\"mt-2\">\r\n                                                            <p className=\"size-30 color-red\">{item.achievementRoute}</p>\r\n                                                            <p className=\"size-20 color-grey\">{item.issuedBy}</p>\r\n                                                        </div>\r\n                                                    </motion.div>\r\n                                                </Link>\r\n                                            </div>\r\n                                   \r\n                                )})\r\n                            }\r\n                        </div>\r\n                    })\r\n                     \r\n                }\r\n\r\n            </Page>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CarouselSection;","import React from 'react';\r\nimport Title from '../../common/title';\r\nimport PageWithContent from '../pagewithcontent';\r\nimport AchievementsModal from './achievementsmodal';\r\nimport CarouselSection from './carouselsection'\r\n\r\ninterface match{\r\n    match:any\r\n}\r\n\r\nconst AchievementsPage: React.FC<match> = ({\r\n    match\r\n}) => {\r\n    const {route} = match.params;\r\n\r\n    return (\r\n        <div>\r\n            <PageWithContent>\r\n                <Title\r\n                    text=\"Player achievements\"\r\n                />\r\n                <CarouselSection\r\n                    title=\"awards\"\r\n                    route={route}\r\n                />\r\n\r\n                <CarouselSection\r\n                    title=\"certs\"\r\n                    route={route}\r\n                />\r\n\r\n\r\n            </PageWithContent>\r\n\r\n            <AchievementsModal route={route} key={`achievements-modal-${route}`}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AchievementsPage;","import { IAchievement, IChangeEnvAction, IChangeMovingAction, IProject, ISetBackWorld, ISetPlayerCenter, ISetPlayerInvert } from '../types/interfaces';\r\nimport  './actiontypes';\r\nimport { CHANGE_ENV, CHANGE_MOVING, SET_ACHIEVEMENT_MODAL, SET_BACKWORLD, SET_PLAYER_CENTER, SET_PLAYER_INVERT, SET_PROJECT_MODAL } from './actiontypes';\r\n \r\n// env actions\r\nfunction changeMoving(payload: boolean) : IChangeMovingAction{\r\n    return {\r\n        type: CHANGE_MOVING,\r\n        payload\r\n    }\r\n}\r\n\r\nfunction changeEnvironment(payload: string) : IChangeEnvAction{\r\n    return{\r\n        type: CHANGE_ENV,\r\n        payload\r\n    }\r\n}\r\n\r\nfunction setPlayerCenter (payload: boolean): ISetPlayerCenter{\r\n    return {\r\n        type: SET_PLAYER_CENTER,\r\n        payload\r\n    }\r\n}\r\n\r\nfunction setBackWorld (payload: boolean): ISetBackWorld{\r\n    return{\r\n        type: SET_BACKWORLD,\r\n        payload\r\n    }\r\n}\r\n\r\nfunction setPlayerInvert(payload: boolean): ISetPlayerInvert{\r\n    return{\r\n        type: SET_PLAYER_INVERT,\r\n        payload\r\n    }\r\n}\r\n\r\n// modal actions\r\n// function setAchievementModalVisible(payload: IAchievement): ISetAchievementModal{\r\n//     return{\r\n//         type: SET_ACHIEVEMENT_MODAL,\r\n//         payload\r\n//     }\r\n// }\r\n\r\n// function setAchievementModalNotVisible():ISetAchievementModal{\r\n//     return{\r\n//         type: SET_ACHIEVEMENT_MODAL,\r\n//         payload: {\r\n//             isVisible: false,\r\n//             imageUrl: \"\",\r\n//             issuedBy: \"\",\r\n//             issueDate: \"\",\r\n//             title: \"\",\r\n//             descripList: []\r\n//         }\r\n//     }\r\n// }\r\n\r\n// function setProjectModalVisible(payload: IProject): ISetProjectModal{\r\n//     return{\r\n//         type: SET_PROJECT_MODAL,\r\n//         payload\r\n//     }\r\n// }\r\n\r\n// function setProjectModalNotVisible(): ISetProjectModal{\r\n//     return {\r\n//         type: SET_PROJECT_MODAL,\r\n//         payload: {\r\n//             isVisible: false,\r\n//             imageUrlList: [],\r\n//             projectTitle: \"\",\r\n//             projectPeriod: \"\",\r\n//             tags: [],\r\n//             builtWith: [],\r\n//             projectLink: \"\",\r\n//             descripList: []\r\n//         }\r\n//     }\r\n// }\r\n\r\nexport const AllActions = {\r\n    EnvActions: {\r\n        changeMoving,\r\n        changeEnvironment,\r\n        setPlayerCenter,\r\n        setBackWorld,\r\n        setPlayerInvert\r\n    }\r\n    // ModalActions: {\r\n    //     setAchievementModalVisible,\r\n    //     setAchievementModalNotVisible,\r\n    //     setProjectModalVisible\r\n    //     // setProjectModalNotVisible\r\n    // }\r\n}","// env action types\r\nexport const CHANGE_MOVING = \"CHANGE_MOVING\";\r\nexport const CHANGE_ENV = \"CHANGE_ENV\";\r\nexport const SET_PLAYER_CENTER = \"SET_PLAYER_CENTER\";\r\nexport const SET_BACKWORLD = \"SET_BACKWORLD_BTN\"\r\nexport const SET_PLAYER_INVERT = \"SET_PLAYER_INVERT\";\r\n\r\n// modal action types\r\nexport const SET_ACHIEVEMENT_MODAL = \"SET_ACHIEVEMENT_MODAL\";\r\nexport const SET_PROJECT_MODAL = \"SET_PLAYER_MODAL\";\r\n\r\n// data types\r\n// for now no option to change state of data","import React, {useEffect, useState} from 'react';\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {Frame, Page} from 'framer';\r\nimport {motion} from 'framer-motion';\r\nimport { AppState, ICarousel, IProject} from '../../../types/interfaces';\r\nimport {AllActions} from '../../../actions';\r\nimport '../../../css/carousel.css';\r\nimport '../../../css/misc.css';\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\n\r\nconst ProjectCarousel: React.FC<ICarousel> = ({\r\n    title, route\r\n}) => {\r\n    const [currentPage, setCurrentPage] = useState<number>(0);\r\n    const [cardPerPage, setCardPerPage] = useState<number>(6);\r\n    const [pagesNum, setPagesNum] = useState<number>(0);\r\n\r\n    // const dispatch = useDispatch();\r\n    // const history = useHistory();\r\n\r\n    const carouselItems: IProject[] = useSelector((state: AppState) => {\r\n        return state.data.projects;\r\n    })\r\n\r\n    const indicatorSize = 10\r\n    const indicatorPadding = 10\r\n    const indicatorWidth = [...Array(pagesNum)].length * indicatorSize\r\n    const indicatorPaddingTotal = ([...Array(pagesNum)].length - 1) * indicatorPadding\r\n    const indicatorWidthTotal = indicatorWidth + indicatorPaddingTotal\r\n    const indicatorAlpha = 0.3;\r\n\r\n    const changePagesNum = () => {\r\n        let extraPage = (carouselItems.length % cardPerPage == 0)? 0: 1;\r\n        setPagesNum((~~(carouselItems.length / cardPerPage) == 0)? 1 : ~~(carouselItems.length / cardPerPage) + extraPage)\r\n        // console.log(pagesNum);\r\n    } \r\n\r\n    useEffect(() => {\r\n        changePagesNum();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        changePagesNum()\r\n    }, [cardPerPage])\r\n\r\n    useEffect(() => {\r\n        if(window.innerWidth < 500){\r\n            setCardPerPage(2);\r\n        }\r\n        else if(window.innerWidth < 900){\r\n            // console.log(\"window smol!\")\r\n            setCardPerPage(4);\r\n        }else{\r\n            setCardPerPage(6);\r\n        }\r\n    }, [window.innerWidth])\r\n\r\n\r\n    return (\r\n        <div className=\"project-carousel size-40\">\r\n            <div className=\"d-flex flex-row justify-content-between\">\r\n                <p className=\"color-cyan mb-1 text-left\">{title}</p>\r\n                <div className=\"d-flex flex-row\">\r\n                    <motion.div\r\n                        whileTap={{\r\n                            scale: 0.8\r\n                        }}\r\n                    >\r\n                        <img\r\n                            src=\"/assets/cyan_arrow.png\"\r\n                            style={{\r\n                                transform: \"rotate(90deg)\"\r\n                            }}\r\n                            className=\"carousel-btn \"\r\n                            onClick={() => {\r\n                                ((currentPage - 1) < 0)?setCurrentPage(pagesNum - 1): setCurrentPage(currentPage -1)\r\n                                // setCurrentPage(currentPage - 1)\r\n                            }}\r\n                        />\r\n                    </motion.div>\r\n                    \r\n                    <div className=\" indicator-wrapper\">\r\n                        {[...Array(pagesNum)].map((val, index) => {\r\n                            // console.log(`creating new indicator!`)\r\n                            return (\r\n                                <Frame\r\n                                    // Visual & layout\r\n                                    size={indicatorSize}\r\n                                    radius={30}\r\n                                    backgroundColor=\"#02FFF0\"\r\n                                    top=\"1vh\"\r\n                                    style={{\r\n                                        cursor: \"pointer\",\r\n                                        left: `calc(50% + ${index} * ${indicatorSize +\r\n                                        indicatorPadding}px)`\r\n                                    }}\r\n                                    x={-indicatorWidthTotal / 2}\r\n                                    // Animation\r\n                                    opacity={indicatorAlpha}\r\n                                    animate={{\r\n                                        opacity: currentPage === index ? 1 : indicatorAlpha\r\n                                    }}\r\n                                    // Required by React\r\n                                    key={index}\r\n                                    onClick={() => {\r\n                                        // console.log(`indicator ${index} pressed!`)\r\n                                        setCurrentPage(index)\r\n                                    }}\r\n                                    className=\"\"\r\n                                    drag={false}\r\n                                />\r\n                            );\r\n                        })}\r\n                    </div>\r\n\r\n                    <motion.div\r\n                        whileTap={{\r\n                            scale: 0.8\r\n                        }}\r\n                    >\r\n                        <img\r\n                            src=\"/assets/cyan_arrow.png\"\r\n                            style={{\r\n                                transform: \"rotate(-90deg)\"\r\n                            }}\r\n                            className=\"carousel-btn\"\r\n                            onClick={() => {\r\n                                ((currentPage + 1) >= pagesNum)? setCurrentPage(0) : setCurrentPage(currentPage + 1)\r\n                            }}\r\n                        />\r\n                    </motion.div>\r\n                    \r\n                        \r\n                </div>\r\n            </div>\r\n           \r\n            <hr/>\r\n\r\n            <Page\r\n                defaultEffect=\"wheel\"\r\n                currentPage={(currentPage)?currentPage:0}\r\n                // this is for indicators\r\n                onChangePage={(current, previous) => {\r\n                    setCurrentPage(current)\r\n                }}\r\n                // width=\"56vw\"\r\n                // height=\"40vh\"\r\n                center={false}\r\n                className=\" page-container\"\r\n                padding={0}\r\n            >\r\n\r\n                {\r\n                    [...Array(pagesNum)].map((val, index) => {\r\n                        let startIndex = (index == 0)? 0 : index * cardPerPage;\r\n                        let _carouselItems = carouselItems.slice(startIndex, startIndex + cardPerPage)\r\n                        // console.log([...Array(pagesNum)])\r\n                        // console.log(index)\r\n                        // console.log(`startIndex ${startIndex}`)\r\n                        return <div  className=\"row p-0 m-0 w-100 h-100\">\r\n                            {\r\n                                _carouselItems.map((item: IProject) => {\r\n                                    return(route != item.projectRoute && <div className=\"col-12 col-md-6 col-lg-4 card-col\">\r\n                                            <Link to={`/projects/${item.projectRoute}`}>\r\n                                                <motion.div className=\"card text-center px-3 pt-2\"\r\n                                                    // onClick={() => {\r\n                                                    //     console.log(item);\r\n                                                    //     // dispatch(AllActions.ModalActions.setProjectModalVisible({\r\n                                                    //     //     isVisible: true,\r\n                                                    //     //     ...item\r\n                                                    //     // }));\r\n\r\n                                                    //     history.push(`/projects/${item.projectRoute}`);\r\n                                                    // }}\r\n                                                    layoutId={`project-container-${item.projectRoute}`}\r\n                                                    style={{cursor: 'pointer'}}\r\n                                                    key={item.projectRoute}\r\n                                                >\r\n                                                    <motion.div className=\"card-img\"\r\n                                                        layoutId={`project-image-${item.projectRoute}`}>\r\n                                                        <img\r\n                                                            src={item.imageUrlList[0]}\r\n                                                        />\r\n                                                    </motion.div>\r\n                        \r\n                                                    <div className=\"mt-2\">\r\n                                                        <p className=\"size-30 color-red\">{item.projectRoute}</p>\r\n                                                        {/* <p className=\"size-20 color-grey\">{item.issuedBy}</p> */}\r\n                                                        <p className=\"size-20 color-grey\">\r\n                                                            {\r\n                                                                item.tags.join(\", \")\r\n                                                            }\r\n                                                        </p>\r\n                                                    </div>\r\n                                                </motion.div>\r\n                                            </Link>\r\n                                                \r\n                                            </div>\r\n                                )})  \r\n                            }\r\n                        </div>\r\n                    })\r\n                }\r\n            </Page>\r\n            \r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProjectCarousel;","import { AnimatePresence, motion } from 'framer-motion';\r\nimport {Frame, Page} from 'framer';\r\nimport React, { useEffect, useState } from 'react';\r\nimport '../../../css/modal.css'\r\nimport '../../../css/carousel.css'\r\nimport '../../../css/misc.css'\r\nimport { AppState, IProject } from '../../../types/interfaces';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {useHistory} from 'react-router';\r\nimport { AllActions } from '../../../actions';\r\nimport { Link } from 'react-router-dom';\r\nimport { Scroll } from 'framer';\r\nimport {getProject} from '../../../actions/selectors';\r\n\r\ninterface IProjectsModal{\r\n    route: string\r\n}\r\n\r\n\r\n// framer motion variants\r\nconst textMotion = {\r\n    rest:{\r\n        color: \"inherit\",\r\n        x: \"-3vw\"\r\n    },\r\n    hover: {\r\n        color: \"blue\",\r\n        x: 0\r\n    }\r\n}\r\n\r\nconst arrowMotion = {\r\n    rest: {\r\n        opacity: 0,\r\n    },\r\n    hover: {\r\n        opacity: 1,\r\n        marginRight: \"2vw\",\r\n        color: \"blue\"  \r\n    }\r\n}\r\n\r\n\r\nconst ProjectsModal: React.FC<IProjectsModal> = ({\r\n    route\r\n}) => {\r\n    // const [isVisible, setIsVisble] = useState<boolean>(true);\r\n    // const dispatch = useDispatch();\r\n    // const route = match.params;\r\n    const history = useHistory();\r\n\r\n    const [selectedImage, setSelectedImage] = useState<string>(\"\");\r\n    const [currentPage, setCurrentPage] = useState<number>(0);\r\n    const [cardPerPage, setCardPerPage] = useState<number>(3);\r\n    const [pagesNum, setPagesNum] = useState<number>(0);\r\n\r\n    const indicatorSize = 10\r\n    const indicatorPadding = 10\r\n    const indicatorWidth = [...Array(pagesNum)].length * indicatorSize\r\n    const indicatorPaddingTotal = ([...Array(pagesNum)].length - 1) * indicatorPadding\r\n    const indicatorWidthTotal = indicatorWidth + indicatorPaddingTotal\r\n    const indicatorAlpha = 0.3;\r\n\r\n    console.log(route);\r\n    \r\n\r\n    const {\r\n        projectRoute,\r\n        imageUrlList,\r\n        projectTitle,\r\n        projectPeriod,\r\n        tags,\r\n        builtWith,\r\n        projectLink,\r\n        descripList\r\n    } = useSelector((state: AppState): IProject => {\r\n        return getProject(state.data, route);\r\n    })\r\n\r\n    const changePagesNum = () => {\r\n        let extraPage = (imageUrlList.length % cardPerPage == 0)? 0: 1;\r\n        setPagesNum((~~(imageUrlList.length / cardPerPage) == 0)? 1 : ~~(imageUrlList.length / cardPerPage) + extraPage)\r\n        // console.log(pagesNum);\r\n    }\r\n\r\n    useEffect(() => {\r\n        changePagesNum();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        changePagesNum()\r\n    }, [cardPerPage])\r\n\r\n    useEffect(() => {\r\n        if(route && projectRoute == \"\"){\r\n            history.push(\"/notfound\");\r\n        }\r\n    }, [route])\r\n\r\n    useEffect(() => {\r\n        // if(window.innerWidth < 500){\r\n        //     setCardPerPage(1);\r\n        // }\r\n        if(window.innerWidth < 900){\r\n            // console.log(\"window smol!\")\r\n            setCardPerPage(2);\r\n        }else{\r\n            setCardPerPage(3);\r\n        }\r\n    }, [window.innerWidth])\r\n\r\n    useEffect(() => {\r\n        if(imageUrlList.length > 0){\r\n            setSelectedImage(imageUrlList[0]);\r\n        }\r\n    }, [imageUrlList])\r\n    \r\n\r\n\r\n    return (\r\n        <div className=\"projects-modal my-modal\">\r\n            <AnimatePresence>\r\n                {(route &&\r\n                    <motion.div\r\n                        className=\"modal-container\"\r\n                        exit={{transform: \"scale(0)\"}}\r\n                        initial={{transform: \"scale(0)\"}}\r\n                        animate={{transform: \"scale(1)\"}}\r\n                        layoutId={`project-container-${route}`}\r\n                        key = {`projects-modal-${route}`}  \r\n                        // drag=\"y\"\r\n                    >\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 col-lg-6\">\r\n                                <motion.div className=\"left-view\"\r\n                                    layoutId={`project-image-${route}`}\r\n                                >   \r\n                                    <AnimatePresence>\r\n                                        <motion.img\r\n                                            key={selectedImage}\r\n                                            src={selectedImage}\r\n                                            exit={{display: \"none\"}}\r\n                                            // exit={{transform: \"scale(0)\"}}\r\n                                            initial={{transform: \"scale(0.8)\"}}\r\n                                            animate={{transform: \"scale(1)\"}}\r\n                                            className=\"\"\r\n                                        />\r\n                                    </AnimatePresence>\r\n                                    \r\n                                    <div className=\" p-0\">\r\n                                        <Page  \r\n                                            defaultEffect=\"wheel\"\r\n                                            currentPage={(currentPage)?currentPage:0}\r\n                                            // this is for indicators\r\n                                            onChangePage={(current, previous) => {\r\n                                                setCurrentPage(current)\r\n                                            }}\r\n                                            center={false}\r\n                                            className=\" page-container mx-auto\"\r\n                                            padding={0}\r\n                                        >\r\n                                            {\r\n                                                [...Array(pagesNum)].map((val, index) => {\r\n                                                    let startIndex = (index == 0)? 0 : index * cardPerPage;\r\n                                                    let _images = imageUrlList.slice(startIndex, startIndex + cardPerPage)\r\n\r\n                                                    return <div  className=\"row p-0 m-0 w-100 h-100\">\r\n                                                        {\r\n                                                            _images.map((src) => {\r\n                                                                return(<div className=\"col-6 col-md-6 col-lg-4 card-col\"\r\n                                                                            onClick={() => {\r\n                                                                                setSelectedImage(src);\r\n                                                                            }}\r\n                                                                        >\r\n                                                                            <img src={src}\r\n                                                                            style={{\r\n                                                                                backgroundSize: \"cover\"\r\n                                                                            }}\r\n                                                                            className=\"\"/>\r\n                                                                            \r\n                                                                        </div>\r\n                                                            )})\r\n                                                        }\r\n                                                    </div>\r\n                                                })\r\n                                            }\r\n\r\n                                        </Page>\r\n\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"carousel-controls d-flex flex-row justify-content-center \">\r\n                                        <motion.div\r\n                                            whileTap={{\r\n                                                scale: 0.8\r\n                                            }}\r\n                                        >\r\n                                            <img\r\n                                                src=\"/assets/white_arrow.png\"\r\n                                                style={{\r\n                                                    transform: \"rotate(90deg)\"\r\n                                                }}\r\n                                                className=\"carousel-btn \"\r\n                                                onClick={() => {\r\n                                                    ((currentPage - 1) < 0)?setCurrentPage(pagesNum - 1): setCurrentPage(currentPage -1)\r\n                                                    // setCurrentPage(currentPage - 1)\r\n                                                }}\r\n                                            />\r\n                                        </motion.div>\r\n                                        <div className=\" indicator-wrapper  \">\r\n                                            {[...Array(pagesNum)].map((val, index) => {\r\n                                                // console.log(`creating new indicator!`)\r\n                                                return (\r\n                                                    <Frame\r\n                                                        // Visual & layout\r\n                                                        size={indicatorSize}\r\n                                                        radius={30}\r\n                                                        backgroundColor=\"#575757\"\r\n                                                        top=\"1vh\"\r\n                                                        style={{\r\n                                                            cursor: \"pointer\",\r\n                                                            left: `calc(50% + ${index} * ${indicatorSize +\r\n                                                            indicatorPadding}px)`\r\n                                                        }}\r\n                                                        x={-indicatorWidthTotal / 2}\r\n                                                        // Animation\r\n                                                        opacity={indicatorAlpha}\r\n                                                        animate={{\r\n                                                            opacity: currentPage === index ? 1 : indicatorAlpha\r\n                                                        }}\r\n                                                        // Required by React\r\n                                                        key={index}\r\n                                                        onClick={() => {\r\n                                                            // console.log(`indicator ${index} pressed!`)\r\n                                                            setCurrentPage(index)\r\n                                                        }}\r\n                                                        className=\"\"\r\n                                                        drag={false}\r\n                                                    />\r\n                                                );\r\n                                            })}\r\n                                        </div>\r\n                                        <motion.div\r\n                                            whileTap={{\r\n                                                scale: 0.8\r\n                                            }}\r\n                                        >\r\n                                            <img\r\n                                                src=\"/assets/white_arrow.png\"\r\n                                                style={{\r\n                                                    transform: \"rotate(-90deg)\"\r\n                                                }}\r\n                                                className=\"carousel-btn\"\r\n                                                onClick={() => {\r\n                                                    ((currentPage + 1) >= pagesNum)? setCurrentPage(0) : setCurrentPage(currentPage + 1)\r\n                                                }}\r\n                                            />\r\n                                        </motion.div>\r\n                                    </div>\r\n\r\n                                    \r\n\r\n                                </motion.div>\r\n                            </div>\r\n                            <div className=\"col-12 col-lg-6 text-left\">\r\n                                <motion.div className=\"right-view khyay\"\r\n                                >\r\n                                    <p className=\"color-grey size-20\">{projectPeriod}</p>\r\n                                    <a href={projectLink} target=\"_blank\">  \r\n                                        <motion.div className=\"d-flex flex-row\"\r\n                                            whileHover=\"hover\"\r\n                                            whileTap=\"hover\"\r\n                                            initial=\"rest\"\r\n                                        > \r\n                                                <motion.div className=\"\"\r\n                                                    variants={arrowMotion}\r\n                                                >\r\n                                                    <img src=\"/assets/double_arrow.svg\"\r\n                                                        className=\"link-icon\"\r\n                                                    />\r\n                                                </motion.div>\r\n                                                <motion.div variants={textMotion}>\r\n                                                    <p className=\"size-40 khyay\">{route}</p>\r\n                                                </motion.div>\r\n                                            \r\n                                        </motion.div>\r\n                                    </a>\r\n                                    \r\n                                    \r\n                                    \r\n                                    <p className=\"size-20 color-grey\">{\r\n                                        tags.join(\", \")\r\n                                    }</p>\r\n\r\n                                    <div className=\"khyay built-with-wrapper\">\r\n                                        <p className=\"size-20\">Built With</p>\r\n                                        <ul >\r\n                                            {\r\n                                                builtWith.map((val) => {\r\n                                                    return <li className=\"size-15\">{val}</li>\r\n                                                })\r\n                                            }\r\n                                            {/* <li className=\"size-15\">bruh</li>\r\n                                            <li className=\"size-15\">bruh</li> */}\r\n                                        </ul>\r\n                                    </div>\r\n       \r\n                                    <div style={{height: \"8vh\"}}></div>\r\n                                    <div className=\"descrip-container color-darkgrey khyay size-15\">\r\n                                        {\r\n                                            descripList.map((val) => {\r\n                                                return <p>{val}</p>\r\n                                            })\r\n                                        }\r\n                                        {/* <p>Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</p> */}\r\n                                    </div>\r\n                                </motion.div>\r\n                                \r\n\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <motion.div className=\"modal-cross\"\r\n                            whileHover={{\r\n                                scale: 1.2\r\n                            }}\r\n                            whileTap={{\r\n                                scale: 0.8\r\n                            }}\r\n                        >\r\n                            <Link to=\"/projects\">\r\n                                <svg fill=\"#000000\" xmlns=\"http://www.w3.org/2000/svg\"  viewBox=\"0 0 30 30\" width=\"240px\" height=\"240px\"><path d=\"M25.707,6.293c-0.195-0.195-1.805-1.805-2-2c-0.391-0.391-1.024-0.391-1.414,0c-0.195,0.195-17.805,17.805-18,18c-0.391,0.391-0.391,1.024,0,1.414c0.279,0.279,1.721,1.721,2,2c0.391,0.391,1.024,0.391,1.414,0c0.195-0.195,17.805-17.805,18-18C26.098,7.317,26.098,6.683,25.707,6.293z\"/><path d=\"M23.707,25.707c0.195-0.195,1.805-1.805,2-2c0.391-0.391,0.391-1.024,0-1.414c-0.195-0.195-17.805-17.805-18-18c-0.391-0.391-1.024-0.391-1.414,0c-0.279,0.279-1.721,1.721-2,2c-0.391,0.391-0.391,1.024,0,1.414c0.195,0.195,17.805,17.805,18,18C22.683,26.098,23.317,26.098,23.707,25.707z\"/></svg>\r\n                            </Link>  \r\n                            \r\n                        </motion.div>\r\n                        \r\n                    </motion.div>\r\n                    \r\n                )}\r\n\r\n            </AnimatePresence>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProjectsModal;","import React, { useEffect, useState } from 'react';\r\nimport PageWithContent from '../pagewithcontent'\r\nimport Title from '../../common/title'\r\nimport ProjectCarousel from './projectCarousel';\r\nimport ProjectsModal from './projectsModal';\r\nimport { AnimatePresence, AnimateSharedLayout } from 'framer';\r\n\r\ninterface match{\r\n    match: any\r\n}\r\n\r\nconst ProjectsPage: React.FC<match> = ({\r\n    match\r\n}) => {\r\n    // const [route, setRoute] = useState(match.params.route);\r\n    const {route} = match.params;\r\n    // console.log(match.params);\r\n    // console.log(route);\r\n    // console.log(route == undefined)\r\n\r\n    // if(route){\r\n    //     console.log(\"BRO FUCK U\")\r\n    // }\r\n\r\n    return (\r\n        <div>\r\n            {/* <AnimatePresence> */}\r\n                <PageWithContent>\r\n                    <Title\r\n                        text = \"Player Projects\"\r\n                    />\r\n\r\n                    <ProjectCarousel\r\n                        title=\"projects\"\r\n                        route = {route}\r\n                    />\r\n\r\n                    \r\n                    \r\n                </PageWithContent>\r\n                \r\n                    {/* {route && <ProjectsModal route={route} key=\"projects-modal\"/>}  */}\r\n                <ProjectsModal route={route} key={`projects-modal-${route}`}/>\r\n            {/* </AnimatePresence> */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProjectsPage;","import React, { useEffect } from 'react';\r\nimport {BrowserRouter as Router, Switch, Route, Link, Redirect, useLocation} from 'react-router-dom';\r\nimport './App.css';\r\n\r\n// pages\r\nimport HomePage from './components/pages/home';\r\nimport NotFound from './components/pages/notfound';\r\nimport WorldMapPage from './components/pages/worldmap';\r\nimport AboutMePage from './components/pages/aboutme';\r\nimport EducationPage from './components/pages/education'\r\nimport ExperiencePage from './components/pages/experience';\r\nimport Environment from './components/common/environment';\r\nimport AchievemmentsPage from './components/pages/achievements';\r\n\r\nimport Player from './components/common/player'\r\nimport { useDispatch } from 'react-redux';\r\nimport { AllActions } from './actions';\r\nimport AchievementsModal from './components/pages/achievements/achievementsmodal';\r\nimport ProjectsModal from './components/pages/projects/projectsModal';\r\nimport ProjectsPage from './components/pages/projects';\r\nimport { AnimateSharedLayout } from 'framer-motion';\r\n\r\n\r\nconst LocationManager: React.FC = () => {\r\n  const location = useLocation()\r\n  const dispatch = useDispatch();\r\n\r\n  const changeMovingEnv = (moving: boolean, playerCenter: boolean, playerInvert: boolean) => {\r\n    dispatch(AllActions.EnvActions.changeMoving(moving));\r\n    dispatch(AllActions.EnvActions.setPlayerCenter(playerCenter));\r\n    dispatch(AllActions.EnvActions.setPlayerInvert(playerInvert));\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(location.pathname)\r\n    const path: string = location.pathname;\r\n    // switch(_path){\r\n    //   case \"/\":\r\n    //     console.log(\"its root!\")\r\n    //     changeMovingEnv(true, true, false);\r\n    //     dispatch(AllActions.EnvActions.setBackWorld(false));\r\n    //     break;\r\n    //   case \"/worldmap\":\r\n    //     console.log(\"it's worldmap!\");\r\n    //     changeMovingEnv(false, false, true);\r\n    //     dispatch(AllActions.EnvActions.setBackWorld(false));\r\n    //     break;\r\n    //   case \"/aboutme\": case \"/education\": case \"/experience\": case \"/achievements\": case \"/projects\":\r\n    //   case _path.match(/\\/projects(\\/.*)*/):\r\n    //     changeMovingEnv(true, false, false);\r\n    //     dispatch(AllActions.EnvActions.setBackWorld(true));\r\n    //     break;\r\n    //   default:\r\n    //     changeMovingEnv(false, true, true);\r\n    //     dispatch(AllActions.EnvActions.setBackWorld(false));\r\n    // }\r\n    if(path == \"/\"){\r\n      changeMovingEnv(true, true, false);\r\n      dispatch(AllActions.EnvActions.setBackWorld(false));\r\n    }else if(path == \"/worldmap\"){\r\n      changeMovingEnv(false, false, true);\r\n      dispatch(AllActions.EnvActions.setBackWorld(false));\r\n    }else if([\r\n      '/aboutme',\r\n      '/education',\r\n      '/experience',\r\n      '/achievements',\r\n      '/projects'\r\n    ].includes(path) || path.match(/\\/(projects|achievements)(\\/.*)*/)){\r\n      changeMovingEnv(true, false, false);\r\n      dispatch(AllActions.EnvActions.setBackWorld(true));\r\n    }else{\r\n      changeMovingEnv(false, true, true);\r\n      dispatch(AllActions.EnvActions.setBackWorld(false));\r\n    }\r\n  }, [location])\r\n\r\n  return (\r\n    <div>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <AnimateSharedLayout type=\"crossfade\">\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n          <LocationManager/>\r\n          <Switch>\r\n              <Route\r\n                exact = {true}\r\n                path = \"/\"\r\n                component = {HomePage}\r\n              />\r\n              <Route\r\n                exact\r\n                path = \"/worldmap\"\r\n                component = {WorldMapPage}\r\n              />\r\n              <Route\r\n                exact\r\n                path = \"/aboutme\"\r\n                component = {AboutMePage}\r\n              />\r\n              <Route\r\n                exact\r\n                path = \"/education\"\r\n                component = {EducationPage}\r\n              />\r\n              <Route\r\n                exact\r\n                path = \"/experience\"\r\n                component = {ExperiencePage}\r\n              />\r\n              <Route\r\n                exact\r\n                path = {[\"/achievements/:route\", \"/achievements\"]}\r\n                component = {AchievemmentsPage}\r\n              />\r\n\r\n              <Route\r\n                exact\r\n                path = {[\"/projects/:route\", \"/projects\"]}\r\n                component={ProjectsPage}\r\n              />\r\n\r\n              <Route\r\n                component = {NotFound}\r\n              />       \r\n          </Switch>\r\n\r\n          <Player/>\r\n\r\n          <Environment/>\r\n\r\n          {/* for modals */}\r\n          {/* <AchievementsModal/>\r\n          <ProjectsModal/> */}\r\n\r\n        </Router>\r\n      </AnimateSharedLayout>\r\n      \r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { CHANGE_ENV, CHANGE_MOVING, SET_BACKWORLD, SET_PLAYER_CENTER, SET_PLAYER_INVERT } from \"../actions/actiontypes\";\r\nimport {IEnvState, TEnvActionTypes} from '../types/interfaces'\r\n\r\nconst initialEnvState:IEnvState = {\r\n    moving: true,\r\n    playerCenter: true,\r\n    envBg: \"forest\",\r\n    backToWorld: false,\r\n    playerInvert: false\r\n}\r\n\r\n\r\nexport default function envReducer(state : IEnvState = initialEnvState, action: TEnvActionTypes){\r\n    switch(action.type){\r\n        case CHANGE_MOVING:\r\n            return {\r\n                ...state,\r\n                moving: action.payload\r\n            }\r\n        case SET_PLAYER_CENTER:\r\n            return{\r\n                ...state,\r\n                playerCenter: action.payload\r\n            \r\n            }\r\n        case CHANGE_ENV:\r\n            return {\r\n                ...state,\r\n                envBg: action.payload\r\n                \r\n            }\r\n        case SET_BACKWORLD:\r\n            return {\r\n                ...state,\r\n                backToWorld: action.payload\r\n                \r\n            }\r\n        case SET_PLAYER_INVERT:\r\n            return {\r\n                ...state,\r\n                playerInvert: action.payload\r\n                \r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {IDataState} from '../types/interfaces';\r\nimport data from '../data/data.json';\r\n\r\nconsole.log(data)  \r\n\r\nconst initialDataState: IDataState = data;\r\n\r\nexport default function dataReducer(state: IDataState = initialDataState, action: any){\r\n    return state;\r\n}  ","import { combineReducers } from 'redux'\r\nimport { AppState } from '../types/interfaces';\r\nimport envReducer from './envReducers'\r\nimport dataReducer from './dataReducers';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    env: envReducer,\r\n    data: dataReducer\r\n})\r\n\r\n\r\nexport default rootReducer;\r\n\r\n","import {createStore} from 'redux';\r\nimport rootReducer from '../reducers/';\r\nimport {AppState, IEnvState} from '../types/interfaces'\r\n\r\n\r\n// const Store = configureStore(initialState);\r\n\r\n\r\nexport const Store = createStore(rootReducer);\r\n\r\nexport default Store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store = {store}>\n    <App/>\n  </Provider>,\n  // <React.StrictMode>\n  //   <App />\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}