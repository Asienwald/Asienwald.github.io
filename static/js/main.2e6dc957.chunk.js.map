{"version":3,"sources":["components/common/panel.tsx","components/pages/home/index.tsx","components/pages/notfound/index.tsx","components/pages/worldmap/map.tsx","components/common/menu.tsx","components/pages/pagewithcontent.tsx","components/pages/worldmap/index.tsx","components/common/player.tsx","components/common/title.tsx","components/pages/aboutme/playerstats.tsx","components/pages/aboutme/index.tsx","components/pages/education/subsection.tsx","components/pages/education/school.tsx","components/pages/education/education.tsx","components/pages/education/index.tsx","components/pages/experience/position.tsx","components/pages/experience/index.tsx","components/common/ground.tsx","components/common/parallax.tsx","components/common/background.tsx","components/common/backtoworld.tsx","actions/index.tsx","actions/actiontypes.tsx","components/common/envbutton.tsx","components/common/environment.tsx","components/pages/achievements/achievementsmodal.tsx","actions/selectors.tsx","components/pages/achievements/carouselsection.tsx","components/pages/achievements/index.tsx","components/pages/findme/index.tsx","components/pages/projects/projectCarousel.tsx","components/pages/projects/projectsModal.tsx","components/pages/projects/index.tsx","App.tsx","serviceWorker.js","reducers/envReducers.tsx","reducers/dataReducers.tsx","reducers/index.tsx","store/index.tsx","index.tsx"],"names":["Panel","title","descrip","remark","btnString","useState","menuBoard","setMenuBoard","window","innerWidth","windowWidth","setWindowWidth","useEffect","handleResize","addEventListener","removeEventListener","className","div","animate","marginTop","transition","duration","ease","times","src","location","pathname","onClick","variants","hidden","opacity","show","initial","delay","to","HomePage","NotFound","circleStyle","backgroundColor","borderRadius","display","position","height","width","Map","history","useHistory","jumpTo","route","push","style","href","target","Menu","children","wheelEnabled","direction","dragEnabled","exit","transform","PageWithContent","exitBeforeEnter","WorldMapPage","Player","inMenu","useSelector","state","env","playerCenter","moving","playerInvert","isCenter","isRunning","invert","animationName","Title","text","PlayerStats","halfLength","_skills1","_skills2","data","stats","name","age","occupation","status","skills","toolsUsed","length","slice","map","val","AboutMePage","SubSection","sectionTitle","bulletPoints","pts","setPts","_pts","initBulletPts","School","schoolName","studyPeriod","studyScope","academicComponent","ccaList","awardsList","ccas","setCcas","awards","setAwards","_ccas","initCcas","_awards","initAwards","gpa","sectionList","sect","Education","schoolList","education","sch","EducationPage","Position","role","division","organisation","positionPeriod","descriptionList","descripList","setDescripList","_descrip","index","initDescrip","ExperiencePage","positionList","experience","pos","Ground","ground","setGround","envBg","contact","linkedinLink","githubLink","spawnGroundTile","start","right","animationPlayState","backgroundImage","spawnGround","_ground","Parallax","image","bg","setBg","spawnParallax","animationDuration","spawnBackground","_bg","Background","background","setBackground","console","log","key","BackToWorld","useLocation","showBack","backToWorld","AllActions","EnvActions","changeMoving","payload","type","changeEnvironment","setPlayerCenter","setBackWorld","setPlayerInvert","EnvButton","dispatch","useDispatch","bgCount","bgList","img","layoutId","whileHover","scale","whileTap","_currentCount","indexOf","_count","changeBg","Environment","AchievementsModal","achievementRoute","found","achievement","issueDate","issuedBy","achievements","certs","getAchievement","onError","e","onerror","fill","xmlns","viewBox","d","CarouselSection","currentPage","setCurrentPage","cardPerPage","setCardPerPage","pagesNum","setPagesNum","carouselItems","includes","indicatorWidthTotal","Array","changePagesNum","extraPage","size","radius","top","cursor","left","indicatorSize","x","drag","defaultEffect","onChangePage","current","previous","center","padding","startIndex","_carouselItems","item","AchievementsPage","match","params","FindMePage","email","ProjectCarousel","projects","projectRoute","imageUrlList","projectTitle","tags","join","textMotion","rest","color","hover","arrowMotion","marginRight","ProjectsModal","selectedImage","setSelectedImage","project","projectPeriod","builtWith","projectLink","getProject","_images","backgroundSize","ProjectsPage","LocationManager","changeMovingEnv","path","App","basename","process","exact","component","AchievemmentsPage","Boolean","hostname","bgs","initialEnvState","Math","floor","random","max","initialDataState","rootReducer","combineReducers","action","Store","createStore","ReactDOM","render","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"w7qBAgHeA,EAlGiB,SAAC,GAE1B,IADHC,EACE,EADFA,MAAOC,EACL,EADKA,QAASC,EACd,EADcA,OAAQC,EACtB,EADsBA,UACtB,EAEgCC,mBAAiB,sBAFjD,mBAEKC,EAFL,KAEgBC,EAFhB,OAGoCF,mBAASG,OAAOC,YAHpD,mBAGKC,EAHL,KAGkBC,EAHlB,KAoCF,OAtBAC,qBAAU,WAEN,SAASC,IACLF,EAAeH,OAAOC,YAI1B,OAFAD,OAAOM,iBAAiB,SAAUD,GAE3B,WACHL,OAAOO,oBAAoB,SAAUF,OAK7CD,qBAAU,WACFJ,OAAOC,WAAa,IACpBF,EAAa,6BAEbA,EAAa,wBAElB,CAACG,IAIA,yBAAKM,UAAU,mBACX,yBAAKA,UAAU,OACX,kBAAC,IAAOC,IAAR,CAAYD,UAAU,qGAClBE,QAAS,CACLC,UAAW,CAAC,QAAS,QAAS,QAAS,UAE3CC,WAAY,CACRC,SAAU,GACVC,KAAM,UACNC,MAAO,CAAC,EAAG,GAAK,GAAK,KAGzB,yBAAKP,UAAU,+BACf,yBAAKA,UAAU,+DACX,yBAAKA,UAAU,6EACX,yBAAKQ,IAAKlB,EAAWU,UAAU,eAE/B,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,QACiB,KAA1BR,OAAOiB,SAASC,SAAe,wBAAIV,UAAU,WAAWf,GAAY,wBAAIe,UAAU,qBAAqBf,GACxGC,EACD,uBAAGc,UAAU,6BAA6Bb,GAE1C,kBAAC,IAAOc,IAAR,CACID,UAAU,oBACVW,QAAS,aAETC,SA3DrB,CACXC,OAAQ,CACJC,QAAS,GAEbC,KAAM,CACFD,QAAS,IAuDmBE,QAAQ,SACRd,QAAQ,OACRE,WAAY,CACRa,MAAO,EACPZ,SAAU,IACVC,KAAM,YAIV,kBAAC,IAAD,CACIN,UAAU,oBAEVkB,GAAG,aACL9B,YC7E3B+B,MAbf,WACI,OACI,6BACI,kBAAC,EAAD,CACIlC,MAAM,cACNC,QAAS,uBAAGc,UAAU,qBAAb,OAAqC,0BAAMA,UAAU,aAAhB,WAArC,6DACTb,OAAO,0BACPC,UAAU,YCOXgC,MAdf,WACI,OACI,6BACI,kBAAC,EAAD,CACInC,MAAM,eACNC,QAAS,uBAAGc,UAAU,qBAAb,+EACTb,OAAO,GACPC,UAAU,wBCNpBiC,G,MAA6B,CAC/BC,gBAAiB,UACjBC,aAAc,MACdC,QAAS,eACTC,SAAU,WACVC,OAAQ,MACRC,MAAO,QA0HIC,MAvHf,WAEI,IAAMC,EAAUC,cAEVC,EAAS,SAACC,GACZH,EAAQI,KAAR,WAAiBD,KAGrB,OACI,yBAAKhC,UAAU,OACX,wBAAIA,UAAU,0BAAd,aAEA,yBAAKA,UAAU,iCACX,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,gCACXW,QAAW,WAAOoB,EAAO,MAEzB,yBAAK/B,UAAU,eACfkC,MAAOb,GACH,yBAAKrB,UAAU,yBAEnB,uBAAGA,UAAU,wBAAb,SAEJ,yBAAKA,UAAU,gCACXW,QAAW,WAAOoB,EAAO,aAEzB,yBAAK/B,UAAU,eACfkC,MAAOb,GACH,yBAAKrB,UAAU,yBAEnB,uBAAGA,UAAU,wBAAb,aAGJ,yBAAKA,UAAU,gCACXW,QAAW,WAAOoB,EAAO,eAEzB,yBAAK/B,UAAU,eACfkC,MAAOb,GACH,yBAAKrB,UAAU,yBAEnB,uBAAGA,UAAU,wBAAb,cAGJ,yBAAKA,UAAU,gCACXW,QAAW,WAAOoB,EAAO,gBAEzB,yBAAK/B,UAAU,eACfkC,MAAOb,GACH,yBAAKrB,UAAU,yBAEnB,uBAAGA,UAAU,wBAAb,eAGJ,yBAAKA,UAAU,gCACXW,QAAW,WAAOoB,EAAO,kBAEzB,yBAAK/B,UAAU,eACfkC,MAAOb,GACH,yBAAKrB,UAAU,yBAEnB,uBAAGA,UAAU,wBAAb,oBAOhB,yBAAKA,UAAU,oBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,UACX,yBAAKA,UAAU,gCACXW,QAAW,WAAOoB,EAAO,cAEzB,yBAAK/B,UAAU,eACfkC,MAAOb,GACH,yBAAKrB,UAAU,yBAEnB,uBAAGA,UAAU,wBAAb,aAEJ,yBAAKA,UAAU,gCACXW,QAAW,WAAOoB,EAAO,UAEzB,yBAAK/B,UAAU,eACfkC,MAAOb,GACH,yBAAKrB,UAAU,yBAEnB,uBAAGA,UAAU,wBAAb,YAEJ,uBAAGmC,KAAK,mDAAmDC,OAAO,UAC9D,yBAAKpC,UAAU,iCAEX,yBAAKA,UAAU,eACfkC,MAAOb,GACH,yBAAKrB,UAAU,yBAEnB,uBAAGA,UAAU,wBAAb,gBAKR,yBAAKA,UAAU,gCACXW,QAAW,WAAOoB,EAAO,YAEzB,yBAAK/B,UAAU,eACfkC,MAAOb,GACH,yBAAKrB,UAAU,yBAEnB,uBAAGA,UAAU,wBAAb,kB,gBCrFjBqC,EA9BQ,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SACrB,OACI,kBAAC,SAAD,CACIZ,OAAO,OACPC,MAAM,OACNY,cAAc,EACdC,UAAU,WACVC,aAAa,GAGb,kBAAC,IAAOxC,IAAR,CACIyC,KAAM,CAACC,UAAW,YAClB3B,QAAS,CAAC2B,UAAW,YACrBzC,QAAS,CAACyC,UAAW,YACrB3C,UAAU,mBAEN,yBAAKA,UAAU,OACX,yBAAKA,UAAU,0CACNsC,OCNlBM,EAfmB,SAAC,GAAgB,IAAfN,EAAc,EAAdA,SAChC,OACI,6BACI,kBAAC,IAAD,CAAiBO,iBAAe,GAC5B,kBAAC,EAAD,KACKP,MCONQ,MAZf,WAEI,OACI,6BACI,kBAAC,EAAD,KACI,kBAAC,EAAD,S,OCuBDC,G,MAvBwB,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAAY,EAEXC,aAAY,SAACC,GAC/C,MAAO,CAACA,EAAMC,IAAIC,aAAcF,EAAMC,IAAIE,OAAQH,EAAMC,IAAIG,iBAHf,mBAE1CC,EAF0C,KAEhCC,EAFgC,KAErBC,EAFqB,KAOjD,OACI,yBAAKzD,UACAuD,EAAY,uBAAyB,SACxCrB,MAAO,CACLwB,cAAgBF,IAAcR,EAAS,kBAAmB,eAC1DL,UAAU,UAAD,QAAY,WACjB,OAAGc,GAAgB,EACXA,GAAUD,EAAkB,EACxB,MAHP,UCHNG,G,MAZiB,SAAC,GAAY,IAAXC,EAAU,EAAVA,KAC9B,OACI,6BACI,wBAAI5D,UAAU,6CACT4D,MCkFFC,EApFe,WAAO,IAY7BC,EAAoBC,EAAoBC,EAZZ,EAS5Bf,aAAY,SAACC,GACb,OAAOA,EAAMe,KAAKC,SAPlBC,EAH4B,EAG5BA,KACAC,EAJ4B,EAI5BA,IACAC,EAL4B,EAK5BA,WACAC,EAN4B,EAM5BA,OACAC,EAP4B,EAO5BA,OACAC,EAR4B,EAQ5BA,UAWJ,OALAV,KAAgBS,EAAOE,OAAS,GAChCV,EAAWQ,EAAOG,MAAM,EAAGZ,GAC3BE,EAAWO,EAAOG,MAAMZ,GAIpB,yBAAK9D,UAAU,eACX,kBAAC,EAAD,CAAO4D,KAAK,iBACZ,yBAAK5D,UAAU,OACX,yBAAKA,UAAU,+BACX,kBAAC,EAAD,CAAQgD,QAAQ,IAChB,uBAAGhD,UAAU,0BAAb,UAEJ,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,6CACX,yBAAKA,UAAU,mBACX,2BAAG,0BAAMA,UAAU,cAAhB,SAAH,IAA8CmE,GAC9C,uBAAGnE,UAAU,OAAM,0BAAMA,UAAU,cAAhB,QAAnB,IAA6DoE,IAEjE,2BAAG,0BAAMpE,UAAU,cAAhB,eAAH,IAAoDqE,GACpD,2BAAG,0BAAMrE,UAAU,cAAhB,WAA2C,6BAAK,0BAAMA,UAAU,WAAWsE,OAI1F,yBAAKtE,UAAU,uBACX,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,+DACX,uBAAGA,UAAU,6BAAb,cACA,4BAEQwE,EAAUG,KAAI,SAACC,GACX,OAAO,4BAAKA,SAQhC,yBAAK5E,UAAU,mBACX,yBAAKA,UAAU,+DACX,uBAAGA,UAAU,gCAAb,UACA,yBAAKA,UAAU,YACX,yBAAKA,UAAU,mBACX,4BAEQ+D,EAASY,KAAI,SAACC,GACV,OAAO,4BAAKA,QAM5B,yBAAK5E,UAAU,mBACX,4BAEQgE,EAASW,KAAI,SAACC,GACV,OAAO,4BAAKA,cChEzCC,MAXf,WAEI,OACI,6BACI,kBAAC,EAAD,KACI,kBAAC,EAAD,SC8BDC,G,MApC2B,SAAC,GAGpC,IAFHC,EAEE,EAFFA,aACAC,EACE,EADFA,aACE,EACoB3F,mBAAwB,IAD5C,mBACK4F,EADL,KACUC,EADV,KAoBF,OAJAtF,qBAAU,YAbY,WAClB,IAAIuF,EAAsB,GAC1BH,EAAaL,KAAI,SAACC,GAEdO,EAAKlD,KAAK,yBAAKjC,UAAU,mBACjB,4BACI,4BAAK4E,SAIrBM,EAAOC,GAIPC,KACD,IAGC,yBAAKpF,UAAU,eACX,uBAAGA,UAAU,mBAAmB+E,GAChC,6BACA,yBAAK/E,UAAU,eACViF,MC6EFI,EAxGmB,SAAC,GAO5B,IANHC,EAME,EANFA,WACAC,EAKE,EALFA,YACAC,EAIE,EAJFA,WACAC,EAGE,EAHFA,kBACAC,EAEE,EAFFA,QACAC,EACE,EADFA,WACE,EACsBtG,mBAAwB,IAD9C,mBACKuG,EADL,KACWC,EADX,OAE0BxG,mBAAwB,IAFlD,mBAEKyG,EAFL,KAEaC,EAFb,KAyBF,OALAnG,qBAAU,YAhBO,WACb,IAAIoG,EAAuB,GAC3BN,EAAQf,KAAI,SAACC,GACToB,EAAM/D,KAAK,4BAAK2C,OAEpBiB,EAAQG,GAYRC,GATe,WACf,IAAIC,EAAyB,GAC7BP,EAAWhB,KAAI,SAACC,GACZsB,EAAQjE,KAAK,4BAAK2C,OAEtBmB,EAAUG,GAKVC,KACD,IAGC,6BACI,yBAAKnG,UAAU,4BAEX,yBAAKA,UAAU,UACX,wBAAIA,UAAU,WAAWsF,IAG7B,yBAAKtF,UAAU,oBACX,uBAAGA,UAAU,sBAAsBuF,IAGvC,yBAAKvF,UAAU,oBACX,uBAAGA,UAAU,sBAAsBwF,IAGvC,yBAAKxF,UAAU,6BACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,8CACX,uBAAGA,UAAU,uBAAb,aAGJ,6BAC+B,IAAzByF,EAAkBW,IAAY,8CAAoBX,EAAkBW,KAAU,KAE5EX,EAAkBY,YAAY1B,KAAI,SAAC2B,GAC/B,OACI,kBAAC,EAAD,CACIvB,aAAgBuB,EAAKvB,aACrBC,aAAgBsB,EAAKtB,qBAUjD,yBAAKhF,UAAU,6BACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,yCACX,uBAAGA,UAAU,sBAAb,QAGJ,6BACI,4BACK4F,MAMjB,yBAAK5F,UAAU,6BACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,4CACX,uBAAGA,UAAU,qBAAb,WAGJ,6BACI,4BACK8F,SC5DlBS,EA/Ba,WACxB,IAAMC,EAAwBvD,aAAY,SAACC,GACvC,OAAOA,EAAMe,KAAKwC,UAAUD,cAGhC,OACI,yBAAKxG,UAAU,aAGPwG,EAAW7B,KAAI,SAAC+B,GACZ,OACI,6BACI,kBAAC,EAAD,CACIpB,WAAcoB,EAAIpB,WAClBC,YAAemB,EAAInB,YACnBC,WAAckB,EAAIlB,WAClBC,kBAAqBiB,EAAIjB,kBACzBC,QAAWgB,EAAIhB,QACfC,WAAce,EAAIf,aAGtB,yBAAK3F,UAAU,eCT5B2G,MAdf,WAEI,OACI,6BACI,kBAAC,EAAD,KACI,kBAAC,EAAD,CACI/C,KAAO,qBAEX,kBAAC,EAAD,SCqCDgD,G,MA5CuB,SAAC,GAMhC,IALHC,EAKE,EALFA,KACAC,EAIE,EAJFA,SACAC,EAGE,EAHFA,aACAC,EAEE,EAFFA,eACAC,EACE,EADFA,gBACE,EACoC5H,mBAAwB,IAD5D,mBACK6H,EADL,KACkBC,EADlB,KAeF,OAJAvH,qBAAU,YARU,WAChB,IAAIwH,EAA0B,GAC9BH,EAAgBtC,KAAI,SAACC,EAAKyC,GACtBD,EAASnF,KAAK,2BAAI2C,OAEtBuC,EAAeC,GAIfE,KACD,IAGC,yBAAKtH,UAAU,sCACX,6BACI,uBAAGA,UAAU,WAAU,0BAAMA,UAAU,aAAa6G,GAApD,KAAmEC,IAEvE,yBAAK9G,UAAU,OACX,yBAAKA,UAAU,mBACX,uBAAGA,UAAU,4BAA4B+G,IAG7C,yBAAK/G,UAAU,mBACX,uBAAGA,UAAU,4BAA4BgH,KAIjD,yBAAKhH,UAAU,WACVkH,MCNFK,EA9BkB,WAC7B,IAAMC,EAA4BvE,aAAY,SAACC,GAC3C,OAAOA,EAAMe,KAAKwD,WAAWD,gBAGjC,OACI,6BACI,kBAAC,EAAD,KACI,kBAAC,EAAD,CACI5D,KAAO,sBAGP4D,EAAa7C,KAAI,SAAC+C,GACd,OACI,kBAAC,EAAD,CACIb,KAAQa,EAAIb,KACZC,SAAYY,EAAIZ,SAChBC,aAAgBW,EAAIX,aACpBC,eAAkBU,EAAIV,eACtBC,gBAAmBS,EAAIT,wB,MCyDxCU,MA5Ef,WAAmB,IAAD,EAEctI,mBAAwB,IAFtC,mBAEPuI,EAFO,KAECC,EAFD,OAIU5E,aAAY,SAACC,GACjC,OAAOA,EAAMC,OADVE,EAJO,EAIPA,OAAQyE,EAJD,EAICA,MAJD,EAOqB7E,aAAY,SAACC,GAC5C,OAAOA,EAAMe,KAAK8D,WADfC,EAPO,EAOPA,aAAcC,EAPP,EAOOA,WAIfC,EAAkB,SAACC,GACrB,OAAI9E,EAYwB,yBACpBrD,UAAU,wBACVkC,MAAS,CACLkG,MAAM,GAAD,OAAKD,EAAL,MACLE,mBAAoB,UACpBC,gBAAgB,gBAAD,OAAkBR,EAAlB,oBAhBC,yBACxB9H,UAAU,wBACVkC,MAAS,CACLmG,mBAAoB,SACpBD,MAAM,GAAD,OAAKD,EAAL,MACLG,gBAAgB,gBAAD,OAAkBR,EAAlB,qBAmBrBS,EAAc,WAChB,IAAIC,EAAyB,GAC7BA,EAAQvG,KAAKiG,EAAgB,IAC7BM,EAAQvG,KAAKiG,GAAiB,MAC9BL,EAAUW,IAcd,OAVA5I,qBAAU,WACN2I,MACD,IAGH3I,qBAAU,WACN2I,MACD,CAAClF,EAAQ7D,OAAOC,WAAYqI,IAI3B,yBAAK9H,UAAU,eACV4H,EACD,yBAAK5H,UAAU,wDAEX,uBAAGA,UAAU,WAAb,0CACA,yEAEJ,yBAAKA,UAAU,+CACX,uBAAGoC,OAAO,SAASD,KAAM6F,GACrB,uBAAGhI,UAAU,4CAGjB,uBAAGoC,OAAO,SAASD,KAAM8F,GACrB,uBAAGjI,UAAU,oDCZlByI,G,MA1DuB,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,MAAOrB,EAAqB,EAArBA,MAAqB,KAAd/E,SAC9BjD,mBAAwB,KADoB,mBACzDsJ,EADyD,KACrDC,EADqD,KAGzDvF,EAAUJ,aAAY,SAACC,GAC1B,OAAOA,EAAMC,OADVE,OAIDwF,EAAgB,SAACV,GACnB,OAAI9E,EAYgB,yBACZrD,UAAU,WACVkC,MAAO,CACHkG,MAAM,GAAD,OAAKD,EAAL,MACLG,gBAAgB,QAAD,OAAUI,EAAV,MACfI,kBAAkB,GAAD,OAAKzB,EAAL,KACjBgB,mBAAoB,aAjBZ,yBACZrI,UAAU,WACVkC,MAAO,CACHkG,MAAM,GAAD,OAAKD,EAAL,MACLG,gBAAgB,QAAD,OAAUI,EAAV,MACfL,mBAAoB,aAoB9BU,EAAkB,WACpB,IAAIC,EAAM,GACVA,EAAI/G,KAAK4G,EAAc,IACvBG,EAAI/G,KAAK4G,GAAe,MACxBD,EAAMI,IAYV,OATApJ,qBAAU,WACNmJ,MACD,IAEHnJ,qBAAU,WACNmJ,MACD,CAAC1F,IAIA,yBAAKrD,UAAU,eACV2I,KCnBEM,MA/Bf,WAAuB,IAAD,EACkB5J,mBAAsB,+BADxC,mBACX6J,EADW,KACCC,EADD,KAGXrB,EAAS7E,aAAY,SAACC,GACzB,OAAOA,EAAMC,OADV2E,MAqBP,OALAlI,qBAAU,WACNwJ,QAAQC,IAAI,sBAXZF,EACI,6BACI,kBAAC,EAAD,CAAUT,MAAK,kBAAaZ,EAAb,WAA6BT,MAAO,EAAGiC,IAAG,UAAKxB,EAAL,mBACzD,kBAAC,EAAD,CAAUY,MAAK,kBAAaZ,EAAb,mBAAqCT,MAAO,GAAIiC,IAAG,UAAKxB,EAAL,mBAClE,kBAAC,EAAD,CAAUY,MAAK,kBAAaZ,EAAb,mBAAqCT,MAAO,GAAIiC,IAAG,UAAKxB,EAAL,mBAClE,kBAAC,EAAD,CAAUY,MAAK,kBAAaZ,EAAb,mBAAqCT,MAAO,GAAIiC,IAAG,UAAKxB,EAAL,uBAQ3E,CAACA,IAGA,6BACKoB,ICEEK,MA9Bf,WACI,IAAM1H,EAAUC,cACVrB,EAAW+I,cAEXC,EAAWxG,aAAY,SAACC,GAC1B,OAAOA,EAAMC,IAAIuG,eAWrB,OAJA9J,qBAAU,WACNwJ,QAAQC,IAAI,6BACb,CAAC5I,IAGA,yBAAKT,UAAU,cAEX,yBACIW,QAAS,WAXjBkB,EAAQI,KAAK,cAYLjC,UAAcyJ,EAAY,kCAAoC,mCAE9D,yBAAKzJ,UAAU,oBACf,uBAAGA,UAAU,kCAAb,wBCaT,IAAM2J,EAAa,CACtBC,WAAY,CACRC,aAxCR,SAAsBC,GAClB,MAAO,CACHC,KCNqB,gBDOrBD,YAsCAE,kBAlCR,SAA2BF,GACvB,MAAM,CACFC,KCZkB,aDalBD,YAgCAG,gBA5BR,SAA0BH,GACtB,MAAO,CACHC,KClByB,oBDmBzBD,YA0BAI,aAtBR,SAAuBJ,GACnB,MAAM,CACFC,KCxBqB,oBDyBrBD,YAoBAK,gBAhBR,SAAyBL,GACrB,MAAM,CACFC,KC9ByB,oBD+BzBD,cEKOM,G,MAjCG,WACd,IAAMC,EAAWC,cADG,EAEarH,aAAY,SAACC,GAC1C,OAAOA,EAAMC,OADV2E,EAFa,EAEbA,MAAOyC,EAFM,EAENA,QAASC,EAFH,EAEGA,OAUvB,OACI,kBAAC,IAAD,CAAqBT,KAAK,aACtB,kBAAC,IAAOU,IAAR,CACIjK,IAAG,kBAAasH,EAAb,QACHwB,IAAI,WACJoB,SAAQ,UACR1K,UAAU,UACV2K,WAAY,CACRC,MAAO,KAEXC,SAAU,CACND,MAAO,IAEXjK,QAAS,YAnBJ,WACb,IAAImK,EAAgBN,EAAOO,QAAQjD,GAC/BkD,EAAWF,EAAgB,EAAIP,EAAWO,EAAgB,EAAG,EACjET,EAASV,EAAWC,WAAWI,kBAAkBQ,EAAOQ,KAiB5CC,SCbLC,MAbf,WACI,OACI,yBAAKlL,UAAU,eACX,kBAAC,EAAD,MAEA,kBAAC,EAAD,MACA,kBAAC,EAAD,MAEA,kBAAC,EAAD,Q,UC6EGmL,EAhFyC,SAAC,GAAa,IAAZnJ,EAAW,EAAXA,MAChDH,EAAUC,cADiD,EAGGmB,aAAY,SAACC,GAC7E,OCKD,SAAwBA,EAAmBkI,GAC9C,IAAIC,GAAQ,EACRC,EAA4B,CAC5BF,iBAAkB,GAClBG,UAAW,GACXtM,MAAO,GACPuM,SAAU,GACVtE,YAAa,IAkBjB,OAhBAhE,EAAMuI,aAAa3F,OAAOnB,KAAI,SAACC,GAC3B,GAAGA,EAAIwG,kBAAoBA,EAGvB,OAFAC,GAAQ,OACRC,EAAc1G,MAKlByG,GACAnI,EAAMuI,aAAaC,MAAM/G,KAAI,SAACC,GACvBA,EAAIwG,kBAAoBA,IACvBE,EAAc1G,MAKnB0G,ED9BIK,CAAezI,EAAMe,KAAMjC,MAD/BoJ,EAH0D,EAG1DA,iBAAkBG,EAHwC,EAGxCA,UAAWtM,EAH6B,EAG7BA,MAAOuM,EAHsB,EAGtBA,SAAUtE,EAHY,EAGZA,YAQrD,OAJGlF,GAA6B,IAApBoJ,GACRvJ,EAAQI,KAAK,aAIb,yBAAKjC,UAAU,+BACX,kBAAC,IAAD,KACMgC,GACM,kBAAC,IAAO/B,IAAR,CACID,UAAU,kBACV0C,KAAM,CAACC,UAAW,YAClB3B,QAAS,CAAC2B,UAAW,YACrBzC,QAAS,CAACyC,UAAW,YACrB+H,SAAQ,gCAA2B1I,GACnCsH,IAAG,6BAA0BtH,IAE7B,yBAAKhC,UAAU,OACX,yBAAKA,UAAU,mBACX,kBAAC,IAAOC,IAAR,CAAYD,UAAU,YAClB0K,SAAQ,4BAAuB1I,IAE/B,yBACIxB,IAAG,+BAA0B4K,EAA1B,QACHQ,QAAW,SAACC,GACRA,EAAEzJ,OAAO0J,QAAU,KACnBD,EAAEzJ,OAAO5B,IAAM,uBAEnBR,UAAU,mBAItB,yBAAKA,UAAU,6BACX,kBAAC,IAAOC,IAAR,CAAYD,UAAU,oBAElB,uBAAGA,UAAU,sBAAsBuL,GACnC,uBAAGvL,UAAU,WAAWf,GACxB,uBAAGe,UAAU,sBAAsBwL,GACnC,yBAAKtJ,MAAO,CAACR,OAAQ,SACrB,yBAAK1B,UAAU,kDAEPkH,EAAYvC,KAAI,SAACC,GACb,OAAO,2BAAIA,UAUnC,kBAAC,IAAO3E,IAAR,CAAYD,UAAU,cAClB2K,WAAY,CACRC,MAAO,KAEXC,SAAU,CACND,MAAO,KAGX,kBAAC,IAAD,CAAM1J,GAAG,iBACL,yBAAK6K,KAAK,UAAUC,MAAM,6BAA8BC,QAAQ,YAAYtK,MAAM,QAAQD,OAAO,SAAQ,0BAAMwK,EAAE,sRAAqR,0BAAMA,EAAE,iS,OEiHnaC,G,MAvL8B,SAAC,GAGvC,IAFHlN,EAEE,EAFFA,MACA+C,EACE,EADFA,MACE,EACoC3C,mBAAiB,GADrD,mBACK+M,EADL,KACkBC,EADlB,OAEoChN,mBAAiB,GAFrD,mBAEKiN,EAFL,KAEkBC,EAFlB,OAG8BlN,mBAAiB,GAH/C,mBAGKmN,EAHL,KAGeC,EAHf,KAQIC,GAHWpC,cAGqBrH,aAAY,SAACC,GAC/C,OAAGjE,EAAM0N,SAAS,UAAkBzJ,EAAMe,KAAKwH,aAAa3F,OAChD5C,EAAMe,KAAKwH,aAAaC,UAQlCkB,EAJgB,GAEC,YAAIC,MAAML,IAAW/H,OADnB,IAEM,YAAIoI,MAAML,IAAW/H,OAAS,GAIvDqI,EAAiB,WACnB,IAAIC,EAAaL,EAAcjI,OAAS6H,GAAe,EAAI,EAAG,EAC9DG,EAAuD,MAAvCC,EAAcjI,OAAS6H,GAAoB,KAAOI,EAAcjI,OAAS6H,GAAeS,IAoB5G,OAjBAnN,qBAAU,WACNkN,MACD,IAEHlN,qBAAU,WACNkN,MACD,CAACR,IAEJ1M,qBAAU,WACHJ,OAAOC,WAAa,IAEnB8M,EAAe,GAEfA,EAAe,KAEpB,CAAC/M,OAAOC,aAGP,yBAAKO,UAAU,4BACX,yBAAKA,UAAU,2CACX,uBAAGA,UAAU,6BAA6Bf,GAC1C,yBAAKe,UAAU,mBACX,kBAAC,IAAOC,IAAR,CACI4K,SAAU,CACND,MAAO,KAGX,yBACIpK,IAAI,yBACJ0B,MAAO,CACHS,UAAW,iBAEf3C,UAAU,gBACVW,QAAS,WACmB0L,EAAtBD,EAAc,EAAK,EAAkBI,EAAW,EAAmBJ,EAAa,OAK9F,yBAAKpM,UAAU,sBACV,YAAI6M,MAAML,IAAW7H,KAAI,SAACC,EAAKyC,GAC5B,OACI,kBAAC,QAAD,CAEI2F,KAxDV,GAyDUC,OAAQ,GACR3L,gBAAgB,UAChB4L,IAAI,MACJhL,MAAO,CACHiL,OAAQ,UACRC,KAAK,cAAD,OAAgB/F,EAAhB,cAA2BgG,GAA3B,QAGRC,GAAIV,EAAsB,EAE1B9L,QA9DT,GA+DSZ,QAAS,CACLY,QAASsL,IAAgB/E,EAAQ,EAhE9C,IAmESiC,IAAKjC,EACL1G,QAAS,WACL0L,EAAehF,IAEnBrH,UAAU,GACVuN,MAAM,QAMtB,kBAAC,IAAOtN,IAAR,CACI4K,SAAU,CACND,MAAO,KAGX,yBACIpK,IAAI,yBACJ0B,MAAO,CACHS,UAAW,kBAEf3C,UAAU,eACVW,QAAS,WAC4B0L,EAA/BD,EAAc,GAAMI,EAA0B,EAAoBJ,EAAc,SAStG,6BAEA,kBAAC,OAAD,CACIoB,cAAc,QACdpB,YAAcA,GAAyB,EAEvCqB,aAAc,SAACC,EAASC,GACpBtB,EAAeqB,IAEnBE,QAAQ,EACR5N,UAAU,mBACV6N,QAAS,GAIL,YAAIhB,MAAML,IAAW7H,KAAI,SAACC,EAAKyC,GAC3B,IAAIyG,EAAuB,GAATzG,EAAa,EAAIA,EAAQiF,EACvCyB,EAAiBrB,EAAchI,MAAMoJ,EAAYA,EAAaxB,GAElE,OAAO,yBAAMtM,UAAU,2BAEf+N,EAAepJ,KAAI,SAACqJ,GAChB,OAAOhM,GAASgM,EAAK5C,kBAAoB,yBAAKpL,UAAU,qCAC5C,kBAAC,IAAD,CAAMkB,GAAE,wBAAmB8M,EAAK5C,mBAC5B,kBAAC,IAAOnL,IAAR,CAAYD,UAAU,6BAClB0K,SAAQ,gCAA2BsD,EAAK5C,kBACxClJ,MAAO,CAACiL,OAAQ,WAChB7D,IAAK0E,EAAK5C,kBAEV,kBAAC,IAAOnL,IAAR,CAAYD,UAAU,WAClB0K,SAAQ,4BAAuBsD,EAAK5C,mBAEpC,yBACI5K,IAAG,+BAA0BwN,EAAK5C,iBAA/B,QACHQ,QAAW,SAACC,GACRA,EAAEzJ,OAAO0J,QAAU,KACnBD,EAAEzJ,OAAO5B,IAAM,0BAK3B,yBAAKR,UAAU,QACX,uBAAGA,UAAU,qBAAqBgO,EAAK/O,OACvC,uBAAGe,UAAU,sBAAsBgO,EAAKxC,yBCvIrFyC,EA7B2B,SAAC,GAEpC,IACIjM,EADL,EADFkM,MAEsBC,OAAfnM,MAEP,OACI,6BACI,kBAAC,EAAD,KACI,kBAAC,EAAD,CACI4B,KAAK,wBAET,kBAAC,EAAD,CACI3E,MAAM,SACN+C,MAAOA,IAGX,kBAAC,EAAD,CACI/C,MAAM,QACN+C,MAAOA,KAMf,kBAAC,EAAD,CAAmBA,MAAOA,EAAOsH,IAAG,6BAAwBtH,OCWzDoM,G,MApCI,WAAO,IAAD,EAEqBnL,aAAY,SAACC,GACnD,OAAOA,EAAMe,KAAK8D,WADfsG,EAFc,EAEdA,MAAOrG,EAFO,EAEPA,aAAcC,EAFP,EAEOA,WAI5B,OACI,6BACI,kBAAC,EAAD,KACI,kBAAC,EAAD,CACIrE,KAAK,YAGT,yBAAK5D,UAAU,6BACX,yBAAKA,UAAU,0CACX,uBAAGA,UAAU,iCACb,uBAAGA,UAAU,yBAAyBqO,IAE1C,yBAAKrO,UAAU,gCAEX,uBAAGoC,OAAO,SAASD,KAAM6F,GACrB,uBAAGhI,UAAU,4CAGjB,uBAAGoC,OAAO,SAASD,KAAM8F,GACrB,uBAAGjI,UAAU,uDCgK1BsO,EAxL8B,SAAC,GAEvC,IADHrP,EACE,EADFA,MAAO+C,EACL,EADKA,MACL,EACoC3C,mBAAiB,GADrD,mBACK+M,EADL,KACkBC,EADlB,OAEoChN,mBAAiB,GAFrD,mBAEKiN,EAFL,KAEkBC,EAFlB,OAG8BlN,mBAAiB,GAH/C,mBAGKmN,EAHL,KAGeC,EAHf,KAKIC,EAA4BzJ,aAAY,SAACC,GAC3C,OAAOA,EAAMe,KAAKsK,YAOhB3B,EAJgB,GAEC,YAAIC,MAAML,IAAW/H,OADnB,IAEM,YAAIoI,MAAML,IAAW/H,OAAS,GAIvDqI,EAAiB,WACnB,IAAIC,EAAaL,EAAcjI,OAAS6H,GAAe,EAAI,EAAG,EAC9DG,EAAuD,MAAvCC,EAAcjI,OAAS6H,GAAoB,KAAOI,EAAcjI,OAAS6H,GAAeS,IAuB5G,OApBAnN,qBAAU,WACNkN,MACD,IAEHlN,qBAAU,WACNkN,MACD,CAACR,IAEJ1M,qBAAU,WACHJ,OAAOC,WAAa,IACnB8M,EAAe,GAEX/M,OAAOC,WAAa,IACxB8M,EAAe,GAEfA,EAAe,KAEpB,CAAC/M,OAAOC,aAIP,yBAAKO,UAAU,4BACX,yBAAKA,UAAU,2CACX,uBAAGA,UAAU,6BAA6Bf,GAC1C,yBAAKe,UAAU,mBACX,kBAAC,IAAOC,IAAR,CACI4K,SAAU,CACND,MAAO,KAGX,yBACIpK,IAAI,yBACJ0B,MAAO,CACHS,UAAW,iBAEf3C,UAAU,gBACVW,QAAS,WACmB0L,EAAtBD,EAAc,EAAK,EAAkBI,EAAW,EAAmBJ,EAAa,OAK9F,yBAAKpM,UAAU,sBACV,YAAI6M,MAAML,IAAW7H,KAAI,SAACC,EAAKyC,GAC5B,OACI,kBAAC,QAAD,CAEI2F,KA3DV,GA4DUC,OAAQ,GACR3L,gBAAgB,UAChB4L,IAAI,MACJhL,MAAO,CACHiL,OAAQ,UACRC,KAAK,cAAD,OAAgB/F,EAAhB,cAA2BgG,GAA3B,QAGRC,GAAIV,EAAsB,EAE1B9L,QAjET,GAkESZ,QAAS,CACLY,QAASsL,IAAgB/E,EAAQ,EAnE9C,IAsESiC,IAAKjC,EACL1G,QAAS,WACL0L,EAAehF,IAEnBrH,UAAU,GACVuN,MAAM,QAMtB,kBAAC,IAAOtN,IAAR,CACI4K,SAAU,CACND,MAAO,KAGX,yBACIpK,IAAI,yBACJ0B,MAAO,CACHS,UAAW,kBAEf3C,UAAU,eACVW,QAAS,WAC4B0L,EAA/BD,EAAc,GAAMI,EAA0B,EAAoBJ,EAAc,SAStG,6BAEA,kBAAC,OAAD,CACIoB,cAAc,QACdpB,YAAcA,GAAyB,EAEvCqB,aAAc,SAACC,EAASC,GACpBtB,EAAeqB,IAEnBE,QAAQ,EACR5N,UAAU,kBACV6N,QAAS,GAIL,YAAIhB,MAAML,IAAW7H,KAAI,SAACC,EAAKyC,GAC3B,IAAIyG,EAAuB,GAATzG,EAAa,EAAIA,EAAQiF,EACvCyB,EAAiBrB,EAAchI,MAAMoJ,EAAYA,EAAaxB,GAClE,OAAO,yBAAMtM,UAAU,2BAEf+N,EAAepJ,KAAI,SAACqJ,GAChB,OAAOhM,GAASgM,EAAKQ,cAAgB,yBAAKxO,UAAU,qCAC5C,kBAAC,IAAD,CAAMkB,GAAE,oBAAe8M,EAAKQ,eACxB,kBAAC,IAAOvO,IAAR,CAAYD,UAAU,6BAElB0K,SAAQ,4BAAuBsD,EAAKQ,cACpCtM,MAAO,CAACiL,OAAQ,WAChB7D,IAAK0E,EAAKQ,cAEV,kBAAC,IAAOvO,IAAR,CAAYD,UAAU,WAClB0K,SAAQ,wBAAmBsD,EAAKQ,eAChC,kBAAC,IAAO/D,IAAR,CACIjK,IAAG,2BAAsBwN,EAAKS,aAAa,GAAxC,QACH7C,QAAW,SAACC,GACRA,EAAEzJ,OAAO0J,QAAU,KACnBD,EAAEzJ,OAAO5B,IAAM,uBAEnBkK,SAAUsD,EAAKS,aAAa,GAC5BnF,IAAK0E,EAAKS,aAAa,MAI/B,yBAAKzO,UAAU,QACX,uBAAGA,UAAU,qBAAqBgO,EAAKU,cACvC,uBAAG1O,UAAU,sBAELgO,EAAKW,KAAKC,KAAK,qBC5JzEC,EAAa,CACfC,KAAK,CACDC,MAAO,UACPzB,EAAG,QAEP0B,MAAO,CACHD,MAAO,OACPzB,EAAG,IAIL2B,EAAc,CAChBH,KAAM,CACFhO,QAAS,GAEbkO,MAAO,CACHlO,QAAS,EACToO,YAAa,MACbH,MAAO,SAiTAI,EA5SiC,SAAC,GAE1C,IADHnN,EACE,EADFA,MAEMH,EAAUC,cADd,EAGwCzC,mBAAiB,IAHzD,mBAGK+P,EAHL,KAGoBC,EAHpB,OAIoChQ,mBAAiB,GAJrD,mBAIK+M,EAJL,KAIkBC,EAJlB,OAKoChN,mBAAiB,GALrD,mBAKKiN,EALL,KAKkBC,EALlB,OAM8BlN,mBAAiB,GAN/C,mBAMKmN,EANL,KAMeC,EANf,KAYIG,EAJgB,GAEC,YAAIC,MAAML,IAAW/H,OADnB,IAEM,YAAIoI,MAAML,IAAW/H,OAAS,GAI7D2E,QAAQC,IAAIrH,GAfV,MA2BEiB,aAAY,SAACC,GACb,OLrED,SAAoBA,EAAmBsL,GAC1C,IAAIc,EAAoB,CACpBd,aAAc,GACdC,aAAc,GACdC,aAAc,GACda,cAAe,GACfZ,KAAM,GACNa,UAAW,GACXC,YAAa,GACbvI,YAAa,IAQjB,OANAhE,EAAMqL,SAAS5J,KAAI,SAACC,GACbA,EAAI4J,cAAgBA,IACnBc,EAAU1K,MAIX0K,EKoDII,CAAWxM,EAAMe,KAAMjC,MAT9BwM,EAnBF,EAmBEA,aACAC,EApBF,EAoBEA,aACAC,EArBF,EAqBEA,aACAa,EAtBF,EAsBEA,cACAZ,EAvBF,EAuBEA,KACAa,EAxBF,EAwBEA,UACAC,EAzBF,EAyBEA,YACAvI,EA1BF,EA0BEA,YAKE4F,EAAiB,WACnB,IAAIC,EAAa0B,EAAahK,OAAS6H,GAAe,EAAI,EAAG,EAC7DG,EAAsD,MAAtCgC,EAAahK,OAAS6H,GAAoB,KAAOmC,EAAahK,OAAS6H,GAAeS,IAiC1G,OA9BAnN,qBAAU,WACNkN,MACD,IAEHlN,qBAAU,WACNkN,MACD,CAACR,IAEJ1M,qBAAU,WACHoC,GAAyB,IAAhBwM,GACR3M,EAAQI,KAAK,eAElB,CAACD,IAEJpC,qBAAU,WACHJ,OAAOC,WAAa,IACnB8M,EAAe,GAEfA,EAAe,KAEpB,CAAC/M,OAAOC,aAEXG,qBAAU,WACH6O,EAAahK,OAAS,GACrB4K,EAAiBZ,EAAa,MAEnC,CAACA,IAKA,yBAAKzO,UAAU,2BACX,kBAAC,IAAD,KACMgC,GACE,kBAAC,IAAO/B,IAAR,CACID,UAAU,kBACV0C,KAAM,CAACC,UAAW,YAClB3B,QAAS,CAAC2B,UAAW,YACrBzC,QAAS,CAACyC,UAAW,YACrB+H,SAAQ,4BAAuB1I,GAC/BsH,IAAG,yBAAsBtH,IAEzB,yBAAKhC,UAAU,OACX,yBAAKA,UAAU,mBACX,kBAAC,IAAOC,IAAR,CAAYD,UAAU,aAClB0K,SAAQ,wBAAmB1I,IAE3B,kBAAC,IAAD,CAAiBa,iBAAe,GAC5B,kBAAC,IAAO4H,IAAR,CACInB,IAAK8F,EAEL1M,KAAM,CAACkI,MAAO,IACd5J,QAAS,CAAC4J,MAAO,IACjB1K,QAAS,CAAC0K,MAAO,GACjB5K,UAAU,eACV4L,QAAW,SAACC,GACRA,EAAEzJ,OAAO0J,QAAU,KACnBD,EAAEzJ,OAAO5B,IAAM,uBAEnBA,IAAG,2BAAsB4O,EAAtB,WAIX,yBAAKpP,UAAU,QACX,kBAAC,OAAD,CACIwN,cAAc,QACdpB,YAAcA,GAAyB,EAEvCqB,aAAc,SAACC,EAASC,GACpBtB,EAAeqB,IAEnBE,QAAQ,EACR5N,UAAU,0BACV6N,QAAS,GAGL,YAAIhB,MAAML,IAAW7H,KAAI,SAACC,EAAKyC,GAC3B,IAAIyG,EAAuB,GAATzG,EAAa,EAAIA,EAAQiF,EACvCqD,EAAUlB,EAAa/J,MAAMoJ,EAAYA,EAAaxB,GAE1D,OAAO,yBAAMtM,UAAU,2BAEf2P,EAAQhL,KAAI,SAACnE,GACT,OAAO,yBAAKR,UAAU,mCACVW,QAAS,WACL0O,EAAiB7O,KAGrB,yBAAKA,IAAG,2BAAsBA,EAAtB,QACR0B,MAAO,CACH0N,eAAgB,SAEpB5P,UAAU,GACV4L,QAAW,SAACC,GACRA,EAAEzJ,OAAO0J,QAAU,KACnBD,EAAEzJ,OAAO5B,IAAM,uBAEnB8I,IAAG,uBAAkB9I,eAe7D,yBAAKR,UAAU,6DACX,kBAAC,IAAOC,IAAR,CACI4K,SAAU,CACND,MAAO,KAGX,yBACIpK,IAAI,0BACJ0B,MAAO,CACHS,UAAW,iBAEf3C,UAAU,eACVW,QAAS,WACmB0L,EAAtBD,EAAc,EAAK,EAAkBI,EAAW,EAAmBJ,EAAa,OAI9F,yBAAKpM,UAAU,wBACV,YAAI6M,MAAML,IAAW7H,KAAI,SAACC,EAAKyC,GAC5B,OACI,kBAAC,QAAD,CAEI2F,KAlK9B,GAmK8BC,OAAQ,GACR3L,gBAAgB,UAChB4L,IAAI,MACJhL,MAAO,CACHiL,OAAQ,UACRC,KAAK,cAAD,OAAgB/F,EAAhB,cAA2BgG,GAA3B,QAGRC,GAAIV,EAAsB,EAE1B9L,QAxK7B,GAyK6BZ,QAAS,CACLY,QAASsL,IAAgB/E,EAAQ,EA1KlE,IA6K6BiC,IAAKjC,EACL1G,QAAS,WACL0L,EAAehF,IAEnBrH,UAAU,GACVuN,MAAM,QAKtB,kBAAC,IAAOtN,IAAR,CACI4K,SAAU,CACND,MAAO,KAGX,yBACIpK,IAAI,0BACJ0B,MAAO,CACHS,UAAW,kBAEf3C,UAAU,eACVW,QAAS,WAC4B0L,EAA/BD,EAAc,GAAMI,EAA0B,EAAoBJ,EAAc,UAU1G,yBAAKpM,UAAU,6BACX,kBAAC,IAAOC,IAAR,CAAYD,UAAU,oBAElB,uBAAGA,UAAU,sBAAsBuP,GACnC,uBAAGpN,KAAMsN,EAAarN,OAAO,UACzB,kBAAC,IAAOnC,IAAR,CAAYD,UAAU,kBAClB2K,WAAW,QACXE,SAAS,QACT7J,QAAQ,QAEJ,kBAAC,IAAOf,IAAR,CAAYD,UAAU,GAClBY,SAAUqO,GAEV,yBAAKzO,IAAI,2BACLR,UAAU,eAGlB,kBAAC,IAAOC,IAAR,CAAYW,SAAUiO,GAClB,uBAAG7O,UAAU,iBAAiB0O,MAQ9C,uBAAG1O,UAAU,sBACT2O,EAAKC,KAAK,OAGd,yBAAK5O,UAAU,4BACX,uBAAGA,UAAU,WAAb,cACA,4BAEQwP,EAAU7K,KAAI,SAACC,GACX,OAAO,wBAAI5E,UAAU,WAAW4E,QAMhD,yBAAK1C,MAAO,CAACR,OAAQ,SACrB,yBAAK1B,UAAU,kDAEPkH,EAAYvC,KAAI,SAACC,GACb,OAAO,2BAAIA,UAUnC,kBAAC,IAAO3E,IAAR,CAAYD,UAAU,cAClB2K,WAAY,CACRC,MAAO,KAEXC,SAAU,CACND,MAAO,KAGX,kBAAC,IAAD,CAAM1J,GAAG,aACL,yBAAK6K,KAAK,UAAUC,MAAM,6BAA8BC,QAAQ,YAAYtK,MAAM,QAAQD,OAAO,SAAQ,0BAAMwK,EAAE,sRAAqR,0BAAMA,EAAE,iSClS/Z2D,EAzBuB,SAAC,GAEhC,IACI7N,EADL,EADFkM,MAEsBC,OAAfnM,MAEP,OACI,6BACQ,kBAAC,EAAD,KACI,kBAAC,EAAD,CACI4B,KAAO,oBAGX,kBAAC,EAAD,CACI3E,MAAM,WACN+C,MAASA,KAKjB,kBAAC,EAAD,CAAeA,MAAOA,EAAOsH,IAAG,yBAAoBtH,OCP9D8N,EAA4B,WAChC,IAAMrP,EAAW+I,cACXa,EAAWC,cAEXyF,EAAkB,SAAC1M,EAAiBD,EAAuBE,GAC/D+G,EAASV,EAAWC,WAAWC,aAAaxG,IAC5CgH,EAASV,EAAWC,WAAWK,gBAAgB7G,IAC/CiH,EAASV,EAAWC,WAAWO,gBAAgB7G,KA6BjD,OA1BA1D,qBAAU,WACRwJ,QAAQC,IAAI5I,EAASC,UACrB,IAAMsP,EAAevP,EAASC,SAEnB,KAARsP,GACDD,GAAgB,GAAM,GAAM,GAC5B1F,EAASV,EAAWC,WAAWM,cAAa,KAC7B,aAAR8F,GACPD,GAAgB,GAAO,GAAO,GAC9B1F,EAASV,EAAWC,WAAWM,cAAa,KACrC,CACP,WACA,aACA,cACA,gBACA,YACA,WACAyC,SAASqD,IAASA,EAAK9B,MAAM,qCAC7B6B,GAAgB,GAAM,GAAO,GAC7B1F,EAASV,EAAWC,WAAWM,cAAa,MAE5C6F,GAAgB,GAAO,GAAM,GAC7B1F,EAASV,EAAWC,WAAWM,cAAa,OAE7C,CAACzJ,IAGF,+BAyEWwP,MAnEf,WACE,OACE,yBAAKjQ,UAAU,OACb,kBAAC,IAAD,CAAqB+J,KAAK,aACxB,kBAAC,IAAD,CAAQmG,SAAUC,IAChB,kBAAC,EAAD,MACA,kBAAC,IAAD,KACI,kBAAC,IAAD,CACEC,OAAS,EACTJ,KAAO,IACPK,UAAalP,IAEf,kBAAC,IAAD,CACEiP,OAAK,EACLJ,KAAO,YACPK,UAAavN,IAEf,kBAAC,IAAD,CACEsN,OAAK,EACLJ,KAAO,WACPK,UAAaxL,IAEf,kBAAC,IAAD,CACEuL,OAAK,EACLJ,KAAO,aACPK,UAAa1J,IAEf,kBAAC,IAAD,CACEyJ,OAAK,EACLJ,KAAO,cACPK,UAAa9I,IAEf,kBAAC,IAAD,CACE6I,OAAK,EACLJ,KAAQ,CAAC,uBAAwB,iBACjCK,UAAaC,IAGf,kBAAC,IAAD,CACEF,OAAK,EACLJ,KAAQ,CAAC,mBAAoB,aAC7BK,UAAWR,IAGb,kBAAC,IAAD,CACEO,OAAK,EACLJ,KAAK,UACLK,UAAWjC,IAGb,kBAAC,IAAD,CACEiC,UAAajP,KAInB,kBAAC,EAAD,MAEA,kBAAC,EAAD,UC9GUmP,QACW,cAA7B/Q,OAAOiB,SAAS+P,UAEe,UAA7BhR,OAAOiB,SAAS+P,UAEhBhR,OAAOiB,SAAS+P,SAAStC,MACvB,2D,oBCXAuC,EAAM,CACR,QACA,SACA,SAGEC,EAA4B,CAC9BrN,QAAQ,EACRD,cAAc,EACd0E,MAAO2I,EAXEE,KAAKC,MAAM,EAAAD,KAAKE,UAFjB,GAcRtG,QAASuG,EACTtG,OAAQiG,EACR/G,aAAa,EACbpG,cAAc,G,aCjBlB8F,QAAQC,IAAIpF,IAEZ,IAAM8M,GAA+B9M,GCArC,IAMe+M,GANKC,YAAgB,CAChC9N,IFkBW,WAAkF,IAA9DD,EAA6D,uDAAzCwN,EAAiBQ,EAAwB,uCAC5F,OAAOA,EAAOnH,MACV,IbzBqB,gBa0BjB,OAAO,2BACA7G,GADP,IAEIG,OAAQ6N,EAAOpH,UAEvB,Ib5ByB,oBa6BrB,kCACO5G,GADP,IAEIE,aAAc8N,EAAOpH,UAG7B,IbnCkB,aaoCd,OAAO,2BACA5G,GADP,IAEI4E,MAAOoJ,EAAOpH,UAGtB,IbvCqB,oBawCjB,OAAO,2BACA5G,GADP,IAEIwG,YAAawH,EAAOpH,UAG5B,Ib5CyB,oBa6CrB,OAAO,2BACA5G,GADP,IAEII,aAAc4N,EAAOpH,UAG7B,QACI,OAAO5G,IEjDfe,KDAW,WAAwE,IAAnDf,EAAkD,uDAA9B6N,GACpD,OAAO7N,KEHIiO,GAFMC,YAAYJ,ICKjCK,IAASC,OACP,kBAAC,IAAD,CAAUC,MAASA,IACjB,kBAAC,EAAD,OAKFC,SAASC,eAAe,SLoHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACL7I,QAAQ6I,MAAMA,EAAMC,c","file":"static/js/main.2e6dc957.chunk.js","sourcesContent":["import React, {  useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../../css/homepanel.css';\r\nimport '../../css/misc.css';\r\nimport {motion} from 'framer-motion';\r\n\r\ninterface IPanel{\r\n    title: string,\r\n    descrip: any,\r\n    remark: string,\r\n    btnString: string\r\n}\r\n\r\n\r\nconst Panel: React.FC<IPanel> = ({\r\n    title, descrip, remark, btnString\r\n}) => {\r\n\r\n    const [menuBoard, setMenuBoard] = useState<string>(\"/assets/menu_1.png\");\r\n    const [windowWidth, setWindowWidth] = useState(window.innerWidth);\r\n\r\n    const fadeIn = {\r\n        hidden: {\r\n            opacity: 0\r\n        },\r\n        show: {\r\n            opacity: 1\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        // console.log(window.innerWidth)\r\n        function handleResize(){\r\n            setWindowWidth(window.innerWidth);\r\n        }\r\n        window.addEventListener('resize', handleResize)\r\n\r\n        return () => {\r\n            window.removeEventListener('resize', handleResize)   \r\n        }\r\n        \r\n    })\r\n\r\n    useEffect(() => {\r\n         if(window.innerWidth < 500){\r\n            setMenuBoard(\"/assets/menu_1_mobile.png\");\r\n        }else{\r\n            setMenuBoard(\"/assets/menu_1.png\");\r\n        }\r\n    }, [windowWidth])\r\n\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n                <motion.div className=\"col-12 col-md-10 col-lg-5 mx-auto position-relative home-panel d-flex flex-col justify-content-end\"\r\n                    animate={{\r\n                        marginTop: [\"-60vh\", \"-20vh\", \"-24vh\", \"-20vh\"]\r\n                    }}\r\n                    transition={{\r\n                        duration: .8,\r\n                        ease: \"easeOut\",\r\n                        times: [0, 0.8, 0.9, 1]      \r\n                    }}\r\n                >\r\n                    <div className=\"m-0 p-0 w-100 menu-chains \"></div>\r\n                    <div className=\"m-0 p-0 menu-board-wrapper w-100 d-flex justify-content-end\">\r\n                        <div className=\"h-100 w-100 d-flex flex-column justify-content-end text-white p-0 mt-auto\">\r\n                            <img src={menuBoard} className=\"board-menu\"/>\r\n\r\n                            <div className=\"menu-text w-100 \">\r\n                                <div className=\"mx-5\">\r\n                                    {(window.location.pathname==\"/\")?<h1 className=\"size-60\">{title}</h1>:<h1 className=\"size-60 color-red\">{title}</h1>}\r\n                                    {descrip}\r\n                                    <p className=\"mt-3 size-30 color-orange\">{remark}</p>\r\n                                    \r\n                                    <motion.div\r\n                                        className=\"p-0 m-0 mb-3 mt-2\"\r\n                                        onClick={() => {\r\n                                        }}\r\n                                        variants={fadeIn}\r\n                                        initial=\"hidden\"\r\n                                        animate=\"show\"\r\n                                        transition={{\r\n                                            delay: 1,\r\n                                            duration: 1.4,\r\n                                            ease: \"easeOut\"  \r\n                                        }}\r\n                                        \r\n                                    >\r\n                                        <Link\r\n                                            className=\"start-btn size-40\"\r\n\r\n                                            to=\"/worldmap\"\r\n                                        >{btnString}</Link>\r\n                                    </motion.div>\r\n                                    \r\n                                    \r\n                                </div>\r\n                               \r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                   \r\n                    \r\n                </motion.div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Panel;","import React from 'react';\r\nimport Panel from '../../common/panel';\r\n\r\n\r\nfunction HomePage() {\r\n    return (\r\n        <div>\r\n            <Panel\r\n                title=\"hello world\"\r\n                descrip={<p className=\"size-40 mb-3 mt-4\">i'm <span className=\"color-red\">Kar Wei</span>, an aspiring software engineer and cybersecurity analyst</p>}\r\n                remark=\"find out more about me!\"\r\n                btnString=\"start\"\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HomePage;","import React from 'react';\r\n\r\nimport Panel from '../../common/panel';\r\n\r\nfunction NotFound() {\r\n    return (\r\n        <div>\r\n            <Panel\r\n                title=\":( not found\"\r\n                descrip={<p className=\"size-40 mb-3 mt-4\">the page you are looking for is either under construction or doesn't exist!</p>}\r\n                remark=\"\"\r\n                btnString=\"Back to World Map\"\r\n            />\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NotFound;","import React, { CSSProperties } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport '../../../css/misc.css';\r\nimport '../../../css/worldmap.css';\r\n\r\nconst circleStyle: CSSProperties = {\r\n    backgroundColor: \"#E0E0E0\",\r\n    borderRadius: \"50%\",\r\n    display: \"inline-block\",\r\n    position: \"relative\",\r\n    height: \"4vw\",\r\n    width: \"4vw\"\r\n}\r\n\r\nfunction Map() {\r\n\r\n    const history = useHistory();\r\n\r\n    const jumpTo = (route: string) => {\r\n        history.push(`/${route}`)\r\n    }\r\n\r\n    return (\r\n        <div className=\"map\">\r\n            <h1 className=\"mt-5 size-50 color-red\">world map</h1>\r\n\r\n            <div className=\"row text-white mx-3 map-links\">\r\n                <div className=\"col-12 col-lg-6 \">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <div className=\"d-flex flex-row map-link mt-4\"\r\n                                onClick = {() => {jumpTo(\"\")}}\r\n                            >\r\n                                <div className=\"circle-point\"\r\n                                style={circleStyle}>\r\n                                    <div className=\"circle-point-inside\"></div>\r\n                                </div>\r\n                                <p className=\"size-45 my-auto ml-4\">Home</p>\r\n                            </div>\r\n                            <div className=\"d-flex flex-row map-link mt-4\"\r\n                                onClick = {() => {jumpTo(\"aboutme\")}}\r\n                            >\r\n                                <div className=\"circle-point\"\r\n                                style={circleStyle}>\r\n                                    <div className=\"circle-point-inside\"></div>\r\n                                </div>\r\n                                <p className=\"size-45 my-auto ml-4\">about me</p>\r\n                            </div>\r\n                            \r\n                            <div className=\"d-flex flex-row map-link mt-4\"\r\n                                onClick = {() => {jumpTo(\"education\")}}\r\n                            >\r\n                                <div className=\"circle-point\"\r\n                                style={circleStyle}>\r\n                                    <div className=\"circle-point-inside\"></div>\r\n                                </div>\r\n                                <p className=\"size-45 my-auto ml-4\">education</p>\r\n                            </div>\r\n                            \r\n                            <div className=\"d-flex flex-row map-link mt-4\"\r\n                                onClick = {() => {jumpTo(\"experience\")}}\r\n                            >\r\n                                <div className=\"circle-point\"\r\n                                style={circleStyle}>\r\n                                    <div className=\"circle-point-inside\"></div>\r\n                                </div>\r\n                                <p className=\"size-45 my-auto ml-4\">experience</p>\r\n                            </div>\r\n\r\n                            <div className=\"d-flex flex-row map-link mt-4\"\r\n                                onClick = {() => {jumpTo(\"achievements\")}}\r\n                            >\r\n                                <div className=\"circle-point\"\r\n                                style={circleStyle}>\r\n                                    <div className=\"circle-point-inside\"></div>\r\n                                </div>\r\n                                <p className=\"size-45 my-auto ml-4\">achievements</p>\r\n                            </div>\r\n\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 col-lg-6 \">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12\">\r\n                            <div className=\"d-flex flex-row map-link mt-4\"\r\n                                onClick = {() => {jumpTo(\"projects\")}}\r\n                            >\r\n                                <div className=\"circle-point\"\r\n                                style={circleStyle}>\r\n                                    <div className=\"circle-point-inside\"></div>\r\n                                </div>\r\n                                <p className=\"size-45 my-auto ml-4\">projects</p>\r\n                            </div>\r\n                            <div className=\"d-flex flex-row map-link mt-4\"\r\n                                onClick = {() => {jumpTo(\"blog\")}}\r\n                            >\r\n                                <div className=\"circle-point\"\r\n                                style={circleStyle}>\r\n                                    <div className=\"circle-point-inside\"></div>\r\n                                </div>\r\n                                <p className=\"size-45 my-auto ml-4\">My Blog</p>\r\n                            </div>\r\n                            <a href=\"https://github.com/Asienwald/asienwald.github.io\" target=\"_blank\">\r\n                                <div className=\"d-flex flex-row map-link mt-4\"\r\n                                >\r\n                                    <div className=\"circle-point\"\r\n                                    style={circleStyle}>\r\n                                        <div className=\"circle-point-inside\"></div>\r\n                                    </div>\r\n                                    <p className=\"size-45 my-auto ml-4\">about site</p>\r\n                                </div>\r\n                            </a>\r\n                            \r\n\r\n                            <div className=\"d-flex flex-row map-link mt-4\"\r\n                                onClick = {() => {jumpTo(\"findme\")}}\r\n                            >\r\n                                <div className=\"circle-point\"\r\n                                style={circleStyle}>\r\n                                    <div className=\"circle-point-inside\"></div>\r\n                                </div>\r\n                                <p className=\"size-45 my-auto ml-4\">find me</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Map;","import React from 'react';\r\nimport '../../css/misc.css';\r\nimport '../../css/menu.css';\r\nimport {motion} from 'framer-motion';\r\nimport {Scroll} from 'framer'\r\n\r\n\r\n\r\nconst Menu: React.FC = ({children}) => {\r\n    return (\r\n        <Scroll\r\n            height=\"100%\"\r\n            width=\"100%\"\r\n            wheelEnabled={true}\r\n            direction=\"vertical\"\r\n            dragEnabled={true}\r\n            \r\n        >\r\n            <motion.div\r\n                exit={{transform: \"scale(0)\"}}\r\n                initial={{transform: \"scale(0)\"}}\r\n                animate={{transform: \"scale(1)\"}}\r\n                className=\"container-fluid\">\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-11 col-md-10 col-lg-8 ml-auto menu\">\r\n                                {children}\r\n                        </div>\r\n                    </div>\r\n\r\n                \r\n            </motion.div>\r\n        </Scroll>\r\n        \r\n    );\r\n};\r\n\r\n\r\nexport default Menu;","import { AnimatePresence } from 'framer-motion';\r\nimport React from 'react';\r\nimport Menu from '../common/menu';\r\n\r\n\r\nconst PageWithContent: React.FC = ({children}) => {\r\n    return (\r\n        <div>\r\n            <AnimatePresence exitBeforeEnter>\r\n                <Menu>\r\n                    {children}\r\n                </Menu>\r\n\r\n            </AnimatePresence>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default PageWithContent;","import React from 'react';\r\nimport Map from './map';\r\nimport PageWithContent from '../pagewithcontent';\r\n\r\n\r\nfunction WorldMapPage() {\r\n\r\n    return (\r\n        <div>\r\n            <PageWithContent>\r\n                <Map/>\r\n            </PageWithContent>\r\n               \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default WorldMapPage;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport \"../../css/player.css\";\r\nimport { AppState } from '../../types/interfaces';\r\n\r\ninterface IPlayerProps{\r\n    inMenu?: boolean\r\n}\r\n\r\nconst Player: React.FC<IPlayerProps> = ({inMenu}) => {\r\n\r\n    const [isCenter, isRunning, invert] = useSelector((state: AppState) => {\r\n        return [state.env.playerCenter, state.env.moving, state.env.playerInvert]\r\n    })\r\n\r\n\r\n    return (\r\n        <div className = {\r\n            (isCenter) ? \"player center-middle\" : \"player\"\r\n        } style={{\r\n            animationName: (isRunning && !inMenu)? \"animate-running\": \"animate-idle\",\r\n            transform: `scaleX(${() => {\r\n                if(invert) return -1;\r\n                else if(invert && isRunning) return 1;\r\n                else return 1.1;\r\n            }})`\r\n        }}>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Player;","import React from 'react';\r\nimport '../../css/misc.css';\r\n\r\ninterface ITitle{\r\n    text: string\r\n}\r\n\r\nconst Title: React.FC<ITitle> = ({text}) => {\r\n    return (\r\n        <div>\r\n            <h1 className=\"color-orange size-50 text-left mb-3 title\">\r\n                {text}\r\n            </h1>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default Title;","import React from 'react';\r\nimport Player from '../../common/player';\r\nimport '../../../css/misc.css';\r\nimport '../../../css/playerstats.css';\r\nimport Title from '../../common/title';\r\nimport { useSelector } from 'react-redux';\r\nimport { AppState, IStats } from '../../../types/interfaces';\r\n\r\n\r\nconst PlayerStats: React.FC = () => {\r\n\r\n    const {\r\n        name,\r\n        age,\r\n        occupation,\r\n        status,\r\n        skills,\r\n        toolsUsed\r\n    } = useSelector((state: AppState): IStats => {\r\n        return state.data.stats;\r\n    })\r\n    let halfLength: number, _skills1: string[], _skills2: string[];\r\n\r\n    halfLength = ~~(skills.length / 2);\r\n    _skills1 = skills.slice(0, halfLength);\r\n    _skills2 = skills.slice(halfLength);\r\n\r\n\r\n    return (\r\n        <div className=\"player-stat\">\r\n            <Title text=\"player stats\"/>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-lg-4 text-center\">\r\n                    <Player inMenu={true}/>\r\n                    <p className=\"mt-4 size-50 color-red\">Lv. 1</p>\r\n                </div>\r\n                <div className=\"col-12 col-lg-8\">\r\n                    <div className=\"orange-panel size-30 text-white text-left\">\r\n                        <div className=\"d-flex flex-row\">\r\n                            <p><span className=\"color-cyan\">name:</span> {name}</p>\r\n                            <p className=\"tab\"><span className=\"color-cyan\">age:</span> {age}</p>\r\n                        </div>\r\n                        <p><span className=\"color-cyan\">occupation:</span> {occupation}</p>\r\n                        <p><span className=\"color-cyan\">status:</span><br/><span className=\"size-25\">{status}</span></p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row mt-3 second-row\">\r\n                <div className=\"col-12 col-lg-4\">\r\n                    <div className=\"orange-panel size-25 text-white text-left p-3 player-skills\">\r\n                        <p className=\"color-purple size-35 mb-0\">Tools Used</p>\r\n                        <ul>\r\n                            {\r\n                                toolsUsed.map((val) => {\r\n                                    return <li>{val}</li>\r\n                                })\r\n                            }\r\n                        </ul>\r\n                        \r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"col-12 col-lg-8\">\r\n                    <div className=\"orange-panel size-25 text-white text-left p-3 player-skills\">\r\n                        <p className=\"color-lightblue size-35 mb-0\">skills</p>\r\n                        <div className=\"row px-0\">\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <ul>\r\n                                    {\r\n                                        _skills1.map((val) => {\r\n                                            return <li>{val}</li>\r\n                                        })\r\n                                    }\r\n                                </ul>\r\n                            </div>\r\n\r\n                            <div className=\"col-12 col-md-6\">\r\n                                <ul>\r\n                                    {\r\n                                        _skills2.map((val) => {\r\n                                            return <li>{val}</li>\r\n                                        })\r\n                                    }\r\n                                </ul>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PlayerStats;","import React from 'react';\r\nimport PageWithContent from '../pagewithcontent';\r\n\r\nimport PlayerStats from './playerstats';\r\n\r\nfunction AboutMePage() {\r\n\r\n    return (\r\n        <div>\r\n            <PageWithContent>\r\n                <PlayerStats/>\r\n            </PageWithContent>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AboutMePage;","import React, { useEffect, useState } from 'react';\r\nimport '../../../css/misc.css';\r\nimport { ISubSection } from '../../../types/interfaces';\r\n\r\nconst SubSection: React.FC<ISubSection> = ({\r\n    sectionTitle,\r\n    bulletPoints\r\n}) => {\r\n    const [pts, setPts] = useState<JSX.Element[]>([]);\r\n\r\n    const initBulletPts = () => {\r\n        let _pts: JSX.Element[] = []\r\n        bulletPoints.map((val) => {\r\n            // console.log(val);\r\n            _pts.push(<div className=\"col-12 col-lg-6\">\r\n                    <ul>\r\n                        <li>{val}</li>\r\n                    </ul>\r\n                </div>)\r\n        })\r\n        setPts(_pts);\r\n    }\r\n\r\n    useEffect(() => {\r\n        initBulletPts();\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"sub-section\">\r\n            <p className=\"color-cyan mb-1\">{sectionTitle}</p>\r\n            <hr/>\r\n            <div className=\"row size-25\">\r\n                {pts}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\nexport default SubSection;","import React, { useEffect, useState } from 'react';\r\nimport { ISchool, ISubSection } from '../../../types/interfaces';\r\nimport SubSection from './subsection';\r\n\r\n\r\nconst School: React.FC<ISchool> = ({\r\n    schoolName,\r\n    studyPeriod,\r\n    studyScope,\r\n    academicComponent,\r\n    ccaList,\r\n    awardsList\r\n}) => {\r\n    const [ccas, setCcas] = useState<JSX.Element[]>([]);\r\n    const [awards, setAwards] = useState<JSX.Element[]>([]);\r\n\r\n    const initCcas = () => {\r\n        let _ccas: JSX.Element[] = [];\r\n        ccaList.map((val) => {\r\n            _ccas.push(<li>{val}</li>)\r\n        })\r\n        setCcas(_ccas);\r\n    }\r\n\r\n    const initAwards = () => {\r\n        let _awards: JSX.Element[] = [];\r\n        awardsList.map((val) => {\r\n            _awards.push(<li>{val}</li>)\r\n        })\r\n        setAwards(_awards);\r\n    }\r\n\r\n    useEffect(() => {\r\n        initCcas();\r\n        initAwards();\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"row text-white text-left\">\r\n\r\n                <div className=\"col-12\">\r\n                    <h2 className=\"size-50\">{schoolName}</h2>\r\n                </div>\r\n\r\n                <div className=\"col-12 col-lg-3 \">\r\n                    <p className=\"size-30 color-grey\">{studyPeriod}</p>\r\n                </div>\r\n\r\n                <div className=\"col-12 col-lg-9 \">\r\n                    <p className=\"size-30 color-grey\">{studyScope}</p>\r\n                </div>\r\n\r\n                <div className=\"row w-100 m-0 p-0 size-30\">\r\n                    <div className=\"col-12 section\">\r\n                        <div className=\"section-header text-center academic-border\">\r\n                            <p className=\"color-green size-35\">academic</p> \r\n                        </div>\r\n                        \r\n                        <div>\r\n                            {(academicComponent.gpa != \"\")? <p>cumulative gpa: {academicComponent.gpa}</p>: null}\r\n                            {\r\n                                academicComponent.sectionList.map((sect: ISubSection) => {\r\n                                    return (\r\n                                        <SubSection\r\n                                            sectionTitle = {sect.sectionTitle}\r\n                                            bulletPoints = {sect.bulletPoints}\r\n                                        />\r\n                                    )\r\n                                })\r\n                            }\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row w-100 m-0 p-0 size-30\">\r\n                    <div className=\"col-12 section\">\r\n                        <div className=\"section-header text-center cca-border\">\r\n                            <p className=\"color-blue size-35\">CCA</p> \r\n                        </div>\r\n                        \r\n                        <div>\r\n                            <ul>\r\n                                {ccas}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"row w-100 m-0 p-0 size-30\">\r\n                    <div className=\"col-12 section\">\r\n                        <div className=\"section-header text-center awards-border\">\r\n                            <p className=\"color-red size-35\">awards</p> \r\n                        </div>\r\n                        \r\n                        <div>\r\n                            <ul>\r\n                                {awards}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default School;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport '../../../css/education.css';\r\nimport { AppState, ISchool } from '../../../types/interfaces';\r\nimport School from './school';\r\n\r\n\r\nconst Education: React.FC = () => {\r\n    const schoolList: ISchool[] = useSelector((state: AppState): ISchool[] => {\r\n        return state.data.education.schoolList;\r\n    } )\r\n\r\n    return (\r\n        <div className=\"education\">\r\n\r\n            {\r\n                schoolList.map((sch) => {\r\n                    return (\r\n                        <div>\r\n                            <School\r\n                                schoolName = {sch.schoolName}\r\n                                studyPeriod = {sch.studyPeriod}\r\n                                studyScope = {sch.studyScope}\r\n                                academicComponent = {sch.academicComponent}\r\n                                ccaList = {sch.ccaList}\r\n                                awardsList = {sch.awardsList}\r\n                            /> \r\n\r\n                            <div className=\"mt-5\"></div>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Education;","import React from 'react';\r\nimport Title from '../../common/title';\r\nimport PageWithContent from '../pagewithcontent';\r\nimport Education from './education';\r\n\r\nfunction EducationPage() {\r\n\r\n    return (\r\n        <div>\r\n            <PageWithContent>\r\n                <Title\r\n                    text = \"player education\"\r\n                />\r\n                <Education/>\r\n            </PageWithContent>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default EducationPage;","import React, { useState, useEffect } from 'react';\r\nimport '../../../css/experience.css';\r\nimport '../../../css/misc.css';\r\nimport { IPosition } from '../../../types/interfaces';\r\n\r\n\r\nconst Position: React.FC<IPosition> = ({\r\n    role,\r\n    division,\r\n    organisation,\r\n    positionPeriod,\r\n    descriptionList\r\n}) => {\r\n    const [descripList, setDescripList] = useState<JSX.Element[]>([]);\r\n\r\n    const initDescrip = () => {\r\n        let _descrip: JSX.Element[] = [];\r\n        descriptionList.map((val, index) => {\r\n            _descrip.push(<p>{val}</p>)\r\n        })\r\n        setDescripList(_descrip);\r\n    }\r\n\r\n    useEffect(() => {\r\n        initDescrip();\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"position text-left text-white mt-5\">\r\n            <div>\r\n                <p className=\"size-40\"><span className=\"color-red\">{role}</span>, {division}</p>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-12 col-lg-6\">\r\n                    <p className=\"color-darkpurple size-30\">{organisation}</p>\r\n                </div>\r\n                \r\n                <div className=\"col-12 col-lg-6\">\r\n                    <p className=\"color-darkpurple size-30\">{positionPeriod}</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className='size-25'>\r\n                {descripList}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Position;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { AppState, IPosition } from '../../../types/interfaces';\r\nimport Title from '../../common/title';\r\nimport PageWithContent from '../pagewithcontent';\r\nimport Position from './position';\r\n\r\nconst ExperiencePage: React.FC = () => {\r\n    const positionList: IPosition[] = useSelector((state: AppState):IPosition[] => {\r\n        return state.data.experience.positionList;\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <PageWithContent>\r\n                <Title\r\n                    text = \"player experience\"\r\n                />\r\n                {\r\n                    positionList.map((pos: IPosition) => {\r\n                        return (\r\n                            <Position\r\n                                role = {pos.role}\r\n                                division = {pos.division}\r\n                                organisation = {pos.organisation}\r\n                                positionPeriod = {pos.positionPeriod}\r\n                                descriptionList = {pos.descriptionList}\r\n                            />\r\n                        )\r\n                    })\r\n                }\r\n            </PageWithContent>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default ExperiencePage;","import React, { useEffect, useState } from 'react';\r\nimport {useSelector} from 'react-redux'\r\nimport {AppState} from '../../types/interfaces'\r\n\r\nimport '../../css/ground.css';\r\n\r\n\r\nfunction Ground() {\r\n\r\n    const [ground, setGround] = useState<JSX.Element[]>([]);\r\n\r\n    const {moving, envBg} = useSelector((state: AppState) => {\r\n        return state.env;\r\n    })\r\n    const {linkedinLink, githubLink} = useSelector((state: AppState) => {\r\n        return state.data.contact;\r\n    })\r\n\r\n    const spawnGroundTile = (start: number) => {\r\n        if(!moving){\r\n            let spawnedGroundTile = <div \r\n            className=\"ground position-fixed\" \r\n            style = {{\r\n                animationPlayState: \"paused\",\r\n                right: `${start}vw`,\r\n                backgroundImage: `url(\"/assets/${envBg}_ground.png\")`\r\n            }}\r\n            ></div>\r\n\r\n            return spawnedGroundTile;\r\n        }else{\r\n            let spawnedGroundTile = <div \r\n                className=\"ground position-fixed\" \r\n                style = {{\r\n                    right: `${start}vw`,\r\n                    animationPlayState: \"running\",\r\n                    backgroundImage: `url(\"/assets/${envBg}_ground.png\")`\r\n                }}\r\n            ></div>\r\n\r\n            return spawnedGroundTile;\r\n        }\r\n    }\r\n\r\n    const spawnGround = () => {\r\n        let _ground: JSX.Element[] = [];  \r\n        _ground.push(spawnGroundTile(0));\r\n        _ground.push(spawnGroundTile(-100));\r\n        setGround(_ground);\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        spawnGround();\r\n    }, [])\r\n\r\n    // spawn ground again when moving changes\r\n    useEffect(() => {\r\n        spawnGround();\r\n    }, [moving, window.innerWidth, envBg])\r\n\r\n\r\n    return (\r\n        <div className=\"text-center\">\r\n            {ground}\r\n            <div className=\"position-fixed text-white text-center footer size-20\"\r\n            >\r\n                <p className=\"m-0 p-0\">designed and coded by me in reactjs :D</p>\r\n                <p>© 2020 Loh Kar Wei All Rights Reserved</p>\r\n            </div>\r\n            <div className=\"position-fixed footer-icons d-flex flex-row\">\r\n                <a target=\"_blank\" href={linkedinLink}>\r\n                    <i className=\"fab fa-linkedin text-white footer-icon\" ></i>\r\n                </a>\r\n\r\n                <a target=\"_blank\" href={githubLink}>\r\n                    <i className=\"fab fa-github-square text-white footer-icon\" ></i>\r\n                </a>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Ground;","import React, { useEffect, useState } from 'react';\r\nimport '../../css/background.css';\r\nimport '../../css/misc.css';\r\nimport {AppState, IParallax} from './../../types/interfaces'\r\nimport {useSelector} from 'react-redux'\r\n\r\nconst Parallax: React.FC<IParallax> = ({image, index, children}) => {\r\n    const [bg, setBg] = useState<JSX.Element[]>([]);\r\n\r\n    const {moving} = useSelector((state: AppState) => {\r\n        return state.env;\r\n    })\r\n\r\n    const spawnParallax = (start: number) => {\r\n        if(!moving){\r\n            let spawnedBg = <div \r\n                className=\"parallax\" \r\n                style={{\r\n                    right: `${start}vw`,\r\n                    backgroundImage: `url('${image}')`,\r\n                    animationPlayState: \"paused\"\r\n                }}\r\n            ></div>\r\n            \r\n            return spawnedBg;\r\n        }else{\r\n            let spawnedBg = <div \r\n                className=\"parallax\" \r\n                style={{\r\n                    right: `${start}vw`,\r\n                    backgroundImage: `url('${image}')`,\r\n                    animationDuration: `${index}s`,\r\n                    animationPlayState: \"running\"\r\n                }}\r\n            ></div>\r\n\r\n            return spawnedBg;\r\n        }\r\n    }\r\n\r\n    const spawnBackground = () => {\r\n        let _bg = [];\r\n        _bg.push(spawnParallax(0));\r\n        _bg.push(spawnParallax(-100));\r\n        setBg(_bg);\r\n    }\r\n\r\n    useEffect(() => {\r\n        spawnBackground();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        spawnBackground();\r\n    }, [moving])\r\n\r\n\r\n    return (\r\n        <div className=\"w-100 h-100\">\r\n            {bg}\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Parallax;","import React, { useEffect, useState } from 'react';\r\nimport {useSelector} from 'react-redux'\r\nimport {AppState} from '../../types/interfaces';\r\n\r\n// components\r\nimport Parallax from './parallax';\r\n\r\n\r\nfunction Background() {\r\n    const [background, setBackground] = useState<JSX.Element>(<div></div>)\r\n\r\n    const {envBg} = useSelector((state: AppState) => {\r\n        return state.env;\r\n    })\r\n\r\n\r\n    const spawnBackground = () => {\r\n        setBackground (\r\n            <div>\r\n                <Parallax image={`/assets/${envBg}_bg.png`} index={0} key={`${envBg}-background-1`}/>\r\n                <Parallax image={`/assets/${envBg}_parallax_2.png`} index={24} key={`${envBg}-background-2`}/>\r\n                <Parallax image={`/assets/${envBg}_parallax_3.png`} index={16} key={`${envBg}-background-3`}/>\r\n                <Parallax image={`/assets/${envBg}_parallax_4.png`} index={10} key={`${envBg}-background-4`}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(\"BACKGOUND CHANGED!\")\r\n        spawnBackground()\r\n    }, [envBg])\r\n\r\n    return (\r\n        <div>\r\n            {background}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Background;","import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { AppState } from '../../types/interfaces';\r\nimport '../../css/misc.css';\r\n\r\nfunction BackToWorld() {\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n    const showBack = useSelector((state: AppState) => {\r\n        return state.env.backToWorld\r\n    })\r\n\r\n    const backToWorld = () => {\r\n        history.push(\"/worldmap\")\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(\"Window location changed\");\r\n    }, [location])\r\n\r\n    return (\r\n        <div className=\"back-world\"\r\n        >\r\n            <div\r\n                onClick={() => {backToWorld()}}\r\n                className = {(showBack) ? \"d-flex flex-row text-white show\" : \"d-flex flex-row text-white hide\"}\r\n            >\r\n                <div className=\"back-world-icon\"></div>\r\n                <p className=\"size-30 my-auto text-left ml-3\">back to world map</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default BackToWorld;","import { IChangeEnvAction, IChangeMovingAction, ISetBackWorld, ISetPlayerCenter, ISetPlayerInvert } from '../types/interfaces';\r\nimport  './actiontypes';\r\nimport { CHANGE_ENV, CHANGE_MOVING, SET_BACKWORLD, SET_PLAYER_CENTER, SET_PLAYER_INVERT } from './actiontypes';\r\n \r\n// env actions\r\nfunction changeMoving(payload: boolean) : IChangeMovingAction{\r\n    return {\r\n        type: CHANGE_MOVING,\r\n        payload\r\n    }\r\n}\r\n\r\nfunction changeEnvironment(payload: string) : IChangeEnvAction{\r\n    return{\r\n        type: CHANGE_ENV,\r\n        payload\r\n    }\r\n}\r\n\r\nfunction setPlayerCenter (payload: boolean): ISetPlayerCenter{\r\n    return {\r\n        type: SET_PLAYER_CENTER,\r\n        payload\r\n    }\r\n}\r\n\r\nfunction setBackWorld (payload: boolean): ISetBackWorld{\r\n    return{\r\n        type: SET_BACKWORLD,\r\n        payload\r\n    }\r\n}\r\n\r\nfunction setPlayerInvert(payload: boolean): ISetPlayerInvert{\r\n    return{\r\n        type: SET_PLAYER_INVERT,\r\n        payload\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport const AllActions = {\r\n    EnvActions: {\r\n        changeMoving,\r\n        changeEnvironment,\r\n        setPlayerCenter,  \r\n        setBackWorld,\r\n        setPlayerInvert\r\n    }\r\n}","// env action types\r\nexport const CHANGE_MOVING = \"CHANGE_MOVING\";\r\nexport const CHANGE_ENV = \"CHANGE_ENV\";\r\nexport const SET_PLAYER_CENTER = \"SET_PLAYER_CENTER\";\r\nexport const SET_BACKWORLD = \"SET_BACKWORLD_BTN\"\r\nexport const SET_PLAYER_INVERT = \"SET_PLAYER_INVERT\";\r\n\r\n// data types\r\n// for now no option to change state of data","import React from 'react';\r\nimport {AnimateSharedLayout, motion} from 'framer-motion'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {AppState} from '../../types/interfaces';\r\nimport { AllActions } from '../../actions';\r\nimport '../../css/misc.css'\r\nimport '../../css/envbtn.css'\r\n\r\nconst EnvButton = () => {\r\n    const dispatch = useDispatch();\r\n    const {envBg, bgCount, bgList} = useSelector((state: AppState) => {\r\n        return state.env;\r\n    })\r\n\r\n    const changeBg = () => {\r\n        let _currentCount = bgList.indexOf(envBg);\r\n        let _count = ((_currentCount + 1 < bgCount))? _currentCount + 1: 0;\r\n        dispatch(AllActions.EnvActions.changeEnvironment(bgList[_count]))\r\n    }\r\n\r\n    return (\r\n        <AnimateSharedLayout type=\"crossfade\">\r\n            <motion.img\r\n                src={`/assets/${envBg}.svg`}\r\n                key=\"env-btn \"\r\n                layoutId={`env-btn`}\r\n                className=\"env-btn\"\r\n                whileHover={{\r\n                    scale: 1.2\r\n                }}\r\n                whileTap={{\r\n                    scale: 0.8\r\n                }}\r\n                onClick={() => {\r\n                    changeBg();\r\n                }}\r\n            />\r\n        </AnimateSharedLayout>\r\n    );\r\n};\r\n\r\nexport default EnvButton;","import React from 'react';\r\n\r\nimport Ground from './ground';\r\nimport Background from './background';\r\nimport BackToWorld from './backtoworld';\r\nimport EnvButton from './envbutton';\r\n\r\n\r\nfunction Environment() {\r\n    return (\r\n        <div className=\"w-100 h-100\">\r\n            <BackToWorld/>\r\n            \r\n            <Ground/>\r\n            <Background/>\r\n\r\n            <EnvButton/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Environment;","import { AnimatePresence, motion } from 'framer-motion';\r\nimport React from 'react';\r\nimport { AppState, IAchievement } from '../../../types/interfaces';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { getAchievement } from '../../../actions/selectors';\r\nimport '../../../css/modal.css'\r\nimport '../../../css/misc.css'\r\n\r\ninterface IAchievementsModal{\r\n    route:string\r\n}\r\n\r\nconst AchievementsModal: React.FC<IAchievementsModal> = ({route}) => {\r\n    const history = useHistory();\r\n\r\n    const {achievementRoute, issueDate, title, issuedBy, descripList} = useSelector((state: AppState): IAchievement => {\r\n        return getAchievement(state.data, route);\r\n    })\r\n\r\n    if(route && achievementRoute == \"\"){\r\n        history.push(\"/notfound\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"achievements-modal my-modal\">\r\n            <AnimatePresence>\r\n                {(route && \r\n                        <motion.div\r\n                            className=\"modal-container\"\r\n                            exit={{transform: \"scale(0)\"}}\r\n                            initial={{transform: \"scale(0)\"}}\r\n                            animate={{transform: \"scale(1)\"}}\r\n                            layoutId={`achievement-container-${route}`}\r\n                            key = {`achievements-modal-${route}`} \r\n                        >\r\n                            <div className=\"row\">\r\n                                <div className=\"col-12 col-lg-6\">\r\n                                    <motion.div className=\"left-view\"\r\n                                        layoutId={`achievement-image-${route}`}\r\n                                    >\r\n                                        <img\r\n                                            src={`/assets/achievements/${achievementRoute}.jpg`}\r\n                                            onError = {(e:any) => {\r\n                                                e.target.onerror = null;\r\n                                                e.target.src = \"/assets/default.jpg\";\r\n                                            }}\r\n                                            className=\"selected-img\"\r\n                                        />\r\n                                    </motion.div>\r\n                                </div>\r\n                                <div className=\"col-12 col-lg-6 text-left\">\r\n                                    <motion.div className=\"right-view khyay\"\r\n                                    >\r\n                                        <p className=\"color-grey size-20\">{issueDate}</p>\r\n                                        <p className=\"size-40\">{title}</p>\r\n                                        <p className=\"size-20 color-grey\">{issuedBy}</p>\r\n                                        <div style={{height: \"8vh\"}}></div>\r\n                                        <div className=\"descrip-container color-darkgrey khyay size-15\">\r\n                                            {\r\n                                                descripList.map((val) => {\r\n                                                    return <p>{val}</p>\r\n                                                })\r\n                                            }\r\n                                        </div>\r\n                                    </motion.div>\r\n                                    \r\n\r\n                                </div>\r\n                            </div>\r\n\r\n                            <motion.div className=\"modal-cross\"\r\n                                whileHover={{\r\n                                    scale: 1.2\r\n                                }}\r\n                                whileTap={{\r\n                                    scale: 0.8\r\n                                }}\r\n                            >\r\n                                <Link to=\"/achievements\">\r\n                                    <svg fill=\"#000000\" xmlns=\"http://www.w3.org/2000/svg\"  viewBox=\"0 0 30 30\" width=\"240px\" height=\"240px\"><path d=\"M25.707,6.293c-0.195-0.195-1.805-1.805-2-2c-0.391-0.391-1.024-0.391-1.414,0c-0.195,0.195-17.805,17.805-18,18c-0.391,0.391-0.391,1.024,0,1.414c0.279,0.279,1.721,1.721,2,2c0.391,0.391,1.024,0.391,1.414,0c0.195-0.195,17.805-17.805,18-18C26.098,7.317,26.098,6.683,25.707,6.293z\"/><path d=\"M23.707,25.707c0.195-0.195,1.805-1.805,2-2c0.391-0.391,0.391-1.024,0-1.414c-0.195-0.195-17.805-17.805-18-18c-0.391-0.391-1.024-0.391-1.414,0c-0.279,0.279-1.721,1.721-2,2c-0.391,0.391-0.391,1.024,0,1.414c0.195,0.195,17.805,17.805,18,18C22.683,26.098,23.317,26.098,23.707,25.707z\"/></svg>\r\n                                </Link>\r\n                                \r\n                            </motion.div>\r\n                        </motion.div>\r\n                    )\r\n                }\r\n\r\n            </AnimatePresence>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AchievementsModal;","import {IAchievement, IDataState, IProject} from '../types/interfaces';\r\n\r\nexport function getProject(state: IDataState, projectRoute: string): IProject{\r\n    let project: IProject = {\r\n        projectRoute: \"\",\r\n        imageUrlList: [],\r\n        projectTitle: \"\",\r\n        projectPeriod: \"\",\r\n        tags: [],\r\n        builtWith: [],\r\n        projectLink: \"\",\r\n        descripList: []\r\n    }\r\n    state.projects.map((val) => {\r\n        if(val.projectRoute == projectRoute){  \r\n            project = val;\r\n            return;\r\n        }\r\n    })\r\n    return project;\r\n}\r\n\r\nexport function getAchievement(state: IDataState, achievementRoute: string): IAchievement{\r\n    let found = false;\r\n    let achievement: IAchievement = {\r\n        achievementRoute: \"\",\r\n        issueDate: \"\",\r\n        title: \"\",\r\n        issuedBy: \"\",\r\n        descripList: []\r\n    }\r\n    state.achievements.awards.map((val) => {\r\n        if(val.achievementRoute == achievementRoute){\r\n            found = true;\r\n            achievement = val;\r\n            return;\r\n        }   \r\n        \r\n    })\r\n    if(!found){\r\n        state.achievements.certs.map((val) => {\r\n            if(val.achievementRoute == achievementRoute){\r\n                achievement = val;\r\n                return;\r\n            }          \r\n        })\r\n    }\r\n    return achievement;\r\n}","import React, { useEffect, useState } from 'react';\r\nimport '../../../css/misc.css'\r\nimport '../../../css/carousel.css'\r\nimport { Frame, Page} from 'framer'\r\nimport {motion} from 'framer-motion'\r\nimport {  ICarousel, IAchievement, AppState } from '../../../types/interfaces';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nconst CarouselSection: React.FC<ICarousel> = ({\r\n    title,\r\n    route\r\n}) => {\r\n    const [currentPage, setCurrentPage] = useState<number>(0);\r\n    const [cardPerPage, setCardPerPage] = useState<number>(3);\r\n    const [pagesNum, setPagesNum] = useState<number>(0);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    // let carouselItems: IAchievement[] = [];\r\n    const carouselItems: IAchievement[] = useSelector((state: AppState) => {\r\n        if(title.includes(\"awards\")) return state.data.achievements.awards;\r\n        else return state.data.achievements.certs;\r\n    })\r\n\r\n\r\n    const indicatorSize = 10\r\n    const indicatorPadding = 10\r\n    const indicatorWidth = [...Array(pagesNum)].length * indicatorSize\r\n    const indicatorPaddingTotal = ([...Array(pagesNum)].length - 1) * indicatorPadding\r\n    const indicatorWidthTotal = indicatorWidth + indicatorPaddingTotal\r\n    const indicatorAlpha = 0.3\r\n\r\n    const changePagesNum = () => {\r\n        let extraPage = (carouselItems.length % cardPerPage == 0)? 0: 1;\r\n        setPagesNum((~~(carouselItems.length / cardPerPage) == 0)? 1 : ~~(carouselItems.length / cardPerPage) + extraPage)\r\n    }\r\n\r\n    useEffect(() => {\r\n        changePagesNum();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        changePagesNum()\r\n    }, [cardPerPage])\r\n\r\n    useEffect(() => {\r\n        if(window.innerWidth < 900){\r\n            // console.log(\"window smol!\")\r\n            setCardPerPage(2);\r\n        }else{\r\n            setCardPerPage(3);\r\n        }\r\n    }, [window.innerWidth])\r\n\r\n    return (\r\n        <div className=\"carousel-section size-40\">\r\n            <div className=\"d-flex flex-row justify-content-between\">\r\n                <p className=\"color-cyan mb-1 text-left\">{title}</p>\r\n                <div className=\"d-flex flex-row\">\r\n                    <motion.div\r\n                        whileTap={{\r\n                            scale: 0.8\r\n                        }}\r\n                    >\r\n                        <img\r\n                            src=\"/assets/cyan_arrow.png\"\r\n                            style={{\r\n                                transform: \"rotate(90deg)\"\r\n                            }}\r\n                            className=\"carousel-btn \"\r\n                            onClick={() => {\r\n                                ((currentPage - 1) < 0)?setCurrentPage(pagesNum - 1): setCurrentPage(currentPage -1)\r\n                            }}\r\n                        />\r\n                    </motion.div>\r\n                    \r\n                    <div className=\" indicator-wrapper\">\r\n                        {[...Array(pagesNum)].map((val, index) => {\r\n                            return (\r\n                                <Frame\r\n                                    // Visual & layout\r\n                                    size={indicatorSize}\r\n                                    radius={30}\r\n                                    backgroundColor=\"#02FFF0\"\r\n                                    top=\"1vh\"\r\n                                    style={{\r\n                                        cursor: \"pointer\",\r\n                                        left: `calc(50% + ${index} * ${indicatorSize +\r\n                                        indicatorPadding}px)`\r\n                                    }}\r\n                                    x={-indicatorWidthTotal / 2}\r\n                                    // Animation\r\n                                    opacity={indicatorAlpha}\r\n                                    animate={{\r\n                                        opacity: currentPage === index ? 1 : indicatorAlpha\r\n                                    }}\r\n                                    // Required by React\r\n                                    key={index}\r\n                                    onClick={() => {\r\n                                        setCurrentPage(index)\r\n                                    }}\r\n                                    className=\"\"\r\n                                    drag={false}\r\n                                />\r\n                            );\r\n                        })}\r\n                    </div>\r\n\r\n                    <motion.div\r\n                        whileTap={{\r\n                            scale: 0.8\r\n                        }}\r\n                    >\r\n                        <img\r\n                            src=\"/assets/cyan_arrow.png\"\r\n                            style={{\r\n                                transform: \"rotate(-90deg)\"\r\n                            }}\r\n                            className=\"carousel-btn\"\r\n                            onClick={() => {\r\n                                ((currentPage + 1) >= pagesNum)? setCurrentPage(0) : setCurrentPage(currentPage + 1)\r\n                            }}\r\n                        />\r\n                    </motion.div>\r\n                    \r\n                        \r\n                </div>\r\n            </div>\r\n           \r\n            <hr/>\r\n\r\n            <Page\r\n                defaultEffect=\"wheel\"\r\n                currentPage={(currentPage)?currentPage:0}\r\n                // this is for indicators\r\n                onChangePage={(current, previous) => {\r\n                    setCurrentPage(current)\r\n                }}\r\n                center={false}\r\n                className=\" page-container \"\r\n                padding={0}\r\n            >\r\n\r\n                {\r\n                    [...Array(pagesNum)].map((val, index) => {\r\n                        let startIndex = (index == 0)? 0 : index * cardPerPage;\r\n                        let _carouselItems = carouselItems.slice(startIndex, startIndex + cardPerPage)\r\n\r\n                        return <div  className=\"row p-0 m-0 h-100 w-100\">\r\n                            {\r\n                                _carouselItems.map((item: IAchievement) => {\r\n                                    return(route != item.achievementRoute && <div className=\"col-12 col-md-6 col-lg-4 card-col\">\r\n                                                <Link to={`/achievements/${item.achievementRoute}`}>\r\n                                                    <motion.div className=\"card text-center px-3 pt-2\"\r\n                                                        layoutId={`achievement-container-${item.achievementRoute}`}\r\n                                                        style={{cursor: 'pointer'}}\r\n                                                        key={item.achievementRoute}\r\n                                                    >\r\n                                                        <motion.div className=\"card-img\"\r\n                                                            layoutId={`achievement-image-${item.achievementRoute}`}\r\n                                                        >\r\n                                                            <img\r\n                                                                src={`/assets/achievements/${item.achievementRoute}.jpg`} \r\n                                                                onError = {(e:any) => {\r\n                                                                    e.target.onerror = null;\r\n                                                                    e.target.src = \"/assets/default.jpg\";\r\n                                                                }}\r\n                                                            />\r\n                                                        </motion.div>\r\n                            \r\n                                                        <div className=\"mt-2\">\r\n                                                            <p className=\"size-30 color-red\">{item.title}</p>\r\n                                                            <p className=\"size-20 color-grey\">{item.issuedBy}</p>\r\n                                                        </div>\r\n                                                    </motion.div>\r\n                                                </Link>\r\n                                            </div>\r\n                                   \r\n                                )})\r\n                            }\r\n                        </div>\r\n                    })\r\n                     \r\n                }\r\n\r\n            </Page>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CarouselSection;","import React from 'react';\r\nimport Title from '../../common/title';\r\nimport PageWithContent from '../pagewithcontent';\r\nimport AchievementsModal from './achievementsmodal';\r\nimport CarouselSection from './carouselsection'\r\n\r\ninterface match{\r\n    match:any\r\n}\r\n\r\nconst AchievementsPage: React.FC<match> = ({\r\n    match\r\n}) => {\r\n    const {route} = match.params;\r\n\r\n    return (\r\n        <div>\r\n            <PageWithContent>\r\n                <Title\r\n                    text=\"Player achievements\"\r\n                />\r\n                <CarouselSection\r\n                    title=\"awards\"\r\n                    route={route}\r\n                />\r\n\r\n                <CarouselSection\r\n                    title=\"certs\"\r\n                    route={route}\r\n                />\r\n\r\n\r\n            </PageWithContent>\r\n\r\n            <AchievementsModal route={route} key={`achievements-modal-${route}`}/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AchievementsPage;","import React from 'react';\r\nimport PageWithContent from '../pagewithcontent'\r\nimport Title from '../../common/title'\r\nimport {useSelector} from 'react-redux'\r\nimport {AppState} from '../../../types/interfaces'\r\nimport '../../../css/misc.css';\r\nimport '../../../css/findme.css';\r\n\r\n\r\nconst FindMePage = () => {\r\n\r\n    const {email, linkedinLink, githubLink} = useSelector((state: AppState) => {\r\n        return state.data.contact;\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <PageWithContent>\r\n                <Title\r\n                    text=\"Find Me\"\r\n                />\r\n\r\n                <div className=\"row mt-5 findme-container\">\r\n                    <div className=\"col-12 d-flex flex-row text-white mb-4\">\r\n                        <i className=\"fas fa-envelope findme-icon \"></i>\r\n                        <p className=\"size-25 khyay mt-auto\">{email}</p>\r\n                    </div>\r\n                    <div className=\" col-12 d-flex flex-row mt-4\">\r\n\r\n                        <a target=\"_blank\" href={linkedinLink}>\r\n                            <i className=\"fab fa-linkedin text-white findme-icon\" ></i>\r\n                        </a>\r\n\r\n                        <a target=\"_blank\" href={githubLink}>\r\n                            <i className=\"fab fa-github-square text-white findme-icon\" ></i>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n\r\n                \r\n            </PageWithContent>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FindMePage;","import React, {useEffect, useState} from 'react';\r\nimport { useSelector} from 'react-redux'\r\nimport {Frame, Page} from 'framer';\r\nimport {motion} from 'framer-motion';\r\nimport { AppState, ICarousel, IProject} from '../../../types/interfaces';\r\nimport '../../../css/carousel.css';\r\nimport '../../../css/misc.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst ProjectCarousel: React.FC<ICarousel> = ({\r\n    title, route\r\n}) => {\r\n    const [currentPage, setCurrentPage] = useState<number>(0);\r\n    const [cardPerPage, setCardPerPage] = useState<number>(6);\r\n    const [pagesNum, setPagesNum] = useState<number>(0);\r\n\r\n    const carouselItems: IProject[] = useSelector((state: AppState) => {\r\n        return state.data.projects;\r\n    })\r\n\r\n    const indicatorSize = 10\r\n    const indicatorPadding = 10\r\n    const indicatorWidth = [...Array(pagesNum)].length * indicatorSize\r\n    const indicatorPaddingTotal = ([...Array(pagesNum)].length - 1) * indicatorPadding\r\n    const indicatorWidthTotal = indicatorWidth + indicatorPaddingTotal\r\n    const indicatorAlpha = 0.3;\r\n\r\n    const changePagesNum = () => {\r\n        let extraPage = (carouselItems.length % cardPerPage == 0)? 0: 1;\r\n        setPagesNum((~~(carouselItems.length / cardPerPage) == 0)? 1 : ~~(carouselItems.length / cardPerPage) + extraPage)\r\n    } \r\n\r\n    useEffect(() => {\r\n        changePagesNum();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        changePagesNum()\r\n    }, [cardPerPage])\r\n\r\n    useEffect(() => {\r\n        if(window.innerWidth < 500){\r\n            setCardPerPage(2);\r\n        }\r\n        else if(window.innerWidth < 900){\r\n            setCardPerPage(4);\r\n        }else{\r\n            setCardPerPage(6);\r\n        }\r\n    }, [window.innerWidth])\r\n\r\n\r\n    return (\r\n        <div className=\"project-carousel size-40\">\r\n            <div className=\"d-flex flex-row justify-content-between\">\r\n                <p className=\"color-cyan mb-1 text-left\">{title}</p>\r\n                <div className=\"d-flex flex-row\">\r\n                    <motion.div\r\n                        whileTap={{\r\n                            scale: 0.8\r\n                        }}\r\n                    >\r\n                        <img\r\n                            src=\"/assets/cyan_arrow.png\"\r\n                            style={{\r\n                                transform: \"rotate(90deg)\"\r\n                            }}\r\n                            className=\"carousel-btn \"\r\n                            onClick={() => {\r\n                                ((currentPage - 1) < 0)?setCurrentPage(pagesNum - 1): setCurrentPage(currentPage -1)\r\n                            }}\r\n                        />\r\n                    </motion.div>\r\n                    \r\n                    <div className=\" indicator-wrapper\">\r\n                        {[...Array(pagesNum)].map((val, index) => {\r\n                            return (\r\n                                <Frame\r\n                                    // Visual & layout\r\n                                    size={indicatorSize}\r\n                                    radius={30}\r\n                                    backgroundColor=\"#02FFF0\"\r\n                                    top=\"1vh\"\r\n                                    style={{\r\n                                        cursor: \"pointer\",\r\n                                        left: `calc(50% + ${index} * ${indicatorSize +\r\n                                        indicatorPadding}px)`\r\n                                    }}\r\n                                    x={-indicatorWidthTotal / 2}\r\n                                    // Animation\r\n                                    opacity={indicatorAlpha}\r\n                                    animate={{\r\n                                        opacity: currentPage === index ? 1 : indicatorAlpha\r\n                                    }}\r\n                                    // Required by React\r\n                                    key={index}\r\n                                    onClick={() => {\r\n                                        setCurrentPage(index)\r\n                                    }}\r\n                                    className=\"\"\r\n                                    drag={false}\r\n                                />\r\n                            );\r\n                        })}\r\n                    </div>\r\n\r\n                    <motion.div\r\n                        whileTap={{\r\n                            scale: 0.8\r\n                        }}\r\n                    >\r\n                        <img\r\n                            src=\"/assets/cyan_arrow.png\"\r\n                            style={{\r\n                                transform: \"rotate(-90deg)\"\r\n                            }}\r\n                            className=\"carousel-btn\"\r\n                            onClick={() => {\r\n                                ((currentPage + 1) >= pagesNum)? setCurrentPage(0) : setCurrentPage(currentPage + 1)\r\n                            }}\r\n                        />\r\n                    </motion.div>\r\n                    \r\n                        \r\n                </div>\r\n            </div>\r\n           \r\n            <hr/>\r\n\r\n            <Page\r\n                defaultEffect=\"wheel\"\r\n                currentPage={(currentPage)?currentPage:0}\r\n                // this is for indicators\r\n                onChangePage={(current, previous) => {\r\n                    setCurrentPage(current)\r\n                }}\r\n                center={false}\r\n                className=\" page-container\"\r\n                padding={0}\r\n            >\r\n\r\n                {\r\n                    [...Array(pagesNum)].map((val, index) => {\r\n                        let startIndex = (index == 0)? 0 : index * cardPerPage;\r\n                        let _carouselItems = carouselItems.slice(startIndex, startIndex + cardPerPage)\r\n                        return <div  className=\"row p-0 m-0 w-100 h-100\">\r\n                            {\r\n                                _carouselItems.map((item: IProject) => {\r\n                                    return(route != item.projectRoute && <div className=\"col-12 col-md-6 col-lg-4 card-col\">\r\n                                            <Link to={`/projects/${item.projectRoute}`}>\r\n                                                <motion.div className=\"card text-center px-3 pt-2\"\r\n\r\n                                                    layoutId={`project-container-${item.projectRoute}`}\r\n                                                    style={{cursor: 'pointer'}}\r\n                                                    key={item.projectRoute}\r\n                                                >\r\n                                                    <motion.div className=\"card-img\"\r\n                                                        layoutId={`project-image-${item.projectRoute}`}>\r\n                                                        <motion.img\r\n                                                            src={`/assets/projects/${item.imageUrlList[0]}.jpg`}\r\n                                                            onError = {(e:any) => {\r\n                                                                e.target.onerror = null;\r\n                                                                e.target.src = \"/assets/default.jpg\";\r\n                                                            }}\r\n                                                            layoutId={item.imageUrlList[0]}\r\n                                                            key={item.imageUrlList[0]}\r\n                                                        />\r\n                                                    </motion.div>\r\n                        \r\n                                                    <div className=\"mt-2\">\r\n                                                        <p className=\"size-30 color-red\">{item.projectTitle}</p>\r\n                                                        <p className=\"size-20 color-grey\">\r\n                                                            {\r\n                                                                item.tags.join(\", \")\r\n                                                            }\r\n                                                        </p>\r\n                                                    </div>\r\n                                                </motion.div>\r\n                                            </Link>\r\n                                                \r\n                                            </div>\r\n                                )})  \r\n                            }\r\n                        </div>\r\n                    })\r\n                }\r\n            </Page>\r\n            \r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProjectCarousel;","import { AnimatePresence, motion } from 'framer-motion';\r\nimport {Frame, Page} from 'framer';\r\nimport React, { useEffect, useState } from 'react';\r\nimport '../../../css/modal.css'\r\nimport '../../../css/carousel.css'\r\nimport '../../../css/misc.css'\r\nimport { AppState, IProject } from '../../../types/interfaces';\r\nimport { useSelector } from 'react-redux';\r\nimport {useHistory} from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nimport {getProject} from '../../../actions/selectors';\r\n\r\n\r\ninterface IProjectsModal{\r\n    route: string\r\n}\r\n\r\n// framer motion variants\r\nconst textMotion = {\r\n    rest:{\r\n        color: \"inherit\",\r\n        x: \"-3vw\"\r\n    },\r\n    hover: {\r\n        color: \"blue\",\r\n        x: 0\r\n    }\r\n}\r\n\r\nconst arrowMotion = {\r\n    rest: {\r\n        opacity: 0,\r\n    },\r\n    hover: {\r\n        opacity: 1,\r\n        marginRight: \"2vw\",\r\n        color: \"blue\"  \r\n    }\r\n}\r\n\r\n\r\nconst ProjectsModal: React.FC<IProjectsModal> = ({\r\n    route\r\n}) => {\r\n    const history = useHistory();\r\n\r\n    const [selectedImage, setSelectedImage] = useState<string>(\"\");\r\n    const [currentPage, setCurrentPage] = useState<number>(0);\r\n    const [cardPerPage, setCardPerPage] = useState<number>(3);\r\n    const [pagesNum, setPagesNum] = useState<number>(0);\r\n\r\n    const indicatorSize = 10\r\n    const indicatorPadding = 10\r\n    const indicatorWidth = [...Array(pagesNum)].length * indicatorSize\r\n    const indicatorPaddingTotal = ([...Array(pagesNum)].length - 1) * indicatorPadding\r\n    const indicatorWidthTotal = indicatorWidth + indicatorPaddingTotal\r\n    const indicatorAlpha = 0.3;\r\n\r\n    console.log(route);\r\n    \r\n\r\n    const {\r\n        projectRoute,\r\n        imageUrlList,\r\n        projectTitle,\r\n        projectPeriod,\r\n        tags,\r\n        builtWith,\r\n        projectLink,\r\n        descripList\r\n    } = useSelector((state: AppState): IProject => {\r\n        return getProject(state.data, route);\r\n    })\r\n\r\n    const changePagesNum = () => {\r\n        let extraPage = (imageUrlList.length % cardPerPage == 0)? 0: 1;\r\n        setPagesNum((~~(imageUrlList.length / cardPerPage) == 0)? 1 : ~~(imageUrlList.length / cardPerPage) + extraPage)\r\n    }\r\n\r\n    useEffect(() => {\r\n        changePagesNum();\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        changePagesNum()\r\n    }, [cardPerPage])\r\n\r\n    useEffect(() => {\r\n        if(route && projectRoute == \"\"){\r\n            history.push(\"/notfound\");\r\n        }\r\n    }, [route])\r\n\r\n    useEffect(() => {\r\n        if(window.innerWidth < 900){\r\n            setCardPerPage(2);\r\n        }else{\r\n            setCardPerPage(3);\r\n        }\r\n    }, [window.innerWidth])\r\n\r\n    useEffect(() => {\r\n        if(imageUrlList.length > 0){\r\n            setSelectedImage(imageUrlList[0]);\r\n        }\r\n    }, [imageUrlList])\r\n    \r\n\r\n\r\n    return (\r\n        <div className=\"projects-modal my-modal\">\r\n            <AnimatePresence>\r\n                {(route &&\r\n                    <motion.div\r\n                        className=\"modal-container\"\r\n                        exit={{transform: \"scale(0)\"}}\r\n                        initial={{transform: \"scale(0)\"}}\r\n                        animate={{transform: \"scale(1)\"}}\r\n                        layoutId={`project-container-${route}`}\r\n                        key = {`projects-modal-${route}`}  \r\n                    >\r\n                        <div className=\"row\">\r\n                            <div className=\"col-12 col-lg-6\">\r\n                                <motion.div className=\"left-view \"\r\n                                    layoutId={`project-image-${route}`}\r\n                                >   \r\n                                    <AnimatePresence exitBeforeEnter>\r\n                                        <motion.img\r\n                                            key={selectedImage}\r\n                                            // layoutId={selectedImage}\r\n                                            exit={{scale: 0.8}}\r\n                                            initial={{scale: 0.8}}\r\n                                            animate={{scale: 1}}\r\n                                            className=\"selected-img\"\r\n                                            onError = {(e:any) => {\r\n                                                e.target.onerror = null;\r\n                                                e.target.src = \"/assets/default.jpg\";\r\n                                            }}\r\n                                            src={`/assets/projects/${selectedImage}.jpg`}  \r\n                                        />\r\n                                    </AnimatePresence>\r\n                                    \r\n                                    <div className=\" p-0\">\r\n                                        <Page  \r\n                                            defaultEffect=\"wheel\"\r\n                                            currentPage={(currentPage)?currentPage:0}\r\n                                            // this is for indicators\r\n                                            onChangePage={(current, previous) => {\r\n                                                setCurrentPage(current)\r\n                                            }}\r\n                                            center={false}\r\n                                            className=\" page-container mx-auto\"\r\n                                            padding={0}\r\n                                        >\r\n                                            {\r\n                                                [...Array(pagesNum)].map((val, index) => {\r\n                                                    let startIndex = (index == 0)? 0 : index * cardPerPage;\r\n                                                    let _images = imageUrlList.slice(startIndex, startIndex + cardPerPage)\r\n\r\n                                                    return <div  className=\"row p-0 m-0 w-100 h-100\">\r\n                                                        {\r\n                                                            _images.map((src) => {\r\n                                                                return(<div className=\"col-6 col-md-6 col-lg-4 card-col\"\r\n                                                                            onClick={() => {\r\n                                                                                setSelectedImage(src);\r\n                                                                            }}\r\n                                                                        >\r\n                                                                            <img src={`/assets/projects/${src}.jpg`}\r\n                                                                            style={{\r\n                                                                                backgroundSize: \"cover\"\r\n                                                                            }}\r\n                                                                            className=\"\"\r\n                                                                            onError = {(e:any) => {\r\n                                                                                e.target.onerror = null;\r\n                                                                                e.target.src = \"/assets/default.jpg\";\r\n                                                                            }}\r\n                                                                            key={`projcarousel-${src}`}\r\n                                                                            \r\n                                                                            />\r\n                                                                            \r\n                                                                        </div>\r\n                                                            )})\r\n                                                        }\r\n                                                    </div>\r\n                                                })\r\n                                            }\r\n\r\n                                        </Page>\r\n\r\n                                    </div>\r\n                                    \r\n                                    <div className=\"carousel-controls d-flex flex-row justify-content-center \">\r\n                                        <motion.div\r\n                                            whileTap={{\r\n                                                scale: 0.8\r\n                                            }}\r\n                                        >\r\n                                            <img\r\n                                                src=\"/assets/white_arrow.png\"\r\n                                                style={{\r\n                                                    transform: \"rotate(90deg)\"\r\n                                                }}\r\n                                                className=\"carousel-btn\"\r\n                                                onClick={() => {\r\n                                                    ((currentPage - 1) < 0)?setCurrentPage(pagesNum - 1): setCurrentPage(currentPage -1)\r\n                                                }}\r\n                                            />\r\n                                        </motion.div>\r\n                                        <div className=\" indicator-wrapper  \">\r\n                                            {[...Array(pagesNum)].map((val, index) => {\r\n                                                return (\r\n                                                    <Frame\r\n                                                        // Visual & layout\r\n                                                        size={indicatorSize}\r\n                                                        radius={30}\r\n                                                        backgroundColor=\"#575757\"\r\n                                                        top=\"1vh\"\r\n                                                        style={{\r\n                                                            cursor: \"pointer\",\r\n                                                            left: `calc(50% + ${index} * ${indicatorSize +\r\n                                                            indicatorPadding}px)`\r\n                                                        }}\r\n                                                        x={-indicatorWidthTotal / 2}\r\n                                                        // Animation\r\n                                                        opacity={indicatorAlpha}\r\n                                                        animate={{\r\n                                                            opacity: currentPage === index ? 1 : indicatorAlpha\r\n                                                        }}\r\n                                                        // Required by React\r\n                                                        key={index}\r\n                                                        onClick={() => {\r\n                                                            setCurrentPage(index)\r\n                                                        }}\r\n                                                        className=\"\"\r\n                                                        drag={false}\r\n                                                    />\r\n                                                );\r\n                                            })}\r\n                                        </div>\r\n                                        <motion.div\r\n                                            whileTap={{\r\n                                                scale: 0.8\r\n                                            }}\r\n                                        >\r\n                                            <img\r\n                                                src=\"/assets/white_arrow.png\"\r\n                                                style={{\r\n                                                    transform: \"rotate(-90deg)\"\r\n                                                }}\r\n                                                className=\"carousel-btn\"\r\n                                                onClick={() => {\r\n                                                    ((currentPage + 1) >= pagesNum)? setCurrentPage(0) : setCurrentPage(currentPage + 1)\r\n                                                }}\r\n                                            />\r\n                                        </motion.div>\r\n                                    </div>\r\n\r\n                                    \r\n\r\n                                </motion.div>\r\n                            </div>\r\n                            <div className=\"col-12 col-lg-6 text-left\">\r\n                                <motion.div className=\"right-view khyay\"\r\n                                >\r\n                                    <p className=\"color-grey size-20\">{projectPeriod}</p>\r\n                                    <a href={projectLink} target=\"_blank\">  \r\n                                        <motion.div className=\"d-flex flex-row\"\r\n                                            whileHover=\"hover\"\r\n                                            whileTap=\"hover\"\r\n                                            initial=\"rest\"\r\n                                        > \r\n                                                <motion.div className=\"\"\r\n                                                    variants={arrowMotion}\r\n                                                >\r\n                                                    <img src=\"/assets/double_arrow.svg\"\r\n                                                        className=\"link-icon\"\r\n                                                    />\r\n                                                </motion.div>\r\n                                                <motion.div variants={textMotion}>\r\n                                                    <p className=\"size-40 khyay\">{projectTitle}</p>\r\n                                                </motion.div>\r\n                                            \r\n                                        </motion.div>\r\n                                    </a>\r\n                                    \r\n                                    \r\n                                    \r\n                                    <p className=\"size-20 color-grey\">{\r\n                                        tags.join(\", \")\r\n                                    }</p>\r\n\r\n                                    <div className=\"khyay built-with-wrapper\">\r\n                                        <p className=\"size-20\">Built With</p>\r\n                                        <ul >\r\n                                            {\r\n                                                builtWith.map((val) => {\r\n                                                    return <li className=\"size-15\">{val}</li>\r\n                                                })\r\n                                            }\r\n                                        </ul>\r\n                                    </div>\r\n       \r\n                                    <div style={{height: \"8vh\"}}></div>\r\n                                    <div className=\"descrip-container color-darkgrey khyay size-15\">\r\n                                        {\r\n                                            descripList.map((val) => {\r\n                                                return <p>{val}</p>\r\n                                            })\r\n                                        }\r\n                                    </div>\r\n                                </motion.div>\r\n                                \r\n\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <motion.div className=\"modal-cross\"\r\n                            whileHover={{\r\n                                scale: 1.2\r\n                            }}\r\n                            whileTap={{\r\n                                scale: 0.8\r\n                            }}\r\n                        >\r\n                            <Link to=\"/projects\">\r\n                                <svg fill=\"#000000\" xmlns=\"http://www.w3.org/2000/svg\"  viewBox=\"0 0 30 30\" width=\"240px\" height=\"240px\"><path d=\"M25.707,6.293c-0.195-0.195-1.805-1.805-2-2c-0.391-0.391-1.024-0.391-1.414,0c-0.195,0.195-17.805,17.805-18,18c-0.391,0.391-0.391,1.024,0,1.414c0.279,0.279,1.721,1.721,2,2c0.391,0.391,1.024,0.391,1.414,0c0.195-0.195,17.805-17.805,18-18C26.098,7.317,26.098,6.683,25.707,6.293z\"/><path d=\"M23.707,25.707c0.195-0.195,1.805-1.805,2-2c0.391-0.391,0.391-1.024,0-1.414c-0.195-0.195-17.805-17.805-18-18c-0.391-0.391-1.024-0.391-1.414,0c-0.279,0.279-1.721,1.721-2,2c-0.391,0.391-0.391,1.024,0,1.414c0.195,0.195,17.805,17.805,18,18C22.683,26.098,23.317,26.098,23.707,25.707z\"/></svg>\r\n                            </Link>  \r\n                            \r\n                        </motion.div>\r\n                        \r\n                    </motion.div>\r\n                    \r\n                )}\r\n\r\n                \r\n\r\n            </AnimatePresence>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProjectsModal;","import React from 'react';\r\nimport PageWithContent from '../pagewithcontent'\r\nimport Title from '../../common/title'\r\nimport ProjectCarousel from './projectCarousel';\r\nimport ProjectsModal from './projectsModal';\r\n\r\ninterface match{\r\n    match: any\r\n}\r\n\r\nconst ProjectsPage: React.FC<match> = ({\r\n    match\r\n}) => {\r\n    const {route} = match.params;\r\n\r\n    return (\r\n        <div>\r\n                <PageWithContent>\r\n                    <Title\r\n                        text = \"Player Projects\"\r\n                    />\r\n\r\n                    <ProjectCarousel\r\n                        title=\"projects\"\r\n                        route = {route}\r\n                    />\r\n\r\n                </PageWithContent>\r\n                \r\n                <ProjectsModal route={route} key={`projects-modal-${route}`}/>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ProjectsPage;","import React, { useEffect } from 'react';\r\nimport {BrowserRouter as Router, Switch, Route, Link, Redirect, useLocation} from 'react-router-dom';\r\nimport './App.css';\r\n\r\n// pages\r\nimport HomePage from './components/pages/home';\r\nimport NotFound from './components/pages/notfound';\r\nimport WorldMapPage from './components/pages/worldmap';\r\nimport AboutMePage from './components/pages/aboutme';\r\nimport EducationPage from './components/pages/education'\r\nimport ExperiencePage from './components/pages/experience';\r\nimport Environment from './components/common/environment';\r\nimport AchievemmentsPage from './components/pages/achievements';\r\nimport FindMePage from './components/pages/findme';\r\n\r\nimport Player from './components/common/player';\r\nimport { useDispatch } from 'react-redux';\r\nimport { AllActions } from './actions';\r\nimport ProjectsPage from './components/pages/projects';\r\nimport { AnimateSharedLayout } from 'framer-motion';\r\n\r\n\r\nconst LocationManager: React.FC = () => {\r\n  const location = useLocation()\r\n  const dispatch = useDispatch();\r\n\r\n  const changeMovingEnv = (moving: boolean, playerCenter: boolean, playerInvert: boolean) => {\r\n    dispatch(AllActions.EnvActions.changeMoving(moving));\r\n    dispatch(AllActions.EnvActions.setPlayerCenter(playerCenter));\r\n    dispatch(AllActions.EnvActions.setPlayerInvert(playerInvert));\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log(location.pathname)\r\n    const path: string = location.pathname;\r\n\r\n    if(path == \"/\"){\r\n      changeMovingEnv(true, true, false);\r\n      dispatch(AllActions.EnvActions.setBackWorld(false));\r\n    }else if(path == \"/worldmap\"){\r\n      changeMovingEnv(false, false, true);\r\n      dispatch(AllActions.EnvActions.setBackWorld(false));\r\n    }else if([\r\n      '/aboutme',\r\n      '/education',\r\n      '/experience',\r\n      '/achievements',\r\n      '/projects',\r\n      '/findme'\r\n    ].includes(path) || path.match(/\\/(projects|achievements)(\\/.*)*/)){\r\n      changeMovingEnv(true, false, false);\r\n      dispatch(AllActions.EnvActions.setBackWorld(true));\r\n    }else{\r\n      changeMovingEnv(false, true, true);\r\n      dispatch(AllActions.EnvActions.setBackWorld(false));\r\n    }\r\n  }, [location])\r\n\r\n  return (\r\n    <div>\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <AnimateSharedLayout type=\"crossfade\">\r\n        <Router basename={process.env.PUBLIC_URL}>\r\n          <LocationManager/>\r\n          <Switch>\r\n              <Route\r\n                exact = {true}\r\n                path = \"/\"\r\n                component = {HomePage}\r\n              />\r\n              <Route\r\n                exact\r\n                path = \"/worldmap\"\r\n                component = {WorldMapPage}\r\n              />\r\n              <Route\r\n                exact\r\n                path = \"/aboutme\"\r\n                component = {AboutMePage}\r\n              />\r\n              <Route\r\n                exact\r\n                path = \"/education\"\r\n                component = {EducationPage}\r\n              />\r\n              <Route\r\n                exact\r\n                path = \"/experience\"\r\n                component = {ExperiencePage}\r\n              />\r\n              <Route\r\n                exact\r\n                path = {[\"/achievements/:route\", \"/achievements\"]}\r\n                component = {AchievemmentsPage}\r\n              />\r\n\r\n              <Route\r\n                exact\r\n                path = {[\"/projects/:route\", \"/projects\"]}\r\n                component={ProjectsPage}\r\n              />\r\n\r\n              <Route\r\n                exact\r\n                path=\"/findme\"\r\n                component={FindMePage}\r\n              />\r\n\r\n              <Route\r\n                component = {NotFound}\r\n              />       \r\n          </Switch>\r\n\r\n          <Player/>\r\n\r\n          <Environment/>\r\n\r\n        </Router>\r\n      </AnimateSharedLayout>\r\n      \r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { CHANGE_ENV, CHANGE_MOVING, SET_BACKWORLD, SET_PLAYER_CENTER, SET_PLAYER_INVERT } from \"../actions/actiontypes\";\r\nimport {IEnvState, TEnvActionTypes} from '../types/interfaces'\r\n\r\nconst min = 0;\r\nconst max = 2;\r\nconst rand = Math.floor(Math.random() * (max - min + 1)) + min;\r\n\r\nconst bgs = [\r\n    \"cyber\",\r\n    \"forest\",\r\n    \"retro\"\r\n]\r\n\r\nconst initialEnvState:IEnvState = {\r\n    moving: true,\r\n    playerCenter: true,\r\n    envBg: bgs[rand],\r\n    bgCount: max + 1,   // 3\r\n    bgList: bgs,\r\n    backToWorld: false,\r\n    playerInvert: false\r\n}\r\n\r\n\r\nexport default function envReducer(state : IEnvState = initialEnvState, action: TEnvActionTypes){\r\n    switch(action.type){\r\n        case CHANGE_MOVING:\r\n            return {\r\n                ...state,\r\n                moving: action.payload\r\n            }\r\n        case SET_PLAYER_CENTER:\r\n            return{\r\n                ...state,\r\n                playerCenter: action.payload\r\n            \r\n            }\r\n        case CHANGE_ENV:\r\n            return {\r\n                ...state,\r\n                envBg: action.payload\r\n                \r\n            }\r\n        case SET_BACKWORLD:\r\n            return {\r\n                ...state,\r\n                backToWorld: action.payload\r\n                \r\n            }\r\n        case SET_PLAYER_INVERT:\r\n            return {\r\n                ...state,\r\n                playerInvert: action.payload\r\n                \r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import {IDataState} from '../types/interfaces';\r\nimport data from '../data/data.json';\r\n\r\nconsole.log(data)  \r\n\r\nconst initialDataState: IDataState = data;\r\n\r\nexport default function dataReducer(state: IDataState = initialDataState, action: any){\r\n    return state;\r\n}  ","import { combineReducers } from 'redux'\r\nimport envReducer from './envReducers'\r\nimport dataReducer from './dataReducers';\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    env: envReducer,\r\n    data: dataReducer\r\n})\r\n\r\n\r\nexport default rootReducer;\r\n\r\n","import {createStore} from 'redux';\r\nimport rootReducer from '../reducers/';\r\n\r\nexport const Store = createStore(rootReducer);\r\n\r\nexport default Store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from 'react-redux';\r\nimport store from './store';\r\n\r\nReactDOM.render(\r\n  <Provider store = {store}>\r\n    <App/>\r\n  </Provider>,\r\n  // <React.StrictMode>\r\n  //   <App />\r\n  // </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}